{"version":3,"file":"449.0149857c5c283f0f.js","mappings":"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zD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGR,CACIv6B,KAAM,SACNqxD,YAAY,EACZpzD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGR,CACIv6B,KAAM,UACNqxD,YAAY,EACZpzD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGR,CACIv6B,KAAM,QACNqxD,YAAY,EACZpzD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGR,CACIv6B,KAAM,SACNqxD,YAAY,EACZpzD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGR,CACIv6B,KAAM,QACNqxD,YAAY,EACZpzD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGR,CACIv6B,KAAM,cACNqxD,YAAY,EACZpzD,MAAOo2C,EAAUE,QACjBha,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aAKZ,MAAM+2B,GACF51D,YAAYu9C,EAAQvzC,EAAM60B,EAAQg3B,GACR,iBAAXtY,IACPA,EAASmY,GAAUp0D,KAAKw0D,GACbA,EAAGxxD,OAASi5C,IAG3Br9C,KAAK61D,YAAcxY,EAAO1e,OAC1B3+B,KAAKm8C,UAAYryC,EACjB9J,KAAK2+B,OAASA,EACd3+B,KAAK21D,aAAeA,EACpB31D,KAAKunB,MAAQvnB,KAAK81D,oBAAoBzY,EAAQvzC,EAAM9J,KAAK2+B,OAC7D,CACAm3B,oBAAoBzY,EAAQvzC,EAAM60B,GAM9B,IAAIo3B,EACJ,OANsB,iBAAX1Y,IACPA,EAASmY,GAAUp0D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","names":["PagesComponent","constructor","userService","this","ngOnInit","onMenuChange","subscribe","menus","request","core","selectors","i0","none","selector","querySelector","x","Array","from","empty","querySelectorAll","matches","childMatcher","node","find","prototype","childFirst","firstElementChild","filter","children","update","length","EnterNode","parent","datum","ownerDocument","namespaceURI","_next","_parent","__data__","bindIndex","group","enter","exit","data","i","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","Map","keyValues","call","has","set","get","delete","ascending","a","b","NaN","appendChild","child","insertBefore","next","xhtml","svg","xlink","xml","xmlns","name","prefix","indexOf","slice","namespaces","space","local","attrRemove","removeAttribute","attrRemoveNS","fullname","removeAttributeNS","attrConstant","value","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","apply","arguments","attrFunctionNS","defaultView","document","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","n","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","parentNode","lower","previousSibling","firstChild","creatorInherit","uri","documentElement","createElement","createElementNS","creatorFixed","namespace","constantNull","removeChild","selection_cloneShallow","clone","cloneNode","selection_cloneDeep","onRemove","typename","on","__on","o","j","m","type","removeEventListener","listener","options","onAdd","contextListener","event","addEventListener","push","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","join","splice","contains","root","Selection","groups","parents","_groups","_parents","selection","select","subgroups","subnode","subgroup","selectAll","arrayAll","array","selectorAll","selectChild","match","childFind","selectChildren","childrenFilter","matcher","bind","constant","enterGroup","updateGroup","previous","i1","_enter","_exit","map","sparse","onenter","onupdate","onexit","append","merge","order","Error","groups0","groups1","m0","Math","min","merges","group0","group1","selection_selection","compareDocumentPosition","sort","compare","compareNode","sortgroups","sortgroup","callback","nodes","size","each","attr","getAttributeNS","property","classed","text","html","create","creator","insert","before","deep","t","typenames","parseTypenames","dispatch","Symbol","iterator","noop","_","test","Dispatch","c","concat","T","types","hasOwnProperty","copy","that","args","preventDefault","stopImmediatePropagation","factory","extend","definition","Object","Color","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","l","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","r","g","opacity","rgbConvert","rgb_formatHex","hex","rgb_formatRgb","isNaN","max","round","toString","h","s","Hsl","hslConvert","hsl2rgb","m1","m2","basis","t1","v0","v1","v2","v3","t2","t3","define","channels","assign","displayable","formatHsl","color_formatHsl","k","pow","darker","hsl","nogamma","d","linear","rgbGamma","y","gamma","exponential","start","end","colorRgb","rgbSpline","spline","colors","genericArray","nb","na","Date","setTime","values","floor","reA","reB","source","am","bm","bs","bi","lastIndex","q","index","number","one","zero","date","isNumberArray","ArrayBuffer","isView","DataView","numberArray","isArray","valueOf","object","sourceEvent","undefined","currentTarget","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","rect","left","clientLeft","top","clientTop","pageX","pageY","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","f","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","e","nap","t0","Infinity","sleep","poke","clearTimeout","clearInterval","setInterval","elapsed","stop","TypeError","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","id","timing","schedules","__transition","self","tween","state","tick","duration","ease","schedule","init","active","svgNode","degrees","PI","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","sqrt","atan2","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","scale","interpolateTransformCss","parseCss","DOMMatrix","WebKitCSSMatrix","isIdentity","decompose","interpolateTransformSvg","parseSvg","transform","baseVal","consolidate","matrix","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","interpolateNumber","interpolateRgb","interpolateString","interpolate","value1","string00","interpolate0","string1","string0","string10","attrTweenNS","attrInterpolateNS","_value","attrTween","attrInterpolate","delayFunction","delayConstant","durationFunction","durationConstant","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","every","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","textTween","textInterpolate","removeFunction","easeConstant","easeVarying","Promise","resolve","reject","cancel","interrupt","defaultTiming","cubicInOut","BrushEvent","target","mode","defineProperties","enumerable","configurable","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","abs","brush_max","number1","number2","X","handles","input","output","xy","Y","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","ctrlKey","button","defaultExtent","hasAttribute","viewBox","width","height","defaultTouchable","navigator","maxTouchPoints","__brush","delta","lo","hi","mid","ascendingComparator","center","right","e10","e5","e2","tickIncrement","count","step","power","log","LN10","error","tickStep","step0","step1","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","newInterval","floori","offseti","field","ceil","d0","d1","offset","range","isFinite","millisecond","getMilliseconds","getUTCSeconds","getSeconds","getMinutes","getHours","setHours","setDate","getDate","getTimezoneOffset","weekday","getDay","sunday","monday","thursday","setMonth","getMonth","getFullYear","year","setFullYear","setUTCSeconds","getUTCMinutes","setUTCMinutes","getUTCHours","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcThursday","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","ticker","month","week","day","hour","minute","tickIntervals","second","tickInterval","bisector","ticks","reverse","utcTicks","utcTickInterval","utcMonth","utcWeek","utcDay","utcHour","utcMinute","timeTicks","timeTickInterval","localDate","H","M","S","L","utcDate","UTC","newDate","locale","timeFormat","pads","numberRe","percentRe","requoteRe","pad","fill","sign","requote","replace","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","u","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseQuarter","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","p","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","dISO","timeThursday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatYearISO","formatFullYear","formatFullYearISO","formatZone","z","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","UTCdISO","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCYearISO","formatUTCFullYear","formatUTCFullYearISO","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","defaultLocale","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","A","formatWeekday","formatShortMonth","B","formatMonth","G","I","formatPeriod","formatQuarter","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","formatUTCQuarter","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newFormat","specifier","charCodeAt","charAt","newParse","utcFormat","utcParse","bisectRight","bisect","unit","normalize","constants","bimap","domain","r0","r1","polymap","clamp","unknown","continuous","transformer","untransform","piecewise","interpolateValue","rescale","clamper","invert","rangeRound","interpolateRound","initRange","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickFormat","nice","x0","x1","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","prefixExponent","re","formatSpecifier","FormatSpecifier","align","symbol","comma","precision","formatDecimalParts","toExponential","coefficient","exponent","toFixed","toLocaleString","toPrecision","formatRounded","toUpperCase","formatPrefix","prefixes","linearish","precisionPrefix","precisionRound","precisionFixed","prestep","maxIter","grouping","thousands","substring","formatGroup","Number","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","formatTypes","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","implicit","ordinal","band","bandwidth","ordinalRange","paddingInner","paddingOuter","sequence","pointish","quantileSorted","valueof","value0","quantile","thresholds","threshold","invertExtent","quantiles","pi","tau","epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","Linear","context","_context","defined","curve","curveLinear","line","buffer","defined0","lineStart","lineEnd","pointX","pointY","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","_line","_point","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","ax","ay","bx","by","kc","lc","centroid","sortValues","descending","pie","sum","arcs","pa","clampa","clampi","clamph","clampt","formatHex8","color_formatHex8","rgb_formatHex8","ctx_r0","_r4","ctx_r3","ctx_r5","ctx_r6","_r3","ctx_r2","ctx_r4","ctx_r1","ctx_r12","$implicit","_r13","ctx_r14","ctx_r15","legendItem_r3","_c24","_c25","_r6","_r8","ctx_r7","_r17","ctx_r16","ctx_r18","_r22","ctx_r21","_r11","ctx_r10","_r5","ctx_r8","_r12","ctx_r11","ctx_r13","_r19","_r7","_r9","ctx_r19","_r21","ctx_r20","ctx_r22","_r26","ctx_r25","_c40","throttle","func","wait","result","later","leading","remaining","trailing","throttleable","descriptor","defineProperty","PlacementTypes","Top","Bottom","Left","Right","Center","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","horizontalPosition","PositionHelper","static","innerHeight","caretDimensions","popoverPosition","innerWidth","placement","spacing","flip","elmDim","hostDim","calculateVerticalCaret","calculateHorizontalCaret","calculateVerticalAlignment","calculateHorizontalAlignment","shouldFlip","TooltipContentComponent","element","renderer","platformId","cssClasses","clz","cssClass","ngAfterViewInit","position","isPlatformBrowser","nativeElm","nativeElement","host","checkFlip","positionContent","showCaret","positionCaret","addClass","setStyle","caretElm","determinePlacement","onWindowResize","ɵfac","PLATFORM_ID","ɵcmp","_c0","_t","ctx","i2","styles","__decorate","InjectionRegisteryService","injectionService","defaults","components","getByType","bindings","createByType","assignDefaults","component","injectComponent","register","destroy","instance","compsByType","componentType","idx","destroyAll","destroyByType","comps","appendComponent","inputs","outputs","InjectionService","applicationRef","componentFactoryResolver","injector","container","globalRootViewContainer","getRootViewContainer","_container","setRootViewContainer","getComponentRootNode","isViewContainerRef","hostView","rootNodes","location","getRootViewContainerNode","projectComponentBindings","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","appendLocation","portalHost","DomPortalOutlet","portal","ComponentPortal","componentRef","attach","ɵprov","TooltipService","super","LegendPosition","Below","LegendType","ScaleLegend","Legend","ScaleType","Time","Ordinal","Quantile","ScaleLegendComponent","horizontal","ngOnChanges","changes","gradientValues","gradientString","gradient","splits","pairs","forEach","decls","formatLabel","label","toLocaleDateString","escapeLabel","LegendEntryComponent","isActive","EventEmitter","activate","deactivate","toggle","trimmedLabel","formattedLabel","onMouseEnter","emit","onMouseLeave","LegendComponent","cd","labelClick","labelActivate","labelDeactivate","legendEntries","markForCheck","getLegendEntries","items","findIndex","getColor","entry","activeEntries","item","trackBy","ChartComponent","showLegend","animations","legendLabelClick","legendLabelActivate","legendLabelDeactivate","legendColumns","legendType","getLegendType","legendOptions","chartWidth","view","legendWidth","scaleType","ngContentSelectors","encapsulation","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","ɵdir","isDate","BaseChartComponent","chartElement","scheme","schemeType","isPlatformServer","bindWindowResizeEvent","visibilityObserver","ngOnDestroy","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","formatDates","series","resizeSubscription","subscription","fromEvent","pipe","debounceTime","seriesItem","seriesItemCopy","extra","JSON","stringify","Orientation","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","orient","attrs","trimLabel","reduceTicks","maxTicks","reduced","modulus","TextAnchor","Start","Middle","End","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","rotateTicks","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","maxTicksLength","maxAllowedLength","approxHeight","updateDims","ticksElement","getTicks","tickFormatting","angle","getRotationAngle","adjustedScale","textTransform","tickLength","tickTrim","wordWidth","baseWidth","maxBaseWidth","getMaxTicks","maxScaleTicks","tickValues","tickWidth","tickTransform","gridLineTransform","_c4","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","stroke","orientation","xAxisTickCount","emitTicksHeight","newLabelOffset","roundedRect","tl","tr","bl","br","retval","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","getApproximateAxisWidth","tickSpacing","referenceLines","setReferencelines","refMin","refMax","referenceAreaPath","gridLineWidth","tickHeight","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","emitTicksWidth","AxesModule","ɵmod","ɵinj","CommonModule","StyleTypes","popover","tooltip","ShowTypes","all","focus","mouseover","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","tooltipType","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","tooltipImmediateExit","show","hide","listensForFocus","listensForHover","hideTooltip","onFocus","showTooltip","onBlur","onMouseClick","immediate","userAgent","createBoundOptions","addHideListeners","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","destroyFn","title","tooltipTitle","template","tooltipTemplate","tooltipContext","TooltipModule","imports","cache","random","BarOrientation","Vertical","Horizontal","SvgLinearGradientComponent","CircleComponent","onClick","classNames","SeriesType","Standard","Stacked","CircleSeriesComponent","barVisible","barOrientation","placementTypes","styleTypes","isSSR","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","seriesName","tooltipLabel","xScale","yScale","radius","gradientStops","getGradientStops","getTooltipText","getTooltipMinMaxText","activateCircle","deactivateCircle","trigger","animate","changeDetection","SvgRadialGradientComponent","endOpacity","stops","stopsInput","stopsDefault","startOpacity","AreaComponent","animationsLoaded","hasGradient","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","easeOutExpo","countFrom","countTo","countDecimals","countDuration","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","cancelAnimationFrame","animationReq","valueFormatting","global","MouseEvent","createMouseEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","groupName","mouseMove","xPos","closestIndex","findClosestPointIndex","closestPoint","xSet","lastAnchorPos","ev","tooltipAnchor","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","getToolTipText","tooltipItem","_c18","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","includes","scaleTime","scaleLinear","scalePoint","brushX","dim","touchending","extent","touchable","keys","listeners","handleSize","initialize","handle","redraw","started","touchmoved","touchended","emitter","clean","Emitter","touches","w0","w1","n0","n1","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","N","E","shifting","shiftKey","points","identifier","pointer","point0","pts","move","beforestart","moved","ended","keydowned","keyCode","noevent","keyupped","__noselect","MozUserSelect","dragDisable","changedTouches","cur","nopropagation","yesdrag","noclick","dragEnable","selection0","selection1","clear","starting","keyModifiers","newDomain","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","getTotal","reduce","total","roundedTotal","getLegendItems","displayLabel","origialLabel","ChartCommonModule","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","customColors","cs","colorDomain","generateColorScheme","colorScale","scaleQuantile","scaleOrdinal","valueScale","formattedValue","found","mapping","getLinearGradientStops","colorValueScale","scaleBand","endColor","startColor","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","getScaleType","checkDateType","sortLinear","direction","sortByDomain","bVal","aIdx","bIdx","sortByTime","aDate","getTime","bDate","AreaSeriesComponent","baseValue","stacked","normalized","currentArea","startingArea","updateGradient","xProperty","d0values","d1values","isInactive","AreaChartStackedComponent","legend","legendTitle","xAxis","yAxis","timeline","trimXAxisTicks","trimYAxisTicks","rotateXAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","seriesType","showXAxisLabel","showYAxisLabel","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","xScaleMin","xScaleMax","yScaleMin","yScaleMax","updateDomain","updateHoveredVertical","hoveredVertical","deactivateAll","hideCircles","opts","updateYAxisWidth","updateXAxisHeight","onActivate","entries","onDeactivate","dirIndex","AreaChartModule","BarComponent","roundEdges","noBarWhenZero","hideBar","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarChartType","Normalized","D0Types","positive","negative","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","SeriesHorizontal","showDataLabel","dataLabelWidthChanged","barsForDataLabels","updateTooltipSettings","d0Type","bars","getLabel","bar","offset0","offset1","ariaLabel","tooltipText","dataLabelFormatting","updateDataLabels","section","totalPositive","totalNegative","dataItem","trackDataLabelBy","barLabel","click","BarHorizontalComponent","barPadding","dataLabelMaxWidth","onDataLabelMaxWidthChanged","fromLegend","SeriesVerticalComponent","dataLabelHeightChanged","BarVerticalComponent","dataLabelMaxHeight","yAxisTicks","some","onDataLabelMaxHeightChanged","BarChartModule","rfdc","BoxChartModule","BubbleChartModule","HeatMapModule","LineComponent","initialPath","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","hasRange","getRangeGenerator","outerPath","gradientUrl","areaGradientStops","LineChartComponent","autoScale","LineChartModule","PieLabelComponent","labelTrim","labelTrimSize","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","startRadius","explodeSlices","innerPos","pos","midAngle","PieArcComponent","pointerEvents","dblclick","getPointerEvents","calc","calculateArc","radialGradientId","updateAnimation","_current","copyOfD","interpolater","_timeout","onDblClick","stopPropagation","nativeEvent","PieSeriesComponent","trimLabels","maxLabelLength","arcData","calculateLabelPositions","defaultTooltipText","outerArc","factor","pieData","labelPositions","labelVisible","minDistance","myArc","showLabels","getTooltipTitle","labelText","AdvancedPieChartComponent","getDomain","yOffset","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","gridSize","len","minWidth","rows","cols","gridLayout","designatedTotal","res","cardWidth","cardHeight","PieGridSeriesComponent","layout","getArcs","other","class","PieGridComponent","getSeries","baselineLabelHeight","PieChartModule","PolarChartModule","VERDANA_FONT_WIDTHS_16_PX","C","F","J","K","O","P","R","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","transformBand","paddedValue","setPadding","bandPath","scaleText","startCount","medianSize","repeat","decs","textEl","resizeScale","calculateTextWidth","fontFamilyKey","defaultWidth","acc","curr","_c45","invertColor","d3_color","shadeRGBColor","CardSeriesComponent","innerPadding","emptyColor","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","bandColor","textColor","NumberCardComponent","clickable","observers","NumberCardModule","TreeMapModule","GaugeModule","NgxChartsModule","ngxChartsPolyfills","SVGElement","HTMLDivElement","DashboardModule","ThemeModule","Angular2SmartTableModule","StatusCardComponent","http","onSwitch","post","routes","DashboardComponent","theme","ngAfterContentInit","elementsByClassName","getElementsByTagName","elementsByClassNameKey","themeSubscription","getJsTheme","config","variables","colorScheme","primaryLight","infoLight","successLight","warningLight","dangerLight","body","loadChildren","then","SystemModule","UserModule","ContentModule","TaxonomyModule","DecorationModule","__webpack_require__","MediaModule","PluginModule","CommentModule","PagesModule","RouterModule","_Group","_tweens","_tweensAddedDuringUpdate","getAll","tweenId","removeAll","getId","preserve","tweenIds","TWEEN","_isPlaying","Group","_nextId","nextId","process","hrtime","Tween","_object","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_repeat","_repeatDelayTime","_yoyo","_reversed","_delayTime","_startTime","_easingFunction","Easing","None","_interpolationFunction","Interpolation","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onRepeatCallback","_onCompleteCallback","_onStopCallback","_group","isPlaying","to","properties","stopChainedTweens","numChainedTweens","amount","times","repeatDelay","yoyo","easing","easingFunction","interpolation","interpolationFunction","chain","onStart","onUpdate","onRepeat","onComplete","onStop","tmp","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","Back","Bounce","fn","Utils","Bezier","pw","bn","Bernstein","CatmullRom","fc","Factorial","p2","p3","__WEBPACK_AMD_DEFINE_RESULT__","module","copyBuffer","Buffer","byteOffset","exports","circles","rfdcCircles","refs","refsNew","proto","cloneProto","cloneArray","o2","a2","cloneDeep","baseClone","CLONE_DEEP_FLAG","CompleterListItemCmp_span_1_Template","rf","ɵngcc0","part_r1","isMatch","matchClass","_c1","CompleterCmp_div_3_div_1_div_1_Template","_textSearching","CompleterCmp_div_3_div_1_div_2_Template","_textNoResults","CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template","item_r10","image","CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template","CompleterCmp_div_3_div_1_div_3_div_2_Template","CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template","description","searchStr","_c2","CompleterCmp_div_3_div_1_div_3_Template","rowIndex_r11","ctx_r9","CompleterCmp_div_3_div_1_Template","searchActive_r3","searching","items_r2","displaySearching","CompleterCmp_div_3_Template","isInitialized_r4","searchInitialized","isOpen_r5","isOpen","displayNoResults","isNil","CompleterBaseData","Subject","_searchFields","_titleField","_descriptionField","_imageField","searchFields","titleField","descriptionField","imageField","convertToItem","formattedText","formattedDesc","extractTitle","extractValue","originalObject","extractMatches","term","extractBySearchFields","titlePart","obj","processResults","searchField","LocalData","dataSourceChange","_data","savedTerm","Observable","catchError","search","RemoteData","_remoteUrl","remoteSearch","_urlFormater","_dataField","remoteUrl","urlFormater","dataField","requestOptions","_requestOptions","url","encodeURIComponent","LocalDataFactory","token","RemoteDataFactory","ɵngcc1","__metadata","HttpClient","CompleterService","localDataFactory","remoteDataFactory","remote","CtrCompleter","selected","highlighted","opened","dropdown","_hasHighlighted","_hasSelected","_cancelBlur","_isOpen","_autoHighlightIndex","registerList","registerDropdown","onHighlighted","onSelected","clearList","onDataSourceChange","hasSelected","selectCurrent","nextRow","prevRow","hasHighlighted","cancelBlur","isCancelBlur","open","autoHighlightIndex","highlightRow","Output","CtrRowItem","row","CtrDropdown","completer","el","isScrollOn","_rowMouseDown","css","maxHeight","overflowY","onMouseDown","registerRow","arrIndex","_row","unregisterRow","rowIndex","currHighlighted","setHighlighted","getDataItem","rowTop","dropdownRowTop","dropdownScrollTopTo","getNativeElement","dropdownHeight","bottom","dropdownRowOffsetHeight","paddingTop","rowMouseDown","nextRowIndex","scrollTop","parentElement","marginTop","marginBottom","hostBindings","$event","HostListener","Function","__param","Host","ElementRef","NgZone","CtrInput","ngModel","clearSelected","clearUnselected","overrideSuggested","fillHighlighted","openOnFocus","openOnClick","selectOnClick","selectOnFocus","ngModelChange","_searchStr","_displayStr","blurTimer","valueChanges","keyupHandler","restoreSearchValue","pasteHandler","keydownHandler","which","handleSelection","take","doBlur","onfocus","ɵngcc2","Input","NgModel","CtrListContext","CtrList","templateRef","viewContainer","ctrListMinSearchLength","ctrListPause","ctrListAutoMatch","ctrListAutoHighlight","ctrListDisplaySearching","_dataService","searchTimer","clearTimer","_initialValue","viewRef","createEmbeddedView","dataService","newService","dataServiceSubscribe","initialValue","initialItem","refreshTemplate","searchTimerComplete","_clear","destroyed","detectChanges","getBestMatchIndex","bestMatch","toLocaleLowerCase","startsWith","console","TemplateRef","ViewContainerRef","ChangeDetectorRef","CtrRow","_rowIndex","_item","ctrRow","removeClass","Renderer2","CompleterListItemCmp","parts","matchStr","matchPos","startIndex","matchText","matchPart","vars","consts","dependencies","ɵngcc3","COMPLETER_CONTROL_VALUE_ACCESSOR","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CompleterCmp","completerService","cdr","inputName","inputId","pause","minSearchLength","maxChars","placeholder","autoMatch","disableInput","autofocus","autoHighlight","blurEvent","focusEvent","keyup","keydown","control","FormControl","_onTouchedCallback","_onChangeCallback","_focus","_open","ngAfterViewChecked","ctrInput","onTouched","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","datasource","textNoResults","textSearching","onKeyup","onKeydown","onChange","close","blur","Ng2CompleterModule_1","viewQuery","first","fieldTabindex","inputClass","features","ViewChild","providers","Ng2CompleterModule","ngModule","FormsModule","CIcon__svg_svg_0_Template","CIcon__svg_svg_1_Template","CIcon__svg_svg_2_Template","CIcon__svg_svg_3_Template","CIcon__svg_svg_4_Template","_c3","_c5","_c6","_c7","_c8","AngularMultiSelect_span_5_Template","settings","AngularMultiSelect_span_6_span_1_Template","item_r27","ctx_r26","labelKey","AngularMultiSelect_span_6_Template","selectedItems","trackByFn","AngularMultiSelect_span_7_div_1_span_1_Template","item_r30","ctx_r32","AngularMultiSelect_span_7_div_1_span_2_Template","ctx_r33","badgeTempl","AngularMultiSelect_span_7_div_1_Template","_r37","restoredCtx","k_r31","ctx_r36","onItemClick","ctx_r29","AngularMultiSelect_span_7_Template","AngularMultiSelect_div_8_div_1_span_1_Template","item_r39","ctx_r41","AngularMultiSelect_div_8_div_1_span_2_Template","ctx_r42","AngularMultiSelect_div_8_div_1_Template","_r46","k_r40","ctx_r45","ctx_r38","badgeShowLimit","AngularMultiSelect_div_8_Template","AngularMultiSelect_span_9_Template","AngularMultiSelect_span_10_Template","_r48","clearSelection","AngularMultiSelect_span_11_Template","AngularMultiSelect_span_12_Template","AngularMultiSelect_div_18_input_1_Template","_r51","ctx_r50","toggleSelectAll","ctx_r49","isSelectAll","limitSelection","AngularMultiSelect_div_18_Template","showCheckbox","selectAllText","unSelectAllText","AngularMultiSelect_img_19_Template","AngularMultiSelect_div_20_span_3_Template","_r59","ctx_r58","clearSearch","ctx_r52","AngularMultiSelect_div_20_span_4_Template","_r61","ctx_r60","resetInfiniteSearch","ctx_r53","AngularMultiSelect_div_20_input_5_Template","_r64","ctx_r63","ctx_r65","filterGroupedList","ctx_r54","searchPlaceholderText","AngularMultiSelect_div_20_input_6_Template","_r68","ctx_r67","ctx_r69","filteritems","ctx_r55","AngularMultiSelect_div_20_input_7_Template","_r72","ctx_r71","ctx_r73","onKeyUp","ctx_r56","AngularMultiSelect_div_20_c_templateRenderer_8_Template","ctx_r57","searchTempl","AngularMultiSelect_div_20_Template","lazyLoading","groupBy","AngularMultiSelect_div_21_div_1_Template","_r77","ctx_r76","toggleFilterSelectAll","ctx_r74","isFilterSelectAll","filterSelectAllText","filterUnSelectAllText","AngularMultiSelect_div_21_div_2_Template","_r79","ctx_r78","ctx_r75","AngularMultiSelect_div_21_Template","filterLength","singleSelection","groupedData","AngularMultiSelect_div_22_div_1_Template","_r82","ctx_r81","toggleInfiniteFilterSelectAll","ctx_r80","isInfiniteFilterSelectAll","AngularMultiSelect_div_22_Template","infiniteFilterLength","AngularMultiSelect_div_23_div_1_Template","_r85","ctx_r84","addFilterNewItem","ctx_r83","addNewButtonText","AngularMultiSelect_div_23_Template","addNewItemOnFilter","AngularMultiSelect_div_24_li_2_input_1_Template","item_r87","ctx_r89","isSelected","disabled","_c9","AngularMultiSelect_div_24_li_2_Template","_r92","i_r88","ctx_r91","ctx_r86","AngularMultiSelect_div_24_Template","ctx_r17","AngularMultiSelect_div_25_li_3_input_1_Template","item_r95","ctx_r97","AngularMultiSelect_div_25_li_3_Template","_r100","i_r96","ctx_r99","ctx_r94","_c10","AngularMultiSelect_div_25_Template","_r102","ctx_r101","onScrollEnd","ctx_r103","_r93","randomSize","virtualdata","viewPortItems","AngularMultiSelect_div_26_li_2_input_1_Template","item_r105","ctx_r107","AngularMultiSelect_div_26_li_2_Template","_r110","i_r106","ctx_r109","ctx_r104","itemTempl","AngularMultiSelect_div_26_Template","AngularMultiSelect_div_27_li_3_input_1_Template","item_r113","ctx_r115","AngularMultiSelect_div_27_li_3_Template","_r118","i_r114","ctx_r117","ctx_r112","AngularMultiSelect_div_27_Template","_r120","ctx_r119","ctx_r121","_r111","AngularMultiSelect_div_28_span_3_li_1_input_1_Template","item_r124","ctx_r128","_c11","AngularMultiSelect_div_28_span_3_li_1_Template","_r132","ctx_r131","i_r125","ctx_r130","ctx_r126","grpTitle","AngularMultiSelect_div_28_span_3_li_2_input_1_Template","ctx_r134","AngularMultiSelect_div_28_span_3_li_2_Template","ctx_r127","AngularMultiSelect_div_28_span_3_Template","AngularMultiSelect_div_28_Template","_r138","ctx_r137","ctx_r139","_r122","AngularMultiSelect_div_29_span_2_input_2_Template","item_r141","ctx_r143","AngularMultiSelect_div_29_span_2_span_6_input_2_Template","val_r146","ctx_r148","AngularMultiSelect_div_29_span_2_span_6_Template","_r151","j_r147","ctx_r150","ctx_r144","AngularMultiSelect_div_29_span_2_Template","_r153","ctx_r152","selectGroup","ctx_r140","AngularMultiSelect_div_29_Template","AngularMultiSelect_div_30_span_4_li_1_input_1_Template","item_r156","ctx_r160","_c12","AngularMultiSelect_div_30_span_4_li_1_Template","ctx_r158","AngularMultiSelect_div_30_span_4_li_2_input_1_Template","ctx_r163","AngularMultiSelect_div_30_span_4_li_2_Template","_r167","ctx_r166","i_r157","ctx_r165","ctx_r159","AngularMultiSelect_div_30_span_4_Template","AngularMultiSelect_div_30_Template","_r170","ctx_r169","ctx_r171","ctx_r172","ctx_r173","_r154","ctx_r23","AngularMultiSelect_div_31_span_2_input_2_Template","item_r175","ctx_r177","AngularMultiSelect_div_31_span_2_span_6_input_2_Template","val_r180","ctx_r182","_c13","AngularMultiSelect_div_31_span_2_span_6_Template","_r185","j_r181","ctx_r184","ctx_r178","AngularMultiSelect_div_31_span_2_Template","_r187","ctx_r186","ctx_r174","AngularMultiSelect_div_31_Template","ctx_r24","AngularMultiSelect_h5_32_Template","noDataLabel","_c14","_c15","tagToBody","_c16","_c17","MyException","status","ClickOutsideDirective","_elementRef","clickOutside","targetElement","DataService","filteredData","subject","setData","getData","asObservable","getFilteredData","ListFilterPipe","ds","filteredList","searchBy","applyFilter","prop","ɵpipe","pure","Item","contentQueries","Badge","Search","TemplateRenderer","CIcon","VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY","scrollThrottlingTime","scrollDebounceTime","scrollAnimationTime","checkResizeInterval","resizeBypassRefreshThreshold","modifyOverflowStyleOfParentScroll","stripedTable","VirtualScrollerComponent","changeDetectorRef","executeRefreshOutsideAngularZone","_enableUnequalChildrenSizes","useMarginInsteadOfTranslate","ssrViewportWidth","ssrViewportHeight","_bufferAmount","_items","compareItems","item1","item2","vsUpdate","vsChange","vsStart","vsEnd","calculatedScrollbarWidth","calculatedScrollbarHeight","previousViewPort","cachedPageSize","previousScrollNumberElements","isAngularUniversalSSR","scrollbarWidth","scrollbarHeight","resetWrapGroupDimensions","viewPortInfo","pageInfo","endIndex","scrollStartPosition","scrollEndPosition","maxScrollPosition","startIndexWithBuffer","endIndexWithBuffer","enableUnequalChildrenSizes","minMeasuredChildWidth","minMeasuredChildHeight","bufferAmount","_scrollThrottlingTime","updateOnScrollFunction","_scrollDebounceTime","onScroll","debounce","refresh_internal","throttleTrailing","_checkResizeInterval","addScrollEventHandlers","_horizontal","updateDirection","revertParentOverscroll","scrollElement","getScrollElement","oldParentScrollOverflow","parentScroll","_parentScroll","removeScrollEventHandlers","indexLengthChanged","cachedItemsLength","previousValue","ngDoCheck","itemsArrayChanged","refresh","invalidateAllCachedMeasurements","wrapGroupDimensions","maxChildSizePerWrapGroup","numberOfKnownWrapGroupChildSizes","sumOfKnownWrapGroupChildWidths","sumOfKnownWrapGroupChildHeights","invalidateCachedMeasurementForItem","invalidateCachedMeasurementAtIndex","cachedMeasurement","childWidth","childHeight","scrollInto","alignToBeginning","additionalOffset","animationMilliseconds","animationCompletedCallback","scrollToIndex","maxRetries","retryIfNeeded","dimensions","calculateDimensions","desiredStartIndex","itemCount","scrollToIndex_internal","scroll","calculatePadding","wrapGroupsPerPage","_childScrollDim","scrollToPosition","scrollPosition","getElementsOffset","animationRequest","currentTween","_scrollType","tweenConfigObj","newTween","getElementSize","marginLeft","marginRight","checkScrollElementResized","sizeChanged","boundingRect","previousScrollBoundingRect","widthChange","heightChange","_invisiblePaddingProperty","_offsetType","_pageOffsetType","_marginDir","_translateDir","throttled","_arguments","_this","itemsArrayModified","refreshCompletedCallback","maxRunTimes","oldViewPort","oldViewPortItems","oldRefreshCompletedCallback","scrollLengthDelta","scrollLength","oldStartItem","oldStartItemIndex","itemOrderChanged","viewport","calculateViewport","startChanged","endChanged","scrollLengthChanged","paddingChanged","scrollPositionChanged","invisiblePaddingElementRef","contentElementRef","headerElementRef","containerOffset","clientHeight","changeEventArg","handleChanged","Window","scrollingElement","disposeScrollHandler","disposeResizeHandler","checkScrollElementResizedTimer","containerElementRef","elementClientRect","scrollClientRect","countItemsPerWrapGroup","ssrChildHeight","ssrChildWidth","propertyName","childrenLength","firstOffset","getScrollStartPosition","windowScrollValue","oldWrapGroupDimensions","itemsPerWrapGroup","wrapGroupIndex","oldWrapGroupDimension","itemsChanged","arrayStartIndex","clientWidth","defaultChildWidth","defaultChildHeight","viewportWidth","viewportHeight","content","itemsPerRow","itemsPerCol","scrollOffset","maxWidthForWrapGroup","maxHeightForWrapGroup","sumOfVisibleMaxWidths","sumOfVisibleMaxHeights","clientRect","oldValue","maxVisibleWidthForWrapGroup","scrollOffsetToRemove","maxVisibleHeightForWrapGroup","itemsPerPage","pageCount_fractional","numberOfWrapGroups","defaultScrollLengthPerWrapGroup","numUnknownChildSizes","childSize","viewportLength","arrayStartIndexWithBuffer","startingWrapGroupIndex","calculatePageInfo","scrollPercentage","totalScrolledLength","startingArrayIndex_fractional","maxStart","bufferBoundary","arrayEndIndex","endIndexWithinWrapGroup","bufferSize","newPadding","newScrollLength","hostVars","exportAs","VirtualScrollerModule","useFactory","DROPDOWN_CONTROL_VALUE_ACCESSOR","AngularMultiSelect","DROPDOWN_CONTROL_VALIDATION","NG_VALIDATORS","filterPipe","onSelect","onDeSelect","onSelectAll","onDeSelectAll","onOpen","onClose","onScrollToEnd","onFilterSelectAll","onFilterDeSelectAll","onAddFilterNewItem","onGroupSelect","onGroupDeSelect","searchTerm$","chunkIndex","cachedItems","groupCachedItems","itemHeight","dropdownListYOffset","dropDownWidth","dropDownTop","dropDownBottom","dropDownLeft","defaultSettings","enableCheckAll","enableSearchFilter","classes","searchAutofocus","primaryKey","autoPosition","enableFilterSelectAll","escapeToClose","clearAll","virtualScroollInit","isDisabledItemPresent","onTouchedCallback","onChangeCallback","distinctUntilChanged","tap","filterInfiniteList","onEscapeDown","closeDropdown","selectedListHeight","selectedListElem","calculateDropdownDirection","evt","firstChange","transformData","currentValue","limit","removeSelected","addSelected","updateGroupInfo","validate","msg","clickedItem","toggleDropdown","openDropdown","searchInput","closeDropdownOnClickOut","individualData","arr","cat","removed","added","onFilterChange","cnt","groupedObj","prev","tempArr","disabledChildrens","filteredElems","virtualScroller","elem","cuppaDropdown","openTowardsTop","selectedListBounds","spaceOnTop","dropdownListElem","loading","AngularMultiSelectModule","_r2","option_r6","_r15","_r10","_r14","_r16","_r20","_r32","ctx_r30","_r35","ctx_r34","ctx_r37","_r43","ctx_r44","page_r4","item_r19","DataSource","onChangedSource","onAddedSource","onUpdatedSource","onRemovedSource","emitOnChanged","load","onChanged","onAdded","onUpdated","onRemoved","prepend","emitOnAdded","emitOnRemoved","emitOnUpdated","setSort","conf","doEmit","updateSort","setFilter","andOperator","addFilter","fieldConf","setPaging","page","perPage","setPage","action","getElements","elements","paging","getPaging","getFilter","getSort","defaultObjectComparator","defaultComparator","leftIsNumeric","rightIsNumeric","leftIsString","rightIsString","defaultNumberComparator","defaultStringComparator","localeCompare","defaultStringInclusionFilter","cellValue","cellName","sanitizedCellValue","sanitizedSearchString","defaultStringEqualsFilter","LocalFilter","filterConf","LocalPager","deepExtend","objects","src","Deferred","promise","getDeepFromObject","defaultValue","level","getPageForRowIndex","LocalDataSource","filteredAndSorted","sortConf","filters","pagingConf","reset","unshift","catch","prepareData","getFilteredAndSorted","silent","toggleItem","selectAllItems","checked","onlyFiltered","isEveryElementSelected","itemsToCheck","getSelectedItems","currentFieldConf","paginate","sortConfig","sc","dir","propA","propB","mergedData","prepareValue","Cell","column","dataSet","newValue","getColumn","getRow","getValue","getValuePrepareFunction","PREPARE","getRawValue","setValue","getTitle","isEditable","isAddable","resetValue","Row","_dataSet","isInEditing","isExpanded","cells","getCell","theCell","getCells","getIsSelected","getIsExpanded","getNewData","cell","getColumns","createCell","IColumnType","Text","Html","Custom","Column","sanitizer","classHeader","classContent","isSortable","isFilterable","sortDirection","defaultSortDirection","editor","renderComponent","getOnComponentInitFunction","onComponentInitFunction","getCompareFunction","compareFunction","valuePrepareFunction","getFilterFunction","filterFunction","getConfig","getFilterType","getFilterConfig","lookupSetting","compatKeys","determineType","DataSet","columnSettings","willSelect","createColumns","createNewRow","selectedRows","createRows","getExpandedRow","expandedRow","warn","getSelectedRow","selectedRow","getRows","getFirstRow","getLastRow","findRowByData","deselectAll","clearExpandAll","selectRow","previousIsSelected","multipleSelectRow","expandRow","previousIsExpanded","selectPreviousRow","selectFirstRow","selectLastRow","selectRowByIndex","rowsLength","willSelectFirstRow","willSelectLastRow","selectedRowIndex","newRow","Grid","createFormShown","onSelectRowSource","setSettings","setSource","detach","sourceOnChangedSubscription","sourceOnUpdatedSubscription","showActionColumn","isCurrentActionsPosition","isActionsVisible","getSetting","isMultiSelectVisible","getNewRow","getDataSet","prepareSource","processDataChange","onSelectRow","edit","confirmEmitter","deferred","newData","skipAdd","err","confirm","save","skipEdit","shouldProcessChange","determineRowToSelect","getRowIndexToSelect","shouldSkipSelection","initialSource","getInitialSort","getPageToSelect","getSelectedRows","selectAllRows","_this2","getSelectionInfo","switchPageToSelectedRowPage","dataAmount","pageToSelect","maxPageAmount","TagComponent","closeClicked","TagsListComponent","closedTag","tag","TableService","mouseMoveEvent$","ActionsTitleComponent","ref","actionsColumnTitle","grid","TitleComponent","currentDirection","dataChangedSub","dataChanges","_sort","changeSortDirection","_hideColumnClicked","ColumnTitleComponent","NgxResizerDirective","elementRef","tableService","destroyed$","takeUntil","isClicked","pointerOffset","parentOffset","siblingElement","siblingOffset","TheadTitlesRowComponent","multiSelectWidth","isHideable","showActionColumnLeft","showActionColumnRight","isResizable","getVisibleColumns","BypassSecurityTrustPipe","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","i1$1","AddButtonComponent","hiddenWhenFunction","disabledWhenFunction","bypassSecurityTrust","addNewButtonContent","addButtonContent","bypassHtml","disabledWhen","actions","hiddenWhen","FilterDefault","query","onFilter","CustomFilterComponent","customComponent","dynamicTarget","createComponent","angular2_smart_table_c5","DefaultFilter","changesSubscription","changesSubscription2","SelectFilterComponent","onFilterValues","exist","inputControl","skip","strict","angular2_smart_table_c6","NgControl","CheckboxFilterComponent","filterActive","trueVal","true","falseVal","false","resetFilter","emitEvent","CompleterFilterComponent","completerContent","inputTextChanged","i1$2","DateFilterComponent","startDate","endDate","dateBefore","dateAfter","dateEqual","filterTypeSelect","filterType","filterOptions","combineLatest","val1","val2","of","MselectFilterComponent","dropdownList","dropdownSettings","onItemSelect","updateQuery","OnItemDeSelect","i1$3","InputFilterComponent","DefaultFilterComponent","FilterComponent","TheadFitlersRowComponent","filterInputClass","TheadCreateCancelComponent","onCreate","createConfirm","onCancelCreate","createCancel","discardedData","createButtonContent","cancelButtonContent","CustomViewComponent","getPatch","rowData","ViewCellComponent","EditCellDefault","edited","stopEditing","onEdited","onStopEditing","CustomEditComponent","DefaultEditor","disableEnterKeySave","SelectEditorComponent","onSelectionChanged","TextareaEditorComponent","CheckboxEditorComponent","CompleterEditorComponent","completerStr","completerConfig","onEditedCompleter","InputEditorComponent","DefaultEditComponent","getEditorType","EditCellComponent","CellComponent","isNew","editConfirm","editCancel","TheadFormRowComponent","addInputClass","getVisibleCells","NgxSmartTableTheadComponent","isHideHeader","isHideSubHeader","TbodyCustomItemComponent","TbodyCustomComponent","custom","customActions","onCustom","TbodyExpandRowComponent","onExpandRow","onExpand","buttonContent","expand","expandRowButtonContent","TbodyEditDeleteComponent","editRowSelect","editButtonBypassSecurityTrust","editHiddenWhenFunction","editDisabledWhenFunction","deleteHiddenWhenFunction","deleteDisabledWhenFunction","deleteButtonBypassSecurityTrust","onEdit","editDisabled","onDelete","deleteDisabled","deleteConfirm","editVisible","deleteVisible","editRowButtonContent","editButtonContent","deleteRowButtonContent","deleteButtonContent","TbodySaveCancelComponent","onSave","onCancelEdit","saveButtonContent","NgxSmartTableTbodyComponent","userSelectRow","rowHover","hasChildComponent","getExpandedRowComponentFromSettings","expandedRowComponent","expandedRowChild","createCustomComponent","cmp","tableColumnsCount","actionColumn","isActionAdd","isActionEdit","isActionDelete","selectColumn","editInputClass","noDataMessage","onExpandRowClick","angular2_smart_table_c11","PagerComponent","currentPerPage","isPageOutOfBounce","processPageChange","initPages","getLast","shouldShow","getPage","getPages","pages","pagesCount","showPagesCount","middleOne","lastOne","onChangePerPage","Angular2SmartTableComponent","rowSelect","userRowSelect","afterGridInit","perPageSelect","perPageSelectLabel","selectMode","hideHeader","hideSubHeader","resizable","hideable","columnTitle","confirmSave","confirmCreate","confirmDelete","pager","display","rowClassFunction","isAllSelected","prepareSettings","initGrid","tableId","tableClass","isPagerDisplay","isIndexOutOfRange","emitSelectRow","onEditRowSelect","onUserSelectRow","emitUserSelectRow","onRowHover","onMultipleSelectRow","onSelectAllRows","_this3","subscribeToOnSelectRow","dataChangeSubscription","getNotVisibleColumns","onShowHeader","columnId","onHideHeader","createRowSelectionEvent","onSelectRowSubscription","PipesModule","CellModule","FilterModule","ReactiveFormsModule","PagerModule","TabsModule","TBodyModule","DirectivesModule","THeadModule","ServerSourceConf","endPoint","sortFieldKey","sortDirKey","pagerPageKey","pagerLimitKey","filterFieldKey","totalKey","dataKey","SORT_FIELD_KEY","SORT_DIR_KEY","PAGER_PAGE_KEY","PAGER_LIMIT_KEY","FILTER_FIELD_KEY","TOTAL_KEY","DATA_KEY","ServerDataSource","lastRequestCount","loadData","filtered","sorted","paginated","lastValueFrom","hasConfig","_hasValue","complete","EmptyError","requestElements","extractTotalFromResponse","extractDataFromResponse","rawData","headers","httpParams","HttpParams","addFilterRequestParams","addSortRequestParams","addPagerRequestParams","observe","fields","directions","eq","_assocIndexOf","assocIndexOf","ListCache","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isFunction","isObject","baseGetTag","uid","coreJsData","maskSrcKey","funcToString","toSource","reIsHostCtor","reIsNative","baseIsNative","isMasked","_getNative","getNative","_Map","_nativeCreate","Hash","hashClear","nativeCreate","hashDelete","hashGet","hashHas","hashSet","_getMapData","getMapData","isKeyable","MapCache","mapCacheClear","hash","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","LARGE_ARRAY_SIZE","_baseAssignValue","baseAssignValue","writable","assignValue","objValue","_copyObject","copyObject","props","customizer","baseIsArguments","isObjectLike","objectProto","propertyIsEnumerable","isArguments","lodash_es_isArray","freeExports","nodeType","freeModule","isBuffer","stubFalse","reIsUint","isIndex","isLength","typedArrayTags","_baseUnary","baseUnary","freeProcess","freeGlobal","require","binding","nodeIsTypedArray","nodeUtil","baseIsTypedArray","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","isTypedArray","skipIndexes","baseTimes","iteratee","isPrototype","Ctor","_nativeKeys","nativeKeys","overArg","lodash_es_isArrayLike","isArrayLike","lodash_es_keys","baseKeys","baseKeysIn","nativeKeysIn","isProto","lodash_es_keysIn","keysIn","allocUnsafe","lodash_es_stubArray","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","arrayFilter","predicate","resIndex","_arrayPush","arrayPush","getSymbolsIn","getPrototype","_baseGetAllKeys","baseGetAllKeys","keysFunc","symbolsFunc","_getAllKeys","getAllKeys","_getAllKeysIn","getAllKeysIn","_DataView","_Promise","_Set","_WeakMap","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","WeakMap","getTag","ctorString","_Uint8Array","_cloneArrayBuffer","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","reFlags","symbolProto","symbolValueOf","initCloneByTag","isDeep","cloneDataView","dataView","cloneTypedArray","typedArray","cloneRegExp","regexp","cloneSymbol","objectCreate","baseCreate","nodeIsMap","baseIsMap","nodeIsSet","baseIsSet","argsTag","funcTag","objectTag","cloneableTags","bitmask","stack","isFlat","isFull","initCloneArray","copyArray","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","isSet","subValue","isMap","arrayEach","nativeObjectToString","symToStringTag","getRawTag","isOwn","unmasked","objectToString","getPrototypeOf","arg","freeSelf","info","asyncGeneratorStep"],"sourceRoot":"webpack:///","sources":["./dashboard/app/pages/pages.component.ts","./node_modules/d3-selection/src/selector.js","./node_modules/d3-selection/src/array.js","./node_modules/d3-selection/src/selectorAll.js","./node_modules/d3-selection/src/matcher.js","./node_modules/d3-selection/src/selection/selectChild.js","./node_modules/d3-selection/src/selection/selectChildren.js","./node_modules/d3-selection/src/selection/sparse.js","./node_modules/d3-selection/src/selection/enter.js","./node_modules/d3-selection/src/selection/data.js","./node_modules/d3-selection/src/selection/sort.js","./node_modules/d3-selection/src/namespaces.js","./node_modules/d3-selection/src/namespace.js","./node_modules/d3-selection/src/selection/attr.js","./node_modules/d3-selection/src/window.js","./node_modules/d3-selection/src/selection/style.js","./node_modules/d3-selection/src/selection/property.js","./node_modules/d3-selection/src/selection/classed.js","./node_modules/d3-selection/src/selection/text.js","./node_modules/d3-selection/src/selection/html.js","./node_modules/d3-selection/src/selection/raise.js","./node_modules/d3-selection/src/selection/lower.js","./node_modules/d3-selection/src/creator.js","./node_modules/d3-selection/src/selection/insert.js","./node_modules/d3-selection/src/selection/remove.js","./node_modules/d3-selection/src/selection/clone.js","./node_modules/d3-selection/src/selection/on.js","./node_modules/d3-selection/src/selection/dispatch.js","./node_modules/d3-selection/src/selection/index.js","./node_modules/d3-selection/src/selection/select.js","./node_modules/d3-selection/src/selection/selectAll.js","./node_modules/d3-selection/src/selection/filter.js","./node_modules/d3-selection/src/constant.js","./node_modules/d3-selection/src/selection/exit.js","./node_modules/d3-selection/src/selection/join.js","./node_modules/d3-selection/src/selection/merge.js","./node_modules/d3-selection/src/selection/order.js","./node_modules/d3-selection/src/selection/call.js","./node_modules/d3-selection/src/selection/nodes.js","./node_modules/d3-selection/src/selection/node.js","./node_modules/d3-selection/src/selection/size.js","./node_modules/d3-selection/src/selection/empty.js","./node_modules/d3-selection/src/selection/each.js","./node_modules/d3-selection/src/selection/append.js","./node_modules/d3-selection/src/selection/datum.js","./node_modules/d3-selection/src/selection/iterator.js","./node_modules/d3-selection/src/select.js","./node_modules/d3-dispatch/src/dispatch.js","./node_modules/d3-drag/src/noevent.js","./node_modules/d3-color/src/define.js","./node_modules/d3-color/src/color.js","./node_modules/d3-interpolate/src/basis.js","./node_modules/d3-interpolate/src/constant.js","./node_modules/d3-interpolate/src/color.js","./node_modules/d3-interpolate/src/rgb.js","./node_modules/d3-interpolate/src/array.js","./node_modules/d3-interpolate/src/date.js","./node_modules/d3-interpolate/src/number.js","./node_modules/d3-interpolate/src/object.js","./node_modules/d3-interpolate/src/basisClosed.js","./node_modules/d3-interpolate/src/string.js","./node_modules/d3-interpolate/src/numberArray.js","./node_modules/d3-interpolate/src/value.js","./node_modules/d3-selection/src/pointer.js","./node_modules/d3-selection/src/sourceEvent.js","./node_modules/d3-timer/src/timer.js","./node_modules/d3-timer/src/timeout.js","./node_modules/d3-transition/src/transition/schedule.js","./node_modules/d3-transition/src/interrupt.js","./node_modules/d3-interpolate/src/transform/decompose.js","./node_modules/d3-interpolate/src/transform/parse.js","./node_modules/d3-interpolate/src/transform/index.js","./node_modules/d3-transition/src/transition/tween.js","./node_modules/d3-transition/src/transition/interpolate.js","./node_modules/d3-transition/src/transition/attr.js","./node_modules/d3-transition/src/transition/attrTween.js","./node_modules/d3-transition/src/transition/delay.js","./node_modules/d3-transition/src/transition/duration.js","./node_modules/d3-transition/src/transition/selection.js","./node_modules/d3-transition/src/transition/style.js","./node_modules/d3-transition/src/transition/index.js","./node_modules/d3-transition/src/transition/select.js","./node_modules/d3-transition/src/transition/selectAll.js","./node_modules/d3-transition/src/transition/filter.js","./node_modules/d3-transition/src/transition/merge.js","./node_modules/d3-transition/src/transition/transition.js","./node_modules/d3-transition/src/transition/on.js","./node_modules/d3-transition/src/transition/styleTween.js","./node_modules/d3-transition/src/transition/text.js","./node_modules/d3-transition/src/transition/textTween.js","./node_modules/d3-transition/src/transition/remove.js","./node_modules/d3-transition/src/transition/ease.js","./node_modules/d3-transition/src/transition/easeVarying.js","./node_modules/d3-transition/src/transition/end.js","./node_modules/d3-transition/src/selection/transition.js","./node_modules/d3-ease/src/cubic.js","./node_modules/d3-transition/src/selection/index.js","./node_modules/d3-transition/src/selection/interrupt.js","./node_modules/d3-brush/src/constant.js","./node_modules/d3-brush/src/event.js","./node_modules/d3-brush/src/noevent.js","./node_modules/d3-brush/src/brush.js","./node_modules/d3-array/src/ascending.js","./node_modules/d3-array/src/bisector.js","./node_modules/d3-array/src/ticks.js","./node_modules/d3-time/src/duration.js","./node_modules/d3-time/src/interval.js","./node_modules/d3-time/src/millisecond.js","./node_modules/d3-time/src/second.js","./node_modules/d3-time/src/minute.js","./node_modules/d3-time/src/hour.js","./node_modules/d3-time/src/day.js","./node_modules/d3-time/src/week.js","./node_modules/d3-time/src/month.js","./node_modules/d3-time/src/year.js","./node_modules/d3-time/src/utcMinute.js","./node_modules/d3-time/src/utcHour.js","./node_modules/d3-time/src/utcDay.js","./node_modules/d3-time/src/utcWeek.js","./node_modules/d3-time/src/utcMonth.js","./node_modules/d3-time/src/utcYear.js","./node_modules/d3-time/src/ticks.js","./node_modules/d3-time-format/src/locale.js","./node_modules/d3-time-format/src/defaultLocale.js","./node_modules/d3-array/src/number.js","./node_modules/d3-array/src/bisect.js","./node_modules/d3-interpolate/src/round.js","./node_modules/d3-scale/src/number.js","./node_modules/d3-scale/src/continuous.js","./node_modules/d3-scale/src/constant.js","./node_modules/d3-scale/src/init.js","./node_modules/d3-scale/src/time.js","./node_modules/d3-scale/src/nice.js","./node_modules/d3-format/src/formatSpecifier.js","./node_modules/d3-format/src/formatPrefixAuto.js","./node_modules/d3-format/src/formatDecimal.js","./node_modules/d3-format/src/exponent.js","./node_modules/d3-format/src/formatRounded.js","./node_modules/d3-format/src/formatTypes.js","./node_modules/d3-format/src/identity.js","./node_modules/d3-format/src/locale.js","./node_modules/d3-format/src/defaultLocale.js","./node_modules/d3-scale/src/linear.js","./node_modules/d3-scale/src/tickFormat.js","./node_modules/d3-format/src/precisionPrefix.js","./node_modules/d3-format/src/precisionRound.js","./node_modules/d3-format/src/precisionFixed.js","./node_modules/d3-array/src/range.js","./node_modules/d3-format/src/formatGroup.js","./node_modules/d3-format/src/formatNumerals.js","./node_modules/d3-format/src/formatTrim.js","./node_modules/d3-scale/src/ordinal.js","./node_modules/d3-scale/src/band.js","./node_modules/d3-array/src/quantile.js","./node_modules/d3-scale/src/quantile.js","./node_modules/d3-path/src/path.js","./node_modules/d3-shape/src/array.js","./node_modules/d3-shape/src/constant.js","./node_modules/d3-shape/src/curve/linear.js","./node_modules/d3-shape/src/point.js","./node_modules/d3-shape/src/line.js","./node_modules/d3-shape/src/area.js","./node_modules/d3-shape/src/math.js","./node_modules/d3-shape/src/arc.js","./node_modules/d3-shape/src/descending.js","./node_modules/d3-shape/src/identity.js","./node_modules/d3-shape/src/pie.js","./node_modules/@swimlane/ngx-charts/node_modules/d3-color/src/define.js","./node_modules/@swimlane/ngx-charts/node_modules/d3-color/src/color.js","./node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs","./node_modules/d3-drag/src/nodrag.js","./node_modules/d3-array/src/max.js","./node_modules/d3-array/src/min.js","./dashboard/app/pages/dashboard/dashboard.module.ts","./dashboard/app/pages/dashboard/status-card/status-card.component.ts","./dashboard/app/@core/definition/dashboard/api.ts","./dashboard/app/pages/dashboard/dashboard.component.html","./dashboard/app/pages/pages.module.ts","./dashboard/app/pages/dashboard/dashboard.component.ts","./node_modules/@tweenjs/tween.js/src/Tween.js","./node_modules/rfdc/index.js","./node_modules/lodash-es/cloneDeep.js","./node_modules/ng2-completer/__ivy_ngcc__/esm2015/ng2-completer.js","./node_modules/angular2-multiselect-dropdown/__ivy_ngcc__/fesm2015/angular2-multiselect-dropdown.js","./node_modules/angular2-smart-table/fesm2020/angular2-smart-table.mjs","./node_modules/rxjs/dist/esm/internal/lastValueFrom.js","./node_modules/lodash-es/_Symbol.js","./node_modules/lodash-es/eq.js","./node_modules/lodash-es/_assocIndexOf.js","./node_modules/lodash-es/_listCacheDelete.js","./node_modules/lodash-es/_ListCache.js","./node_modules/lodash-es/_listCacheClear.js","./node_modules/lodash-es/_listCacheGet.js","./node_modules/lodash-es/_listCacheHas.js","./node_modules/lodash-es/_listCacheSet.js","./node_modules/lodash-es/isFunction.js","./node_modules/lodash-es/_isMasked.js","./node_modules/lodash-es/_coreJsData.js","./node_modules/lodash-es/_toSource.js","./node_modules/lodash-es/_baseIsNative.js","./node_modules/lodash-es/_getNative.js","./node_modules/lodash-es/_getValue.js","./node_modules/lodash-es/_Map.js","./node_modules/lodash-es/_nativeCreate.js","./node_modules/lodash-es/_hashGet.js","./node_modules/lodash-es/_hashHas.js","./node_modules/lodash-es/_Hash.js","./node_modules/lodash-es/_hashClear.js","./node_modules/lodash-es/_hashDelete.js","./node_modules/lodash-es/_hashSet.js","./node_modules/lodash-es/_getMapData.js","./node_modules/lodash-es/_isKeyable.js","./node_modules/lodash-es/_MapCache.js","./node_modules/lodash-es/_mapCacheClear.js","./node_modules/lodash-es/_mapCacheDelete.js","./node_modules/lodash-es/_mapCacheGet.js","./node_modules/lodash-es/_mapCacheHas.js","./node_modules/lodash-es/_mapCacheSet.js","./node_modules/lodash-es/_Stack.js","./node_modules/lodash-es/_stackClear.js","./node_modules/lodash-es/_stackDelete.js","./node_modules/lodash-es/_stackGet.js","./node_modules/lodash-es/_stackHas.js","./node_modules/lodash-es/_stackSet.js","./node_modules/lodash-es/_defineProperty.js","./node_modules/lodash-es/_baseAssignValue.js","./node_modules/lodash-es/_assignValue.js","./node_modules/lodash-es/_copyObject.js","./node_modules/lodash-es/_baseIsArguments.js","./node_modules/lodash-es/isArguments.js","./node_modules/lodash-es/isArray.js","./node_modules/lodash-es/isBuffer.js","./node_modules/lodash-es/stubFalse.js","./node_modules/lodash-es/_isIndex.js","./node_modules/lodash-es/isLength.js","./node_modules/lodash-es/_baseIsTypedArray.js","./node_modules/lodash-es/_baseUnary.js","./node_modules/lodash-es/_nodeUtil.js","./node_modules/lodash-es/isTypedArray.js","./node_modules/lodash-es/_arrayLikeKeys.js","./node_modules/lodash-es/_baseTimes.js","./node_modules/lodash-es/_isPrototype.js","./node_modules/lodash-es/_nativeKeys.js","./node_modules/lodash-es/_baseKeys.js","./node_modules/lodash-es/isArrayLike.js","./node_modules/lodash-es/keys.js","./node_modules/lodash-es/_baseKeysIn.js","./node_modules/lodash-es/_nativeKeysIn.js","./node_modules/lodash-es/keysIn.js","./node_modules/lodash-es/_cloneBuffer.js","./node_modules/lodash-es/stubArray.js","./node_modules/lodash-es/_getSymbols.js","./node_modules/lodash-es/_arrayFilter.js","./node_modules/lodash-es/_arrayPush.js","./node_modules/lodash-es/_getSymbolsIn.js","./node_modules/lodash-es/_baseGetAllKeys.js","./node_modules/lodash-es/_getAllKeys.js","./node_modules/lodash-es/_getAllKeysIn.js","./node_modules/lodash-es/_DataView.js","./node_modules/lodash-es/_Promise.js","./node_modules/lodash-es/_Set.js","./node_modules/lodash-es/_WeakMap.js","./node_modules/lodash-es/_getTag.js","./node_modules/lodash-es/_initCloneArray.js","./node_modules/lodash-es/_Uint8Array.js","./node_modules/lodash-es/_cloneArrayBuffer.js","./node_modules/lodash-es/_cloneRegExp.js","./node_modules/lodash-es/_cloneSymbol.js","./node_modules/lodash-es/_initCloneByTag.js","./node_modules/lodash-es/_cloneDataView.js","./node_modules/lodash-es/_cloneTypedArray.js","./node_modules/lodash-es/_baseCreate.js","./node_modules/lodash-es/isMap.js","./node_modules/lodash-es/_baseIsMap.js","./node_modules/lodash-es/isSet.js","./node_modules/lodash-es/_baseIsSet.js","./node_modules/lodash-es/_baseClone.js","./node_modules/lodash-es/_copyArray.js","./node_modules/lodash-es/_initCloneObject.js","./node_modules/lodash-es/_copySymbolsIn.js","./node_modules/lodash-es/_baseAssignIn.js","./node_modules/lodash-es/_copySymbols.js","./node_modules/lodash-es/_baseAssign.js","./node_modules/lodash-es/_arrayEach.js","./node_modules/lodash-es/_getRawTag.js","./node_modules/lodash-es/_objectToString.js","./node_modules/lodash-es/_baseGetTag.js","./node_modules/lodash-es/_freeGlobal.js","./node_modules/lodash-es/_getPrototype.js","./node_modules/lodash-es/_overArg.js","./node_modules/lodash-es/_root.js","./node_modules/lodash-es/isObject.js","./node_modules/lodash-es/isObjectLike.js","webpack:///./node_modules/source-map-loader/dist/cjs.js?a30f"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport {UserService} from '../@core/services/user.service';\nimport {NbMenuItem} from \"@nebular/theme\";\nimport {SharedService} from \"../@core/services/shared.service\";\n\n@Component({\n  selector: 'app-module',\n  template: `\n    <app-layout>\n      <nb-menu tag=\"main\" [items]=\"menus\"></nb-menu>\n      <router-outlet></router-outlet>\n    </app-layout>\n  `,\n})\nexport class PagesComponent implements OnInit {\n  menus: NbMenuItem[] = [];\n  constructor(private userService: UserService) {\n  }\n  ngOnInit() {\n    this.userService.onMenuChange().subscribe(menus => {\n      this.menus = menus;\n    });\n    this.userService.request().subscribe();\n  }\n\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","export default x => () => x;\n","export default function BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    selection: {value: selection, enumerable: true, configurable: true},\n    mode: {value: mode, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move();\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport millisecond from \"./millisecond.js\";\nimport second from \"./second.js\";\nimport minute from \"./minute.js\";\nimport hour from \"./hour.js\";\nimport day from \"./day.js\";\nimport {sunday as week} from \"./week.js\";\nimport month from \"./month.js\";\nimport year from \"./year.js\";\nimport utcMinute from \"./utcMinute.js\";\nimport utcHour from \"./utcHour.js\";\nimport utcDay from \"./utcDay.js\";\nimport {utcSunday as utcWeek} from \"./utcWeek.js\";\nimport utcMonth from \"./utcMonth.js\";\nimport utcYear from \"./utcYear.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(year, month, week, day, hour, minute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {\n                name: item['name']\n            };\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? function (d) {\n                return scale(d) + scale.bandwidth() * 0.5;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardComponent} from './dashboard.component';\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {StatusCardComponent} from \"./status-card/status-card.component\";\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {Angular2SmartTableModule} from \"angular2-smart-table\";\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    StatusCardComponent,\n  ],\n  imports: [\n    CommonModule,\n    ThemeModule,\n    Angular2SmartTableModule,\n    NgxChartsModule\n  ],\n  providers: []\n})\nexport class DashboardModule {\n}\n","import { Component, Input } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {DASHBOARD_SWITCH_STATUS} from \"../../../@core/definition/dashboard/api\";\nimport {ResponseBody} from \"../../../@core/definition/common\";\n\n@Component({\n  selector: 'app-status-card',\n  styleUrls: ['./status-card.component.scss'],\n  template: `\n    <nb-card (click)=\"onSwitch()\" [ngClass]=\"{'off': !on}\">\n      <div class=\"icon-container\">\n        <nb-icon [icon]=\"icon\" [status]=\"color\"></nb-icon>\n      </div>\n      <div class=\"details\">\n        <div class=\"title h5\">{{ title }}</div>\n        <div class=\"status paragraph-2\">{{ on ? 'ON' : 'OFF' }}</div>\n      </div>\n    </nb-card>\n  `,\n})\nexport class StatusCardComponent {\n\n  @Input() title: string = '';\n  @Input() color: string = '';\n  @Input() on = true;\n  @Input() icon = '';\n  @Input() id = '';\n\n  constructor(private http: HttpClient) {\n  }\n\n  onSwitch() {\n    this.http.post<ResponseBody>(DASHBOARD_SWITCH_STATUS, {id: this.id, value: !this.on}).subscribe(res => {\n      this.on = !this.on;\n    });\n  }\n}\n","export const DASHBOARD: string = '/dashboard';\nexport const DASHBOARD_SWITCH_STATUS: string = '/dashboard/switch/status';\n","<div class=\"row\">\n  <div class=\"{{item.class}}\" *ngFor=\"let item of card\">\n    <div *ngIf=\"item.type == 'status';then status else other;\"></div>\n    <ng-template #status>\n      <div class=\"row\">\n        <div class=\"col-xxl-3 col-md-6\" *ngFor=\"let status of item.body\">\n          <app-status-card [title]=\"status.title\" [on]=\"status.value\" [icon]=\"status.icon\" [id]=\"status.id\" [color]=\"status.primaryColor\"></app-status-card>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template #other>\n      <nb-card>\n        <nb-card-header>{{item.title}}</nb-card-header>\n        <nb-card-body>\n          <ng-container [ngSwitch]=\"item.type\">\n            <angular2-smart-table *ngSwitchCase=\"'table'\"\n                             [settings]=\"item.settings\"\n                             [source]=\"item.body\"\n            >\n            </angular2-smart-table>\n            <form *ngSwitchCase=\"'form'\">\n              <div class=\"mb-3 row align-items-center\" *ngFor=\"let input of item.body\">\n                <label class=\"label col-6 col-form-label\">{{input.name}}</label>\n                <div class=\"col-6\">\n                  <ng-container [ngSwitch]=\"input.type\">\n                    <nb-icon *ngSwitchCase=\"'icon'\" [icon]=\"input.value\" [status]=\"input.status\"></nb-icon>\n                    <input *ngSwitchDefault [value]=\"input.value\" nbInput disabled>\n                  </ng-container>\n                </div>\n              </div>\n            </form>\n            <ngx-charts-bar-vertical *ngSwitchCase=\"'bar-vertical'\"\n              [animations]=\"item.settings.animations\"\n              [xAxis]=\"item.settings.xAxis\"\n              [yAxis]=\"item.settings.yAxis\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-bar-vertical>\n            <ngx-charts-advanced-pie-chart *ngSwitchCase=\"'pie-chart'\"\n              [animations]=\"item.settings.animations\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-advanced-pie-chart>\n            <ngx-charts-pie-chart *ngSwitchCase=\"'pie'\"\n              [animations]=\"item.settings.animations\"\n              [legend]=\"item.settings.legend\"\n              [labels]=\"item.settings.labels\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-pie-chart>\n            <ngx-charts-number-card *ngSwitchCase=\"'number'\"\n              cardColor=\"#232837\"\n              emptyColor=\"#1e222e\"\n              [animations]=\"item.settings.animations\"\n              [scheme]=\"colorScheme\"\n              [view]=\"item.settings.view\"\n              [results]=\"item.body\">\n            </ngx-charts-number-card>\n            <ngx-charts-bar-horizontal *ngSwitchCase=\"'bar-horizontal'\"\n               [animations]=\"item.settings.animations\"\n              [xAxis]=\"item.settings.xAxis\"\n              [yAxis]=\"item.settings.yAxis\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-bar-horizontal>\n\n            <ngx-charts-line-chart *ngSwitchCase=\"'line'\"\n                                   [animations]=\"item.settings.animations\"\n              [xAxis]=\"item.settings.xAxis\"\n              [yAxis]=\"item.settings.yAxis\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-line-chart>\n\n            <ngx-charts-area-chart-stacked *ngSwitchCase=\"'area'\"\n               [animations]=\"item.settings.animations\"\n              [xAxis]=\"item.settings.xAxis\"\n              [yAxis]=\"item.settings.yAxis\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-area-chart-stacked>\n\n\n            <ngx-charts-pie-grid *ngSwitchCase=\"'pie-grid'\"\n              [animations]=\"item.settings.animations\"\n              [scheme]=\"colorScheme\"\n              [results]=\"item.body\">\n            </ngx-charts-pie-grid>\n\n            <div class=\"row\" *ngSwitchCase=\"'grid'\">\n              <div class=\"col\" *ngFor=\"let grid of item.body\">\n                <nb-alert status=\"success\">{{grid}}</nb-alert>\n              </div>\n            </div>\n          </ng-container>\n        </nb-card-body>\n      </nb-card>\n    </ng-template>\n  </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesComponent } from './pages.component';\nimport { ThemeModule } from '../@theme/theme.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: PagesComponent,\n  children: [\n    {\n      path: 'dashboard',\n      title: \"Dashboard\",\n      component: DashboardComponent,\n    },\n    {\n      path: 'system',\n      title: \"设置\",\n      loadChildren: () => import('./system/system.module').then(m => m.SystemModule),\n    },\n    {\n      path: 'user',\n      title: \"用户\",\n      loadChildren: () => import('./user/user.module').then(m => m.UserModule),\n    },\n    {\n      path: 'content',\n      title: \"内容\",\n      loadChildren: () => import('./content/content.module').then(m => m.ContentModule),\n    },\n    {\n      path: 'taxonomy',\n      title: \"内容\",\n      loadChildren: () => import('./taxonomy/taxonomy.module').then(m => m.TaxonomyModule),\n    },\n    {\n      path: 'decoration',\n      title: \"外观\",\n      loadChildren: () => import('./decoration/decoration.module').then(m => m.DecorationModule),\n    },\n    {\n      path: 'media',\n      title: \"媒体\",\n      loadChildren: () => import('./media/media.module').then(m => m.MediaModule),\n    },\n    {\n      path: 'plugin',\n      title: \"插件\",\n      loadChildren: () => import('./plugin/plugin.module').then(m => m.PluginModule),\n    },\n    {\n      path: 'comment',\n      title: \"评论\",\n      loadChildren: () => import('./comment/comment.module').then(m => m.CommentModule),\n    }\n  ],\n}];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    DashboardModule,\n    ThemeModule,\n  ],\n  declarations: [\n    PagesComponent,\n  ],\n})\nexport class PagesModule { }\n","import {\n  AfterContentInit,\n  Component, OnDestroy, OnInit,\n} from '@angular/core';\nimport {DASHBOARD} from \"../../@core/definition/dashboard/api\";\nimport {Card} from \"../../@core/definition/dashboard/type\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NbThemeService} from \"@nebular/theme\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit, OnDestroy, AfterContentInit {\n\n  results = [\n    {name: 'Germany', value: 8940, \"series\": [\n        {\n          \"value\": 5899,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 3476,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 3528,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 4009,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 4430,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'USA', value: 50, \"series\": [\n        {\n          \"value\": 589,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 376,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 328,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 9,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 30,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'France', value: 70, \"series\": [\n        {\n          \"value\": 58,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 347,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 352,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 409,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 40,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'France1', value: 7, \"series\": [\n        {\n          \"value\": 58,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 36,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 528,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 43,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 44,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'France2', value: 72, \"series\": [\n        {\n          \"value\": 58,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 76,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 28,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 49,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 43,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'France3', value: 212, \"series\": [\n        {\n          \"value\": 59,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 76,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 38,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 409,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 40,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'France4', value: 2121, \"series\": [\n        {\n          \"value\": 9,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 76,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 528,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 432,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 440,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n    {name: 'France5', value: 500, \"series\": [\n        {\n          \"value\": 599,\n          \"name\": \"2016-09-16T11:23:54.200Z\"\n        },\n        {\n          \"value\": 476,\n          \"name\": \"2016-09-15T17:36:51.788Z\"\n        },\n        {\n          \"value\": 528,\n          \"name\": \"2016-09-22T02:19:01.046Z\"\n        },\n        {\n          \"value\": 443,\n          \"name\": \"2016-09-19T06:20:44.689Z\"\n        },\n        {\n          \"value\": 430,\n          \"name\": \"2016-09-16T09:04:38.516Z\"\n        }\n      ]},\n  ];\n  showLegend = true;\n  showLabels = true;\n  colorScheme: any;\n  themeSubscription: any;\n\n\n  card: Card[] = [];\n  view: any = undefined;\n\n  constructor(private http: HttpClient, private theme: NbThemeService) {\n  }\n\n\n\n  ngAfterContentInit(): void {\n    setTimeout(() => {\n      const elementsByClassName = document.getElementsByTagName('rect');\n      for (const elementsByClassNameKey in elementsByClassName) {\n        const element = elementsByClassName[elementsByClassNameKey];\n        if (element.classList) {\n          element.classList.remove('card');\n        }\n      }\n    }, 500);\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [\n          colors.primaryLight,\n          colors.infoLight,\n          colors.successLight,\n          colors.warningLight,\n          colors.dangerLight,\n          '#6366f1',\n          '#8b5cf6',\n          '#a855f7',\n          '#d946ef',\n          '#ec4899'\n        ],\n      };\n    });\n    this.http.get<Card[]>(DASHBOARD)\n      .subscribe(body => {\n        if (body != null && body.length > 0) {\n          this.card = body\n        }\n      });\n  }\n}\n","/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\n\nvar _Group = function () {\n\tthis._tweens = {};\n\tthis._tweensAddedDuringUpdate = {};\n};\n\n_Group.prototype = {\n\tgetAll: function () {\n\n\t\treturn Object.keys(this._tweens).map(function (tweenId) {\n\t\t\treturn this._tweens[tweenId];\n\t\t}.bind(this));\n\n\t},\n\n\tremoveAll: function () {\n\n\t\tthis._tweens = {};\n\n\t},\n\n\tadd: function (tween) {\n\n\t\tthis._tweens[tween.getId()] = tween;\n\t\tthis._tweensAddedDuringUpdate[tween.getId()] = tween;\n\n\t},\n\n\tremove: function (tween) {\n\n\t\tdelete this._tweens[tween.getId()];\n\t\tdelete this._tweensAddedDuringUpdate[tween.getId()];\n\n\t},\n\n\tupdate: function (time, preserve) {\n\n\t\tvar tweenIds = Object.keys(this._tweens);\n\n\t\tif (tweenIds.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t// Tweens are updated in \"batches\". If you add a new tween during an update, then the\n\t\t// new tween will be updated in the next batch.\n\t\t// If you remove a tween during an update, it may or may not be updated. However,\n\t\t// if the removed tween was added during the current batch, then it will not be updated.\n\t\twhile (tweenIds.length > 0) {\n\t\t\tthis._tweensAddedDuringUpdate = {};\n\n\t\t\tfor (var i = 0; i < tweenIds.length; i++) {\n\n\t\t\t\tvar tween = this._tweens[tweenIds[i]];\n\n\t\t\t\tif (tween && tween.update(time) === false) {\n\t\t\t\t\ttween._isPlaying = false;\n\n\t\t\t\t\tif (!preserve) {\n\t\t\t\t\t\tdelete this._tweens[tweenIds[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttweenIds = Object.keys(this._tweensAddedDuringUpdate);\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\nvar TWEEN = new _Group();\n\nTWEEN.Group = _Group;\nTWEEN._nextId = 0;\nTWEEN.nextId = function () {\n\treturn TWEEN._nextId++;\n};\n\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof (self) === 'undefined' && typeof (process) !== 'undefined' && process.hrtime) {\n\tTWEEN.now = function () {\n\t\tvar time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof (self) !== 'undefined' &&\n         self.performance !== undefined &&\n\t\t self.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tTWEEN.now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tTWEEN.now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tTWEEN.now = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\n\nTWEEN.Tween = function (object, group) {\n\tthis._object = object;\n\tthis._valuesStart = {};\n\tthis._valuesEnd = {};\n\tthis._valuesStartRepeat = {};\n\tthis._duration = 1000;\n\tthis._repeat = 0;\n\tthis._repeatDelayTime = undefined;\n\tthis._yoyo = false;\n\tthis._isPlaying = false;\n\tthis._reversed = false;\n\tthis._delayTime = 0;\n\tthis._startTime = null;\n\tthis._easingFunction = TWEEN.Easing.Linear.None;\n\tthis._interpolationFunction = TWEEN.Interpolation.Linear;\n\tthis._chainedTweens = [];\n\tthis._onStartCallback = null;\n\tthis._onStartCallbackFired = false;\n\tthis._onUpdateCallback = null;\n\tthis._onRepeatCallback = null;\n\tthis._onCompleteCallback = null;\n\tthis._onStopCallback = null;\n\tthis._group = group || TWEEN;\n\tthis._id = TWEEN.nextId();\n\n};\n\nTWEEN.Tween.prototype = {\n\tgetId: function () {\n\t\treturn this._id;\n\t},\n\n\tisPlaying: function () {\n\t\treturn this._isPlaying;\n\t},\n\n\tto: function (properties, duration) {\n\n\t\tthis._valuesEnd = properties;\n\n\t\tif (duration !== undefined) {\n\t\t\tthis._duration = duration;\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tduration: function duration(d) {\n\t\tthis._duration = d;\n\t\treturn this;\n\t},\n\n\tstart: function (time) {\n\n\t\tthis._group.add(this);\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._onStartCallbackFired = false;\n\n\t\tthis._startTime = time !== undefined ? typeof time === 'string' ? TWEEN.now() + parseFloat(time) : time : TWEEN.now();\n\t\tthis._startTime += this._delayTime;\n\n\t\tfor (var property in this._valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (this._valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (this._valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\tthis._valuesEnd[property] = [this._object[property]].concat(this._valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (this._object[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Save the starting value.\n\t\t\tthis._valuesStart[property] = this._object[property];\n\n\t\t\tif ((this._valuesStart[property] instanceof Array) === false) {\n\t\t\t\tthis._valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\tthis._valuesStartRepeat[property] = this._valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif (!this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._group.remove(this);\n\t\tthis._isPlaying = false;\n\n\t\tif (this._onStopCallback !== null) {\n\t\t\tthis._onStopCallback(this._object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t},\n\n\tend: function () {\n\n\t\tthis.update(Infinity);\n\t\treturn this;\n\n\t},\n\n\tstopChainedTweens: function () {\n\n\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\tthis._chainedTweens[i].stop();\n\t\t}\n\n\t},\n\n\tgroup: function (group) {\n\t\tthis._group = group;\n\t\treturn this;\n\t},\n\n\tdelay: function (amount) {\n\n\t\tthis._delayTime = amount;\n\t\treturn this;\n\n\t},\n\n\trepeat: function (times) {\n\n\t\tthis._repeat = times;\n\t\treturn this;\n\n\t},\n\n\trepeatDelay: function (amount) {\n\n\t\tthis._repeatDelayTime = amount;\n\t\treturn this;\n\n\t},\n\n\tyoyo: function (yoyo) {\n\n\t\tthis._yoyo = yoyo;\n\t\treturn this;\n\n\t},\n\n\teasing: function (easingFunction) {\n\n\t\tthis._easingFunction = easingFunction;\n\t\treturn this;\n\n\t},\n\n\tinterpolation: function (interpolationFunction) {\n\n\t\tthis._interpolationFunction = interpolationFunction;\n\t\treturn this;\n\n\t},\n\n\tchain: function () {\n\n\t\tthis._chainedTweens = arguments;\n\t\treturn this;\n\n\t},\n\n\tonStart: function (callback) {\n\n\t\tthis._onStartCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonUpdate: function (callback) {\n\n\t\tthis._onUpdateCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonRepeat: function onRepeat(callback) {\n\n\t\tthis._onRepeatCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonComplete: function (callback) {\n\n\t\tthis._onCompleteCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonStop: function (callback) {\n\n\t\tthis._onStopCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tupdate: function (time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < this._startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._onStartCallbackFired === false) {\n\n\t\t\tif (this._onStartCallback !== null) {\n\t\t\t\tthis._onStartCallback(this._object);\n\t\t\t}\n\n\t\t\tthis._onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - this._startTime) / this._duration;\n\t\telapsed = (this._duration === 0 || elapsed > 1) ? 1 : elapsed;\n\n\t\tvalue = this._easingFunction(elapsed);\n\n\t\tfor (property in this._valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (this._valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = this._valuesStart[property] || 0;\n\t\t\tvar end = this._valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\tthis._object[property] = this._interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\tthis._object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._onUpdateCallback !== null) {\n\t\t\tthis._onUpdateCallback(this._object, elapsed);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (this._repeat > 0) {\n\n\t\t\t\tif (isFinite(this._repeat)) {\n\t\t\t\t\tthis._repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in this._valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (this._valuesEnd[property]) === 'string') {\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._yoyo) {\n\t\t\t\t\t\tvar tmp = this._valuesStartRepeat[property];\n\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesEnd[property];\n\t\t\t\t\t\tthis._valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._valuesStart[property] = this._valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (this._yoyo) {\n\t\t\t\t\tthis._reversed = !this._reversed;\n\t\t\t\t}\n\n\t\t\t\tif (this._repeatDelayTime !== undefined) {\n\t\t\t\t\tthis._startTime = time + this._repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\tthis._startTime = time + this._delayTime;\n\t\t\t\t}\n\n\t\t\t\tif (this._onRepeatCallback !== null) {\n\t\t\t\t\tthis._onRepeatCallback(this._object);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (this._onCompleteCallback !== null) {\n\n\t\t\t\t\tthis._onCompleteCallback(this._object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\tthis._chainedTweens[i].start(this._startTime + this._duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n\n\tif (typeof define === 'function' && define.amd) {\n\n\t\t// AMD\n\t\tdefine([], function () {\n\t\t\treturn TWEEN;\n\t\t});\n\n\t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\n\t\t// Node.js\n\t\tmodule.exports = TWEEN;\n\n\t} else if (root !== undefined) {\n\n\t\t// Global variable\n\t\troot.TWEEN = TWEEN;\n\n\t}\n\n})(this);\n","'use strict'\nmodule.exports = rfdc\n\nfunction copyBuffer (cur) {\n  if (cur instanceof Buffer) {\n    return Buffer.from(cur)\n  }\n\n  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)\n}\n\nfunction rfdc (opts) {\n  opts = opts || {}\n\n  if (opts.circles) return rfdcCircles(opts)\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        a2[k] = fn(cur)\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = clone(cur)\n      }\n    }\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = cloneProto(cur)\n      }\n    }\n    return o2\n  }\n}\n\nfunction rfdcCircles (opts) {\n  var refs = []\n  var refsNew = []\n\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        var index = refs.indexOf(cur)\n        if (index !== -1) {\n          a2[k] = refsNew[index]\n        } else {\n          a2[k] = fn(cur)\n        }\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = clone(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = cloneProto(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\n * @license ng2-completer\n * MIT license\n */\nimport { EventEmitter, Injectable, Output, Directive, HostListener, Host, ElementRef, NgZone, Input, TemplateRef, ViewContainerRef, ChangeDetectorRef, Renderer2, Component, forwardRef, ViewChild, NgModule } from '@angular/core';\nimport { Subject, Observable, timer } from 'rxjs';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport { NgModel, NG_VALUE_ACCESSOR, FormControl, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/common';\n\nfunction CompleterListItemCmp_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", part_r1.isMatch ? ctx_r0.matchClass : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1.text);\n} }\nconst _c0 = function (a0, a1) { return { \"completer-title\": a0, \"completer-description\": a1 }; };\nconst _c1 = [\"ctrInput\"];\nfunction CompleterCmp_div_3_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._textSearching);\n} }\nfunction CompleterCmp_div_3_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8._textNoResults);\n} }\nfunction CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 21);\n} if (rf & 2) {\n    const item_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", item_r10.image, ɵngcc0.ɵɵsanitizeUrl);\n} }\nfunction CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 22);\n} }\nfunction CompleterCmp_div_3_div_1_div_3_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template, 1, 1, \"img\", 19);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template, 1, 0, \"div\", 20);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image != \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image === \"\");\n} }\nfunction CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"completer-list-item\", 23);\n} if (rf & 2) {\n    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"text\", item_r10.description)(\"matchClass\", ctx_r13.matchClass)(\"searchStr\", ctx_r13.searchStr)(\"type\", \"description\");\n} }\nconst _c2 = function (a0) { return { \"completer-item-text-image\": a0 }; };\nfunction CompleterCmp_div_3_div_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_3_div_2_Template, 3, 2, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 15);\n    ɵngcc0.ɵɵelement(4, \"completer-list-item\", 16);\n    ɵngcc0.ɵɵtemplate(5, CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template, 1, 4, \"completer-list-item\", 17);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    const rowIndex_r11 = ctx.index;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ctrRow\", rowIndex_r11)(\"dataItem\", item_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image || item_r10.image === \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c2, item_r10.image || item_r10.image === \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"text\", item_r10.title)(\"matchClass\", ctx_r9.matchClass)(\"searchStr\", ctx_r9.searchStr)(\"type\", \"title\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.description && item_r10.description != \"\");\n} }\nfunction CompleterCmp_div_3_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_div_1_Template, 2, 1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_2_Template, 2, 1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(3, CompleterCmp_div_3_div_1_div_3_Template, 6, 11, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    const searchActive_r3 = ctx_r19.searching;\n    const items_r2 = ctx_r19.results;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", searchActive_r3 && ctx_r6.displaySearching);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !searchActive_r3 && (!items_r2 || (items_r2 == null ? null : items_r2.length) === 0));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", items_r2);\n} }\nfunction CompleterCmp_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_Template, 4, 3, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const items_r2 = ctx.results;\n    const searchActive_r3 = ctx.searching;\n    const isInitialized_r4 = ctx.searchInitialized;\n    const isOpen_r5 = ctx.isOpen;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", isInitialized_r4 && isOpen_r5 && ((items_r2 == null ? null : items_r2.length) > 0 || ctx_r1.displayNoResults && !searchActive_r3 || searchActive_r3 && ctx_r1.displaySearching));\n} }\nconst MAX_CHARS = 524288; // the default max length per the html maxlength attribute\nconst MIN_SEARCH_LENGTH = 3;\nconst PAUSE = 10;\nconst TEXT_SEARCHING = \"Searching...\";\nconst TEXT_NO_RESULTS = \"No results found\";\nconst CLEAR_TIMEOUT = 50;\nfunction isNil(value) {\n    return typeof value === \"undefined\" || value === null;\n}\n\nclass CompleterBaseData extends Subject {\n    constructor() {\n        super();\n        this._searchFields = null;\n        this._titleField = null;\n        this._descriptionField = undefined;\n        this._imageField = undefined;\n    }\n    cancel() {\n        return;\n    }\n    searchFields(searchFields) {\n        this._searchFields = searchFields;\n        return this;\n    }\n    titleField(titleField) {\n        this._titleField = titleField;\n        return this;\n    }\n    descriptionField(descriptionField) {\n        this._descriptionField = descriptionField;\n        return this;\n    }\n    imageField(imageField) {\n        this._imageField = imageField;\n        return this;\n    }\n    convertToItem(data) {\n        let image = null;\n        let formattedText;\n        let formattedDesc = null;\n        if (this._titleField) {\n            formattedText = this.extractTitle(data);\n        }\n        else {\n            formattedText = data;\n        }\n        if (typeof formattedText !== \"string\") {\n            formattedText = JSON.stringify(formattedText);\n        }\n        if (this._descriptionField) {\n            formattedDesc = this.extractValue(data, this._descriptionField);\n        }\n        if (this._imageField) {\n            image = this.extractValue(data, this._imageField);\n        }\n        if (isNil(formattedText)) {\n            return null;\n        }\n        return {\n            description: formattedDesc,\n            image,\n            originalObject: data,\n            title: formattedText\n        };\n    }\n    extractMatches(data, term) {\n        let matches = [];\n        const searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n        if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\n            matches = data.filter((item) => {\n                const values = searchFields ? this.extractBySearchFields(searchFields, item) : [item];\n                return values.some((value) => value\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(term.toString().toLowerCase()) >= 0);\n            });\n        }\n        else {\n            matches = data;\n        }\n        return matches;\n    }\n    extractTitle(item) {\n        // split title fields and run extractValue for each and join with ' '\n        if (!this._titleField) {\n            return \"\";\n        }\n        return this._titleField.split(\",\")\n            .map((field) => {\n            return this.extractValue(item, field);\n        })\n            .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\n    }\n    extractValue(obj, key) {\n        let keys;\n        let result;\n        if (key) {\n            keys = key.split(\".\");\n            result = obj;\n            for (key of keys) {\n                if (result) {\n                    result = result[key];\n                }\n            }\n        }\n        else {\n            result = obj;\n        }\n        return result;\n    }\n    processResults(matches) {\n        let i;\n        const results = [];\n        if (matches && matches.length > 0) {\n            for (i = 0; i < matches.length; i++) {\n                const item = this.convertToItem(matches[i]);\n                if (item) {\n                    results.push(item);\n                }\n            }\n        }\n        return results;\n    }\n    extractBySearchFields(searchFields, item) {\n        return searchFields\n            .map((searchField) => this.extractValue(item, searchField)).filter((value) => !!value);\n    }\n}\n\nclass LocalData extends CompleterBaseData {\n    constructor() {\n        super();\n        this.dataSourceChange = new EventEmitter();\n        this._data = [];\n        this.savedTerm = null;\n    }\n    data(data) {\n        if (data instanceof Observable) {\n            const data$ = data;\n            data$\n                .pipe(catchError(() => []))\n                .subscribe((res) => {\n                this._data = res;\n                if (this.savedTerm) {\n                    this.search(this.savedTerm);\n                }\n                this.dataSourceChange.emit();\n            });\n        }\n        else {\n            this._data = data;\n        }\n        this.dataSourceChange.emit();\n        return this;\n    }\n    search(term) {\n        if (!this._data) {\n            this.savedTerm = term;\n        }\n        else {\n            this.savedTerm = null;\n            const matches = this.extractMatches(this._data, term);\n            this.next(this.processResults(matches));\n        }\n    }\n    convertToItem(data) {\n        return super.convertToItem(data);\n    }\n}\n\nclass RemoteData extends CompleterBaseData {\n    constructor(http) {\n        super();\n        this.http = http;\n        this.dataSourceChange = new EventEmitter();\n        this._remoteUrl = null;\n        this.remoteSearch = null;\n        this._urlFormater = null;\n        this._dataField = null;\n    }\n    remoteUrl(remoteUrl) {\n        this._remoteUrl = remoteUrl;\n        this.dataSourceChange.emit();\n        return this;\n    }\n    urlFormater(urlFormater) {\n        this._urlFormater = urlFormater;\n    }\n    dataField(dataField) {\n        this._dataField = dataField;\n    }\n    requestOptions(requestOptions) {\n        this._requestOptions = requestOptions;\n    }\n    search(term) {\n        this.cancel();\n        // let params = {};\n        let url = \"\";\n        if (this._urlFormater) {\n            url = this._urlFormater(term);\n        }\n        else {\n            url = this._remoteUrl + encodeURIComponent(term);\n        }\n        this.remoteSearch = this.http\n            .get(url, Object.assign({}, this._requestOptions))\n            .pipe(map((data) => {\n            const matches = this.extractValue(data, this._dataField);\n            return this.extractMatches(matches, term);\n        }), catchError(() => []))\n            .subscribe((matches) => {\n            const results = this.processResults(matches);\n            this.next(results);\n        });\n    }\n    cancel() {\n        if (this.remoteSearch) {\n            this.remoteSearch.unsubscribe();\n        }\n    }\n    convertToItem(data) {\n        return super.convertToItem(data);\n    }\n}\n\nlet LocalDataFactory = class LocalDataFactory {\n    create() {\n        return new LocalData();\n    }\n};\nLocalDataFactory.ɵfac = function LocalDataFactory_Factory(t) { return new (t || LocalDataFactory)(); };\nLocalDataFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LocalDataFactory, factory: function (t) { return LocalDataFactory.ɵfac(t); } });\n\nlet RemoteDataFactory = class RemoteDataFactory {\n    constructor(http) {\n        this.http = http;\n    }\n    create() {\n        return new RemoteData(this.http);\n    }\n};\nRemoteDataFactory.ɵfac = function RemoteDataFactory_Factory(t) { return new (t || RemoteDataFactory)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };\nRemoteDataFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RemoteDataFactory, factory: function (t) { return RemoteDataFactory.ɵfac(t); } });\nRemoteDataFactory = __decorate([ __metadata(\"design:paramtypes\", [HttpClient])\n], RemoteDataFactory);\n\nlet CompleterService = class CompleterService {\n    constructor(localDataFactory, // Using any instead of () => LocalData because of AoT errors\n    remoteDataFactory // Using any instead of () => LocalData because of AoT errors\n    ) {\n        this.localDataFactory = localDataFactory;\n        this.remoteDataFactory = remoteDataFactory;\n    }\n    local(data, searchFields = \"\", titleField = \"\") {\n        const localData = this.localDataFactory.create();\n        return localData\n            .data(data)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n    remote(url, searchFields = \"\", titleField = \"\") {\n        const remoteData = this.remoteDataFactory.create();\n        return remoteData\n            .remoteUrl(url)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n};\nCompleterService.ɵfac = function CompleterService_Factory(t) { return new (t || CompleterService)(ɵngcc0.ɵɵinject(LocalDataFactory), ɵngcc0.ɵɵinject(RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n)); };\nCompleterService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CompleterService, factory: function (t) { return CompleterService.ɵfac(t); } });\nCompleterService = __decorate([ __metadata(\"design:paramtypes\", [LocalDataFactory,\n        RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n    ])\n], CompleterService);\n\nlet CtrCompleter = class CtrCompleter {\n    constructor() {\n        this.selected = new EventEmitter();\n        this.highlighted = new EventEmitter();\n        this.opened = new EventEmitter();\n        this.dataSourceChange = new EventEmitter();\n        this.list = null;\n        this.dropdown = null;\n        this._hasHighlighted = false;\n        this._hasSelected = false;\n        this._cancelBlur = false;\n        this._isOpen = false;\n        this._autoHighlightIndex = null;\n    }\n    registerList(list) {\n        this.list = list;\n    }\n    registerDropdown(dropdown) {\n        this.dropdown = dropdown;\n    }\n    onHighlighted(item) {\n        this.highlighted.emit(item);\n        this._hasHighlighted = !!item;\n    }\n    onSelected(item, clearList = true) {\n        this.selected.emit(item);\n        if (item) {\n            this._hasSelected = true;\n        }\n        if (clearList) {\n            this.clear();\n        }\n    }\n    onDataSourceChange() {\n        if (this.hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        this.dataSourceChange.emit();\n    }\n    search(term) {\n        if (this._hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        if (this.list) {\n            this.list.search(term);\n        }\n    }\n    clear() {\n        this._hasHighlighted = false;\n        this.isOpen = false;\n        if (this.dropdown) {\n            this.dropdown.clear();\n        }\n        if (this.list) {\n            this.list.clear();\n        }\n    }\n    selectCurrent() {\n        if (this.dropdown) {\n            this.dropdown.selectCurrent();\n        }\n    }\n    nextRow() {\n        if (this.dropdown) {\n            this.dropdown.nextRow();\n        }\n    }\n    prevRow() {\n        if (this.dropdown) {\n            this.dropdown.prevRow();\n        }\n    }\n    hasHighlighted() {\n        return this._hasHighlighted;\n    }\n    cancelBlur(cancel) {\n        this._cancelBlur = cancel;\n    }\n    isCancelBlur() {\n        return this._cancelBlur;\n    }\n    open() {\n        if (!this._isOpen && !!this.list) {\n            this.isOpen = true;\n            this.list.open();\n        }\n    }\n    get isOpen() {\n        return this._isOpen;\n    }\n    set isOpen(open) {\n        this._isOpen = open;\n        this.opened.emit(this._isOpen);\n        if (this.list) {\n            this.list.isOpen(open);\n        }\n    }\n    get autoHighlightIndex() {\n        return this._autoHighlightIndex;\n    }\n    set autoHighlightIndex(index) {\n        this._autoHighlightIndex = index;\n        if (this.dropdown) {\n            this.dropdown.highlightRow(this._autoHighlightIndex);\n        }\n    }\n    get hasSelected() {\n        return this._hasSelected;\n    }\n};\nCtrCompleter.ɵfac = function CtrCompleter_Factory(t) { return new (t || CtrCompleter)(); };\nCtrCompleter.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrCompleter, selectors: [[\"\", \"ctrCompleter\", \"\"]], outputs: { selected: \"selected\", highlighted: \"highlighted\", opened: \"opened\", dataSourceChange: \"dataSourceChange\" } });\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"selected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"highlighted\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"opened\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"dataSourceChange\", void 0);\n\nclass CtrRowItem {\n    constructor(row, index) {\n        this.row = row;\n        this.index = index;\n    }\n}\nlet CtrDropdown = class CtrDropdown {\n    constructor(completer, el, zone) {\n        this.completer = completer;\n        this.el = el;\n        this.zone = zone;\n        this.rows = [];\n        this.isScrollOn = false;\n        this._rowMouseDown = false;\n        this.completer.registerDropdown(this);\n    }\n    ngOnDestroy() {\n        this.completer.registerDropdown(null);\n    }\n    ngAfterViewInit() {\n        const css = getComputedStyle(this.el.nativeElement);\n        const autoHighlightIndex = this.completer.autoHighlightIndex;\n        this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\n        if (autoHighlightIndex) {\n            this.zone.run(() => {\n                this.highlightRow(autoHighlightIndex);\n            });\n        }\n    }\n    onMouseDown(event) {\n        // Support for canceling blur on IE (issue #158)\n        if (!this._rowMouseDown) {\n            this.completer.cancelBlur(true);\n            this.zone.run(() => {\n                this.completer.cancelBlur(false);\n            });\n        }\n        else {\n            this._rowMouseDown = false;\n        }\n    }\n    registerRow(row) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === row.index);\n        if (arrIndex >= 0) {\n            this.rows[arrIndex] = row;\n        }\n        else {\n            this.rows.push(row);\n        }\n    }\n    unregisterRow(rowIndex) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === rowIndex);\n        this.rows.splice(arrIndex, 1);\n        if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\n            this.highlightRow(null);\n        }\n    }\n    highlightRow(index) {\n        const highlighted = this.rows.find(row => row.index === index);\n        if (isNil(index) || index < 0) {\n            if (this.currHighlighted) {\n                this.currHighlighted.row.setHighlighted(false);\n            }\n            this.currHighlighted = undefined;\n            this.completer.onHighlighted(null);\n            return;\n        }\n        if (!highlighted) {\n            return;\n        }\n        if (this.currHighlighted) {\n            this.currHighlighted.row.setHighlighted(false);\n        }\n        this.currHighlighted = highlighted;\n        this.currHighlighted.row.setHighlighted(true);\n        this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n        if (this.isScrollOn && this.currHighlighted) {\n            const rowTop = this.dropdownRowTop();\n            if (!rowTop) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.dropdownScrollTopTo(rowTop - 1);\n            }\n            else {\n                const row = this.currHighlighted.row.getNativeElement();\n                if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n                    this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n                    if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\n                        this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10)));\n                    }\n                }\n            }\n        }\n    }\n    clear() {\n        this.rows = [];\n    }\n    onSelected(item) {\n        this.completer.onSelected(item);\n    }\n    rowMouseDown() {\n        this._rowMouseDown = true;\n    }\n    selectCurrent() {\n        if (!!this.currHighlighted && !!this.currHighlighted.row) {\n            this.onSelected(this.currHighlighted.row.getDataItem());\n        }\n        else if (this.rows.length > 0) {\n            this.onSelected(this.rows[0].row.getDataItem());\n        }\n    }\n    nextRow() {\n        let nextRowIndex = 0;\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index + 1;\n        }\n        this.highlightRow(nextRowIndex);\n    }\n    prevRow() {\n        let nextRowIndex = -1;\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index - 1;\n        }\n        this.highlightRow(nextRowIndex);\n    }\n    dropdownScrollTopTo(offset) {\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n    }\n    dropdownRowTop() {\n        if (!this.currHighlighted) {\n            return;\n        }\n        return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n            (this.el.nativeElement.getBoundingClientRect().top +\n                parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10));\n    }\n    dropdownHeight() {\n        return this.el.nativeElement.getBoundingClientRect().top +\n            parseInt(getComputedStyle(this.el.nativeElement).maxHeight, 10);\n    }\n    dropdownRowOffsetHeight(row) {\n        const css = getComputedStyle(row.parentElement);\n        return row.parentElement.offsetHeight +\n            parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);\n    }\n};\nCtrDropdown.ɵfac = function CtrDropdown_Factory(t) { return new (t || CtrDropdown)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCtrDropdown.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrDropdown, selectors: [[\"\", \"ctrDropdown\", \"\"]], hostBindings: function CtrDropdown_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function CtrDropdown_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });\n    } } });\n__decorate([\n    HostListener(\"mousedown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrDropdown.prototype, \"onMouseDown\", null);\nCtrDropdown = __decorate([ __param(0, Host()),\n    __metadata(\"design:paramtypes\", [CtrCompleter, ElementRef, NgZone])\n], CtrDropdown);\n\n// keyboard events\nconst KEY_DW = 40;\nconst KEY_RT = 39;\nconst KEY_UP = 38;\nconst KEY_LF = 37;\nconst KEY_ES = 27;\nconst KEY_EN = 13;\nconst KEY_TAB = 9;\nconst KEY_BK = 8;\nconst KEY_SH = 16;\nconst KEY_CL = 20;\nconst KEY_F1 = 112;\nconst KEY_F12 = 123;\nlet CtrInput = class CtrInput {\n    constructor(completer, ngModel, el) {\n        this.completer = completer;\n        this.ngModel = ngModel;\n        this.el = el;\n        this.clearSelected = false;\n        this.clearUnselected = false;\n        this.overrideSuggested = false;\n        this.fillHighlighted = true;\n        this.openOnFocus = false;\n        this.openOnClick = false;\n        this.selectOnClick = false;\n        this.selectOnFocus = false;\n        this.ngModelChange = new EventEmitter();\n        this._searchStr = \"\";\n        this._displayStr = \"\";\n        this.blurTimer = null;\n        this.completer.selected.subscribe((item) => {\n            if (!item) {\n                return;\n            }\n            if (this.clearSelected) {\n                this.searchStr = \"\";\n            }\n            else {\n                this.searchStr = item.title;\n            }\n            this.ngModelChange.emit(this.searchStr);\n        });\n        this.completer.highlighted.subscribe((item) => {\n            if (this.fillHighlighted) {\n                if (item) {\n                    this._displayStr = item.title;\n                    this.ngModelChange.emit(item.title);\n                }\n                else {\n                    this._displayStr = this.searchStr;\n                    this.ngModelChange.emit(this.searchStr);\n                }\n            }\n        });\n        this.completer.dataSourceChange.subscribe(() => {\n            this.completer.search(this.searchStr);\n        });\n        if (this.ngModel.valueChanges) {\n            this.ngModel.valueChanges.subscribe((value) => {\n                if (!isNil(value) && this._displayStr !== value) {\n                    if (this.searchStr !== value) {\n                        this.completer.search(value);\n                    }\n                    this.searchStr = value;\n                }\n            });\n        }\n    }\n    keyupHandler(event) {\n        if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n            // do nothing\n            return;\n        }\n        if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n            event.preventDefault();\n        }\n        else if (event.keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.search(this.searchStr);\n        }\n        else if (event.keyCode === KEY_ES) {\n            if (this.completer.isOpen) {\n                this.restoreSearchValue();\n                this.completer.clear();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n    pasteHandler(event) {\n        this.completer.open();\n    }\n    keydownHandler(event) {\n        const keyCode = event.keyCode || event.which;\n        if (keyCode === KEY_EN) {\n            if (this.completer.hasHighlighted()) {\n                event.preventDefault();\n            }\n            this.handleSelection();\n        }\n        else if (keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.open();\n            this.completer.nextRow();\n        }\n        else if (keyCode === KEY_UP) {\n            event.preventDefault();\n            this.completer.prevRow();\n        }\n        else if (keyCode === KEY_TAB) {\n            this.handleSelection();\n        }\n        else if (keyCode === KEY_BK) {\n            this.completer.open();\n        }\n        else if (keyCode === KEY_ES) {\n            // This is very specific to IE10/11 #272\n            // without this, IE clears the input text\n            event.preventDefault();\n            if (this.completer.isOpen) {\n                event.stopPropagation();\n            }\n        }\n        else {\n            if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\n                (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\n                !event.ctrlKey && !event.metaKey && !event.altKey) {\n                this.completer.open();\n            }\n        }\n    }\n    onBlur(event) {\n        // Check if we need to cancel Blur for IE\n        if (this.completer.isCancelBlur()) {\n            setTimeout(() => {\n                // get the focus back\n                this.el.nativeElement.focus();\n            }, 0);\n            return;\n        }\n        if (this.completer.isOpen) {\n            this.blurTimer = timer(200).pipe(take(1)).subscribe(() => this.doBlur());\n        }\n    }\n    onfocus() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n        if (this.selectOnFocus) {\n            this.el.nativeElement.select();\n        }\n        if (this.openOnFocus) {\n            this.completer.open();\n        }\n    }\n    onClick(event) {\n        if (this.selectOnClick) {\n            this.el.nativeElement.select();\n        }\n        if (this.openOnClick) {\n            if (this.completer.isOpen) {\n                this.completer.clear();\n            }\n            else {\n                this.completer.open();\n            }\n        }\n    }\n    get searchStr() {\n        return this._searchStr;\n    }\n    set searchStr(term) {\n        this._searchStr = term;\n        this._displayStr = term;\n    }\n    handleSelection() {\n        if (this.completer.hasHighlighted()) {\n            this._searchStr = \"\";\n            this.completer.selectCurrent();\n        }\n        else if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        }\n        else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            }\n            this.completer.clear();\n        }\n    }\n    restoreSearchValue() {\n        if (this.fillHighlighted) {\n            if (this._displayStr !== this.searchStr) {\n                this._displayStr = this.searchStr;\n                this.ngModelChange.emit(this.searchStr);\n            }\n        }\n    }\n    doBlur() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n        if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        }\n        else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            }\n            else {\n                this.restoreSearchValue();\n            }\n        }\n        this.completer.clear();\n    }\n};\nCtrInput.ɵfac = function CtrInput_Factory(t) { return new (t || CtrInput)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCtrInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrInput, selectors: [[\"\", \"ctrInput\", \"\"]], hostBindings: function CtrInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup\", function CtrInput_keyup_HostBindingHandler($event) { return ctx.keyupHandler($event); })(\"paste\", function CtrInput_paste_HostBindingHandler($event) { return ctx.pasteHandler($event); })(\"keydown\", function CtrInput_keydown_HostBindingHandler($event) { return ctx.keydownHandler($event); })(\"blur\", function CtrInput_blur_HostBindingHandler($event) { return ctx.onBlur($event); })(\"focus\", function CtrInput_focus_HostBindingHandler() { return ctx.onfocus(); })(\"click\", function CtrInput_click_HostBindingHandler($event) { return ctx.onClick($event); });\n    } }, inputs: { clearSelected: \"clearSelected\", clearUnselected: \"clearUnselected\", overrideSuggested: \"overrideSuggested\", fillHighlighted: \"fillHighlighted\", openOnFocus: \"openOnFocus\", openOnClick: \"openOnClick\", selectOnClick: \"selectOnClick\", selectOnFocus: \"selectOnFocus\" }, outputs: { ngModelChange: \"ngModelChange\" } });\n__decorate([\n    Input(\"clearSelected\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"clearSelected\", void 0);\n__decorate([\n    Input(\"clearUnselected\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"clearUnselected\", void 0);\n__decorate([\n    Input(\"overrideSuggested\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"overrideSuggested\", void 0);\n__decorate([\n    Input(\"fillHighlighted\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"fillHighlighted\", void 0);\n__decorate([\n    Input(\"openOnFocus\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"openOnFocus\", void 0);\n__decorate([\n    Input(\"openOnClick\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"openOnClick\", void 0);\n__decorate([\n    Input(\"selectOnClick\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"selectOnClick\", void 0);\n__decorate([\n    Input(\"selectOnFocus\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"selectOnFocus\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], CtrInput.prototype, \"ngModelChange\", void 0);\n__decorate([\n    HostListener(\"keyup\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"keyupHandler\", null);\n__decorate([\n    HostListener(\"paste\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"pasteHandler\", null);\n__decorate([\n    HostListener(\"keydown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"keydownHandler\", null);\n__decorate([\n    HostListener(\"blur\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"onBlur\", null);\n__decorate([\n    HostListener(\"focus\", []),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"onfocus\", null);\n__decorate([\n    HostListener(\"click\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"onClick\", null);\nCtrInput = __decorate([ __param(0, Host()),\n    __metadata(\"design:paramtypes\", [CtrCompleter, NgModel, ElementRef])\n], CtrInput);\n\nclass CtrListContext {\n    constructor(results, searching, searchInitialized, isOpen) {\n        this.results = results;\n        this.searching = searching;\n        this.searchInitialized = searchInitialized;\n        this.isOpen = isOpen;\n    }\n}\nlet CtrList = class CtrList {\n    constructor(completer, templateRef, viewContainer, cd, zone) {\n        this.completer = completer;\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.zone = zone;\n        this.ctrListMinSearchLength = MIN_SEARCH_LENGTH;\n        this.ctrListPause = PAUSE;\n        this.ctrListAutoMatch = false;\n        this.ctrListAutoHighlight = false;\n        this.ctrListDisplaySearching = true;\n        this._dataService = null;\n        // private results: CompleterItem[] = [];\n        this.term = null;\n        // private searching = false;\n        this.searchTimer = null;\n        this.clearTimer = null;\n        this.ctx = new CtrListContext([], false, false, false);\n        this._initialValue = null;\n        this.viewRef = null;\n    }\n    ngOnInit() {\n        this.completer.registerList(this);\n        this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, new CtrListContext([], false, false, false));\n    }\n    set dataService(newService) {\n        this._dataService = newService;\n        this.dataServiceSubscribe();\n    }\n    set initialValue(value) {\n        if (this._dataService &&\n            typeof this._dataService.convertToItem === \"function\") {\n            this.zone.run(() => {\n                const initialItem = this._dataService && this._dataService.convertToItem(value);\n                if (initialItem) {\n                    this.completer.onSelected(initialItem, false);\n                }\n            });\n        }\n        else if (!this._dataService) {\n            this._initialValue = value;\n        }\n    }\n    search(term) {\n        if (!isNil(term) &&\n            term.length >= this.ctrListMinSearchLength &&\n            this.term !== term) {\n            if (this.searchTimer) {\n                this.searchTimer.unsubscribe();\n                this.searchTimer = null;\n            }\n            if (!this.ctx.searching) {\n                if (this.ctrListDisplaySearching) {\n                    this.ctx.results = [];\n                }\n                this.ctx.searching = true;\n                this.ctx.searchInitialized = true;\n                this.refreshTemplate();\n            }\n            if (this.clearTimer) {\n                this.clearTimer.unsubscribe();\n            }\n            this.searchTimer = timer(this.ctrListPause)\n                .pipe(take(1))\n                .subscribe(() => {\n                this.searchTimerComplete(term);\n            });\n        }\n        else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\n            this.clear();\n            this.term = \"\";\n        }\n    }\n    clear() {\n        if (this.searchTimer) {\n            this.searchTimer.unsubscribe();\n        }\n        this.clearTimer = timer(CLEAR_TIMEOUT)\n            .pipe(take(1))\n            .subscribe(() => {\n            this._clear();\n        });\n    }\n    open() {\n        if (!this.ctx.searchInitialized) {\n            this.search(\"\");\n        }\n        this.refreshTemplate();\n    }\n    isOpen(open) {\n        this.ctx.isOpen = open;\n    }\n    _clear() {\n        if (this.searchTimer) {\n            this.searchTimer.unsubscribe();\n            this.searchTimer = null;\n        }\n        if (this.dataService) {\n            this.dataService.cancel();\n        }\n        this.viewContainer.clear();\n        this.viewRef = null;\n    }\n    searchTimerComplete(term) {\n        // Begin the search\n        if (isNil(term) || term.length < this.ctrListMinSearchLength) {\n            this.ctx.searching = false;\n            return;\n        }\n        this.term = term;\n        if (this._dataService) {\n            this._dataService.search(term);\n        }\n    }\n    refreshTemplate() {\n        // create the template if it doesn't exist\n        if (!this.viewRef) {\n            this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, this.ctx);\n        }\n        else if (!this.viewRef.destroyed) {\n            // refresh the template\n            this.viewRef.context.isOpen = this.ctx.isOpen;\n            this.viewRef.context.results = this.ctx.results;\n            this.viewRef.context.searching = this.ctx.searching;\n            this.viewRef.context.searchInitialized = this.ctx.searchInitialized;\n            this.viewRef.detectChanges();\n        }\n        this.cd.markForCheck();\n    }\n    getBestMatchIndex() {\n        if (!this.ctx.results || !this.term) {\n            return null;\n        }\n        // First try to find the exact term\n        let bestMatch = this.ctx.results.findIndex((item) => item.title.toLowerCase() === this.term.toLocaleLowerCase());\n        // If not try to find the first item that starts with the term\n        if (bestMatch < 0) {\n            bestMatch = this.ctx.results.findIndex((item) => item.title.toLowerCase().startsWith(this.term.toLocaleLowerCase()));\n        }\n        // If not try to find the first item that includes the term\n        if (bestMatch < 0) {\n            bestMatch = this.ctx.results.findIndex((item) => item.title.toLowerCase().includes(this.term.toLocaleLowerCase()));\n        }\n        return bestMatch < 0 ? null : bestMatch;\n    }\n    dataServiceSubscribe() {\n        if (this._dataService) {\n            this._dataService.subscribe((results) => {\n                this.ctx.searchInitialized = true;\n                this.ctx.searching = false;\n                this.ctx.results = results;\n                if (this.ctrListAutoMatch &&\n                    results &&\n                    results.length === 1 &&\n                    results[0].title &&\n                    !isNil(this.term) &&\n                    results[0].title.toLocaleLowerCase() ===\n                        this.term.toLocaleLowerCase()) {\n                    // Do automatch\n                    this.completer.onSelected(results[0]);\n                    return;\n                }\n                this.refreshTemplate();\n                if (this.ctrListAutoHighlight) {\n                    this.completer.autoHighlightIndex = this.getBestMatchIndex();\n                }\n            }, (error) => {\n                // tslint:disable-next-line:no-console\n                console.error(error);\n                // tslint:disable-next-line:no-console\n                console.error(\"Unexpected error in dataService: errors should be handled by the dataService Observable\");\n                return [];\n            });\n            if (this._dataService.dataSourceChange) {\n                this._dataService.dataSourceChange.subscribe(() => {\n                    this.term = null;\n                    this.ctx.searchInitialized = false;\n                    this.ctx.searching = false;\n                    this.ctx.results = [];\n                    this.refreshTemplate();\n                    this.completer.onDataSourceChange();\n                });\n            }\n        }\n    }\n};\nCtrList.ɵfac = function CtrList_Factory(t) { return new (t || CtrList)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCtrList.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrList, selectors: [[\"\", \"ctrList\", \"\"]], inputs: { ctrListMinSearchLength: \"ctrListMinSearchLength\", ctrListPause: \"ctrListPause\", ctrListAutoMatch: \"ctrListAutoMatch\", ctrListAutoHighlight: \"ctrListAutoHighlight\", ctrListDisplaySearching: \"ctrListDisplaySearching\", dataService: [\"ctrList\", \"dataService\"], initialValue: [\"ctrListInitialValue\", \"initialValue\"] } });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListMinSearchLength\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListPause\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListAutoMatch\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListAutoHighlight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListDisplaySearching\", void 0);\n__decorate([\n    Input(\"ctrList\"),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CtrList.prototype, \"dataService\", null);\n__decorate([\n    Input(\"ctrListInitialValue\"),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CtrList.prototype, \"initialValue\", null);\nCtrList = __decorate([ __param(0, Host()),\n    __metadata(\"design:paramtypes\", [CtrCompleter,\n        TemplateRef,\n        ViewContainerRef,\n        ChangeDetectorRef,\n        NgZone])\n], CtrList);\n\nlet CtrRow = class CtrRow {\n    constructor(el, renderer, dropdown) {\n        this.el = el;\n        this.renderer = renderer;\n        this.dropdown = dropdown;\n        this.selected = false;\n        this._rowIndex = 0;\n        this._item = null;\n    }\n    ngOnDestroy() {\n        if (this._rowIndex) {\n            this.dropdown.unregisterRow(this._rowIndex);\n        }\n    }\n    set ctrRow(index) {\n        this._rowIndex = index;\n        this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n    }\n    set dataItem(item) {\n        this._item = item;\n    }\n    onClick(event) {\n        this.dropdown.onSelected(this._item);\n    }\n    onMouseEnter(event) {\n        this.dropdown.highlightRow(this._rowIndex);\n    }\n    onMouseDown(event) {\n        this.dropdown.rowMouseDown();\n    }\n    setHighlighted(selected) {\n        this.selected = selected;\n        if (this.selected) {\n            this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\n        }\n        else {\n            this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\n        }\n    }\n    getNativeElement() {\n        return this.el.nativeElement;\n    }\n    getDataItem() {\n        return this._item;\n    }\n};\nCtrRow.ɵfac = function CtrRow_Factory(t) { return new (t || CtrRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(CtrDropdown, 1)); };\nCtrRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrRow, selectors: [[\"\", \"ctrRow\", \"\"]], hostBindings: function CtrRow_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CtrRow_click_HostBindingHandler($event) { return ctx.onClick($event); })(\"mouseenter\", function CtrRow_mouseenter_HostBindingHandler($event) { return ctx.onMouseEnter($event); })(\"mousedown\", function CtrRow_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });\n    } }, inputs: { ctrRow: \"ctrRow\", dataItem: \"dataItem\" } });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], CtrRow.prototype, \"ctrRow\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CtrRow.prototype, \"dataItem\", null);\n__decorate([\n    HostListener(\"click\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrRow.prototype, \"onClick\", null);\n__decorate([\n    HostListener(\"mouseenter\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrRow.prototype, \"onMouseEnter\", null);\n__decorate([\n    HostListener(\"mousedown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrRow.prototype, \"onMouseDown\", null);\nCtrRow = __decorate([ __param(2, Host()),\n    __metadata(\"design:paramtypes\", [ElementRef, Renderer2, CtrDropdown])\n], CtrRow);\n\nlet CompleterListItemCmp = class CompleterListItemCmp {\n    constructor() {\n        this.text = \"\";\n        this.searchStr = \"\";\n        this.matchClass = \"\";\n        this.type = \"\";\n        this.parts = [];\n    }\n    ngOnInit() {\n        if (!this.searchStr) {\n            this.parts.push({ isMatch: false, text: this.text });\n            return;\n        }\n        const matchStr = this.text.toLowerCase();\n        let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n        let startIndex = 0;\n        while (matchPos >= 0) {\n            const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n            if (matchPos === 0) {\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length;\n            }\n            else if (matchPos > 0) {\n                const matchPart = this.text.slice(startIndex, matchPos);\n                this.parts.push({ isMatch: false, text: matchPart });\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length + matchPart.length;\n            }\n            matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n        }\n        if (startIndex < this.text.length) {\n            this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n        }\n    }\n};\nCompleterListItemCmp.ɵfac = function CompleterListItemCmp_Factory(t) { return new (t || CompleterListItemCmp)(); };\nCompleterListItemCmp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CompleterListItemCmp, selectors: [[\"completer-list-item\"]], inputs: { text: \"text\", searchStr: \"searchStr\", matchClass: \"matchClass\", type: \"type\" }, decls: 2, vars: 5, consts: [[1, \"completer-list-item-holder\", 3, \"ngClass\"], [\"class\", \"completer-list-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"completer-list-item\", 3, \"ngClass\"]], template: function CompleterListItemCmp_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, CompleterListItemCmp_span_1_Template, 2, 2, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx.type === \"title\", ctx.type === \"description\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    } }, dependencies: [ɵngcc3.NgClass, ɵngcc3.NgForOf], encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"text\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"searchStr\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"matchClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"type\", void 0);\n\nconst noop = () => {\n    return;\n};\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CompleterCmp),\n};\nlet CompleterCmp = class CompleterCmp {\n    constructor(completerService, cdr) {\n        this.completerService = completerService;\n        this.cdr = cdr;\n        this.inputName = \"\";\n        this.inputId = \"\";\n        this.pause = PAUSE;\n        this.minSearchLength = MIN_SEARCH_LENGTH;\n        this.maxChars = MAX_CHARS;\n        this.overrideSuggested = false;\n        this.clearSelected = false;\n        this.clearUnselected = false;\n        this.fillHighlighted = true;\n        this.placeholder = \"\";\n        this.autoMatch = false;\n        this.disableInput = false;\n        this.autofocus = false;\n        this.openOnFocus = false;\n        this.openOnClick = false;\n        this.selectOnClick = false;\n        this.selectOnFocus = false;\n        this.autoHighlight = false;\n        this.selected = new EventEmitter();\n        this.highlighted = new EventEmitter();\n        this.blurEvent = new EventEmitter();\n        this.click = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.opened = new EventEmitter();\n        this.keyup = new EventEmitter();\n        this.keydown = new EventEmitter();\n        this.control = new FormControl(\"\");\n        this.displaySearching = true;\n        this.displayNoResults = true;\n        this._textNoResults = TEXT_NO_RESULTS;\n        this._textSearching = TEXT_SEARCHING;\n        this._onTouchedCallback = noop;\n        this._onChangeCallback = noop;\n        this._focus = false;\n        this._open = false;\n        this._searchStr = \"\";\n    }\n    get value() { return this.searchStr; }\n    ;\n    set value(v) {\n        if (v !== this.searchStr) {\n            this.searchStr = v;\n        }\n        // Propagate the change in any case\n        this._onChangeCallback(v);\n    }\n    get searchStr() {\n        return this._searchStr;\n    }\n    set searchStr(value) {\n        if (typeof value === \"string\" || isNil(value)) {\n            this._searchStr = value;\n        }\n        else {\n            this._searchStr = JSON.stringify(value);\n        }\n    }\n    ngAfterViewInit() {\n        if (this.autofocus) {\n            this._focus = true;\n        }\n        if (!this.completer) {\n            return;\n        }\n        this.completer.selected.subscribe((item) => {\n            this.selected.emit(item);\n        });\n        this.completer.highlighted.subscribe((item) => {\n            this.highlighted.emit(item);\n        });\n        this.completer.opened.subscribe((isOpen) => {\n            this._open = isOpen;\n            this.opened.emit(isOpen);\n        });\n    }\n    ngAfterViewChecked() {\n        if (this._focus) {\n            setTimeout(() => {\n                if (!!this.ctrInput) {\n                    this.ctrInput.nativeElement.focus();\n                    this._focus = false;\n                }\n            }, 0);\n        }\n    }\n    onTouched() {\n        this._onTouchedCallback();\n    }\n    writeValue(value) {\n        this.searchStr = value;\n    }\n    registerOnChange(fn) {\n        this._onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disableInput = isDisabled;\n    }\n    set datasource(source) {\n        if (source) {\n            if (source instanceof Array) {\n                this.dataService = this.completerService.local(source);\n            }\n            else if (typeof (source) === \"string\") {\n                this.dataService = this.completerService.remote(source);\n            }\n            else {\n                this.dataService = source;\n            }\n        }\n    }\n    set textNoResults(text) {\n        if (this._textNoResults !== text) {\n            this._textNoResults = text;\n            this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\n        }\n    }\n    set textSearching(text) {\n        if (this._textSearching !== text) {\n            this._textSearching = text;\n            this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\n        }\n    }\n    onBlur() {\n        this.blurEvent.emit();\n        this.onTouched();\n        this.cdr.detectChanges();\n    }\n    onFocus() {\n        this.focusEvent.emit();\n        this.onTouched();\n    }\n    onClick(event) {\n        this.click.emit(event);\n        this.onTouched();\n    }\n    onKeyup(event) {\n        this.keyup.emit(event);\n        event.stopPropagation();\n    }\n    onKeydown(event) {\n        this.keydown.emit(event);\n        event.stopPropagation();\n    }\n    onChange(value) {\n        this.value = value;\n    }\n    open() {\n        if (!this.completer) {\n            return;\n        }\n        this.completer.open();\n    }\n    close() {\n        if (!this.completer) {\n            return;\n        }\n        this.completer.clear();\n    }\n    focus() {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.focus();\n        }\n        else {\n            this._focus = true;\n        }\n    }\n    blur() {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.blur();\n        }\n        else {\n            this._focus = false;\n        }\n    }\n    isOpen() {\n        return this._open;\n    }\n};\nCompleterCmp.ɵfac = function CompleterCmp_Factory(t) { return new (t || CompleterCmp)(ɵngcc0.ɵɵdirectiveInject(CompleterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCompleterCmp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CompleterCmp, selectors: [[\"ng2-completer\"]], viewQuery: function CompleterCmp_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CtrCompleter, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.completer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ctrInput = _t.first);\n    } }, inputs: { inputName: \"inputName\", inputId: \"inputId\", pause: \"pause\", minSearchLength: \"minSearchLength\", maxChars: \"maxChars\", overrideSuggested: \"overrideSuggested\", clearSelected: \"clearSelected\", clearUnselected: \"clearUnselected\", fillHighlighted: \"fillHighlighted\", placeholder: \"placeholder\", autoMatch: \"autoMatch\", disableInput: \"disableInput\", autofocus: \"autofocus\", openOnFocus: \"openOnFocus\", openOnClick: \"openOnClick\", selectOnClick: \"selectOnClick\", selectOnFocus: \"selectOnFocus\", autoHighlight: \"autoHighlight\", datasource: \"datasource\", dataService: \"dataService\", textNoResults: \"textNoResults\", textSearching: \"textSearching\", matchClass: \"matchClass\", fieldTabindex: \"fieldTabindex\", inputClass: \"inputClass\", initialValue: \"initialValue\" }, outputs: { selected: \"selected\", highlighted: \"highlighted\", blurEvent: \"blur\", click: \"click\", focusEvent: \"focus\", opened: \"opened\", keyup: \"keyup\", keydown: \"keydown\" }, features: [ɵngcc0.ɵɵProvidersFeature([COMPLETER_CONTROL_VALUE_ACCESSOR])], decls: 4, vars: 23, consts: [[\"ctrCompleter\", \"\", 1, \"completer-holder\"], [\"type\", \"search\", \"ctrInput\", \"\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 1, \"completer-input\", 3, \"ngClass\", \"ngModel\", \"placeholder\", \"tabindex\", \"disabled\", \"clearSelected\", \"clearUnselected\", \"overrideSuggested\", \"openOnFocus\", \"fillHighlighted\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"ngModelChange\", \"blur\", \"focus\", \"keyup\", \"keydown\", \"click\"], [\"ctrInput\", \"\"], [\"class\", \"completer-dropdown-holder\", 4, \"ctrList\", \"ctrListMinSearchLength\", \"ctrListPause\", \"ctrListAutoMatch\", \"ctrListInitialValue\", \"ctrListAutoHighlight\", \"ctrListDisplaySearching\"], [1, \"completer-dropdown-holder\"], [\"class\", \"completer-dropdown\", \"ctrDropdown\", \"\", 4, \"ngIf\"], [\"ctrDropdown\", \"\", 1, \"completer-dropdown\"], [\"class\", \"completer-searching\", 4, \"ngIf\"], [\"class\", \"completer-no-results\", 4, \"ngIf\"], [\"class\", \"completer-row-wrapper\", 4, \"ngFor\", \"ngForOf\"], [1, \"completer-searching\"], [1, \"completer-no-results\"], [1, \"completer-row-wrapper\"], [1, \"completer-row\", 3, \"ctrRow\", \"dataItem\"], [\"class\", \"completer-image-holder\", 4, \"ngIf\"], [1, \"completer-item-text\", 3, \"ngClass\"], [1, \"completer-title\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\"], [\"class\", \"completer-description\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\", 4, \"ngIf\"], [1, \"completer-image-holder\"], [\"class\", \"completer-image\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"completer-image-default\", 4, \"ngIf\"], [1, \"completer-image\", 3, \"src\"], [1, \"completer-image-default\"], [1, \"completer-description\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\"]], template: function CompleterCmp_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterCmp_Template_input_ngModelChange_1_listener($event) { return ctx.searchStr = $event; })(\"ngModelChange\", function CompleterCmp_Template_input_ngModelChange_1_listener($event) { return ctx.onChange($event); })(\"blur\", function CompleterCmp_Template_input_blur_1_listener() { return ctx.onBlur(); })(\"focus\", function CompleterCmp_Template_input_focus_1_listener() { return ctx.onFocus(); })(\"keyup\", function CompleterCmp_Template_input_keyup_1_listener($event) { return ctx.onKeyup($event); })(\"keydown\", function CompleterCmp_Template_input_keydown_1_listener($event) { return ctx.onKeydown($event); })(\"click\", function CompleterCmp_Template_input_click_1_listener($event) { return ctx.onClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, CompleterCmp_div_3_Template, 2, 1, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.searchStr)(\"placeholder\", ctx.placeholder)(\"tabindex\", ctx.fieldTabindex)(\"disabled\", ctx.disableInput)(\"clearSelected\", ctx.clearSelected)(\"clearUnselected\", ctx.clearUnselected)(\"overrideSuggested\", ctx.overrideSuggested)(\"openOnFocus\", ctx.openOnFocus)(\"fillHighlighted\", ctx.fillHighlighted)(\"openOnClick\", ctx.openOnClick)(\"selectOnClick\", ctx.selectOnClick)(\"selectOnFocus\", ctx.selectOnFocus);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.inputId.length > 0 ? ctx.inputId : null)(\"name\", ctx.inputName)(\"maxlength\", ctx.maxChars);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ctrList\", ctx.dataService)(\"ctrListMinSearchLength\", ctx.minSearchLength)(\"ctrListPause\", ctx.pause)(\"ctrListAutoMatch\", ctx.autoMatch)(\"ctrListInitialValue\", ctx.initialValue)(\"ctrListAutoHighlight\", ctx.autoHighlight)(\"ctrListDisplaySearching\", ctx.displaySearching);\n    } }, dependencies: [ɵngcc3.NgClass, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.MaxLengthValidator, ɵngcc2.NgModel, CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow], styles: [\".completer-dropdown[_ngcontent-%COMP%] {\\n        border-color: #ececec;\\n        border-width: 1px;\\n        border-style: solid;\\n        border-radius: 2px;\\n        width: 250px;\\n        padding: 6px;\\n        cursor: pointer;\\n        z-index: 9999;\\n        position: absolute;\\n        margin-top: -6px;\\n        background-color: #ffffff;\\n    }\\n\\n    .completer-row[_ngcontent-%COMP%] {\\n        padding: 5px;\\n        color: #000000;\\n        margin-bottom: 4px;\\n        clear: both;\\n        display: inline-block;\\n        width: 103%;\\n    }\\n\\n    .completer-selected-row[_ngcontent-%COMP%] {\\n        background-color: lightblue;\\n        color: #ffffff;\\n    }\\n\\n    .completer-description[_ngcontent-%COMP%] {\\n        font-size: 14px;\\n    }\\n\\n    .completer-image-default[_ngcontent-%COMP%] {\\n        width: 16px;\\n        height: 16px;\\n        background-image: url(\\\"demo/res/img/default.png\\\");\\n    }\\n\\n    .completer-image-holder[_ngcontent-%COMP%] {\\n        float: left;\\n        width: 10%;\\n    }\\n    .completer-item-text-image[_ngcontent-%COMP%] {\\n        float: right;\\n        width: 90%;\\n    }\"] });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"dataService\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"inputName\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterCmp.prototype, \"inputId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"pause\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"minSearchLength\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"maxChars\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"overrideSuggested\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"clearSelected\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"clearUnselected\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"fillHighlighted\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"placeholder\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"matchClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"fieldTabindex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"autoMatch\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"disableInput\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"inputClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"autofocus\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"openOnFocus\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"openOnClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"selectOnClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"selectOnFocus\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"initialValue\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"autoHighlight\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"selected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"highlighted\", void 0);\n__decorate([\n    Output(\"blur\"),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"blurEvent\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"click\", void 0);\n__decorate([\n    Output(\"focus\"),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"focusEvent\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"opened\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], CompleterCmp.prototype, \"keyup\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], CompleterCmp.prototype, \"keydown\", void 0);\n__decorate([\n    ViewChild(CtrCompleter, { static: false }),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"completer\", void 0);\n__decorate([\n    ViewChild(\"ctrInput\", { static: false }),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"ctrInput\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CompleterCmp.prototype, \"datasource\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], CompleterCmp.prototype, \"textNoResults\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], CompleterCmp.prototype, \"textSearching\", null);\nCompleterCmp = __decorate([ __metadata(\"design:paramtypes\", [CompleterService, ChangeDetectorRef])\n], CompleterCmp);\n\nvar Ng2CompleterModule_1;\nconst providers = [\n    CompleterService,\n    LocalDataFactory,\n    RemoteDataFactory\n];\nlet Ng2CompleterModule = Ng2CompleterModule_1 = class Ng2CompleterModule {\n    static forRoot() {\n        return {\n            ngModule: Ng2CompleterModule_1,\n            providers\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: Ng2CompleterModule_1,\n            providers\n        };\n    }\n};\nNg2CompleterModule.ɵfac = function Ng2CompleterModule_Factory(t) { return new (t || Ng2CompleterModule)(); };\nNg2CompleterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2CompleterModule });\nNg2CompleterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: providers, imports: [CommonModule,\n        FormsModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocalDataFactory, [{\n        type: Injectable\n    }], null, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RemoteDataFactory, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterService, [{\n        type: Injectable\n    }], function () { return [{ type: LocalDataFactory }, { type: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n     }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrCompleter, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrCompleter]\"\n            }]\n    }], function () { return []; }, { selected: [{\n            type: Output\n        }], highlighted: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], dataSourceChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrDropdown, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrDropdown]\"\n            }]\n    }], function () { return [{ type: CtrCompleter, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { onMouseDown: [{\n            type: HostListener,\n            args: [\"mousedown\", [\"$event\"]]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrInput, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrInput]\"\n            }]\n    }], function () { return [{ type: CtrCompleter, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc2.NgModel }, { type: ɵngcc0.ElementRef }]; }, { clearSelected: [{\n            type: Input,\n            args: [\"clearSelected\"]\n        }], clearUnselected: [{\n            type: Input,\n            args: [\"clearUnselected\"]\n        }], overrideSuggested: [{\n            type: Input,\n            args: [\"overrideSuggested\"]\n        }], fillHighlighted: [{\n            type: Input,\n            args: [\"fillHighlighted\"]\n        }], openOnFocus: [{\n            type: Input,\n            args: [\"openOnFocus\"]\n        }], openOnClick: [{\n            type: Input,\n            args: [\"openOnClick\"]\n        }], selectOnClick: [{\n            type: Input,\n            args: [\"selectOnClick\"]\n        }], selectOnFocus: [{\n            type: Input,\n            args: [\"selectOnFocus\"]\n        }], ngModelChange: [{\n            type: Output\n        }], keyupHandler: [{\n            type: HostListener,\n            args: [\"keyup\", [\"$event\"]]\n        }], pasteHandler: [{\n            type: HostListener,\n            args: [\"paste\", [\"$event\"]]\n        }], keydownHandler: [{\n            type: HostListener,\n            args: [\"keydown\", [\"$event\"]]\n        }], onBlur: [{\n            type: HostListener,\n            args: [\"blur\", [\"$event\"]]\n        }], onfocus: [{\n            type: HostListener,\n            args: [\"focus\", []]\n        }], onClick: [{\n            type: HostListener,\n            args: [\"click\", [\"$event\"]]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrList, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrList]\"\n            }]\n    }], function () { return [{ type: CtrCompleter, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { ctrListMinSearchLength: [{\n            type: Input\n        }], ctrListPause: [{\n            type: Input\n        }], ctrListAutoMatch: [{\n            type: Input\n        }], ctrListAutoHighlight: [{\n            type: Input\n        }], ctrListDisplaySearching: [{\n            type: Input\n        }], dataService: [{\n            type: Input,\n            args: [\"ctrList\"]\n        }], initialValue: [{\n            type: Input,\n            args: [\"ctrListInitialValue\"]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrRow, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrRow]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: CtrDropdown, decorators: [{\n                type: Host\n            }] }]; }, { ctrRow: [{\n            type: Input\n        }], dataItem: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: [\"click\", [\"$event\"]]\n        }], onMouseEnter: [{\n            type: HostListener,\n            args: [\"mouseenter\", [\"$event\"]]\n        }], onMouseDown: [{\n            type: HostListener,\n            args: [\"mousedown\", [\"$event\"]]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterListItemCmp, [{\n        type: Component,\n        args: [{\n                selector: \"completer-list-item\",\n                template: `<span class=\"completer-list-item-holder\" [ngClass]= \"{'completer-title': type === 'title', 'completer-description': type === 'description'}\" >\n        <span class=\"completer-list-item\" *ngFor=\"let part of parts\" [ngClass]= \"part.isMatch ? matchClass : null\">{{part.text}}</span>\n    </span>`\n            }]\n    }], function () { return []; }, { text: [{\n            type: Input\n        }], searchStr: [{\n            type: Input\n        }], matchClass: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterCmp, [{\n        type: Component,\n        args: [{ selector: \"ng2-completer\", template: `\n        <div class=\"completer-holder\" ctrCompleter>\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\"\n                class=\"completer-input\" ctrInput [ngClass]=\"inputClass\"\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\"\n                [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\"\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\"\n                [openOnClick]=\"openOnClick\" [selectOnClick]=\"selectOnClick\" [selectOnFocus]=\"selectOnFocus\"\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\"\n                (keydown)=\"onKeydown($event)\" (click)=\"onClick($event)\"\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\n\n            <div class=\"completer-dropdown-holder\"\n                *ctrList=\"dataService;\n                    minSearchLength: minSearchLength;\n                    pause: pause;\n                    autoMatch: autoMatch;\n                    initialValue: initialValue;\n                    autoHighlight: autoHighlight;\n                    displaySearching: displaySearching;\n                    let items = results;\n                    let searchActive = searching;\n                    let isInitialized = searchInitialized;\n                    let isOpen = isOpen;\">\n                <div class=\"completer-dropdown\" ctrDropdown\n                    *ngIf=\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\">\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{ _textSearching }}</div>\n                    <div *ngIf=\"!searchActive && (!items || items?.length === 0)\"\n                    class=\"completer-no-results\">{{ _textNoResults }}</div>\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\n                            </div>\n                            <div class=\"completer-item-text\"\n                            [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\n                                <completer-list-item\n                                class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\"\n                                [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\"\n                                class=\"completer-description\" [text]=\"item.description\"\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\n                                </completer-list-item>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `, providers: [COMPLETER_CONTROL_VALUE_ACCESSOR], styles: [\"\\n    .completer-dropdown {\\n        border-color: #ececec;\\n        border-width: 1px;\\n        border-style: solid;\\n        border-radius: 2px;\\n        width: 250px;\\n        padding: 6px;\\n        cursor: pointer;\\n        z-index: 9999;\\n        position: absolute;\\n        margin-top: -6px;\\n        background-color: #ffffff;\\n    }\\n\\n    .completer-row {\\n        padding: 5px;\\n        color: #000000;\\n        margin-bottom: 4px;\\n        clear: both;\\n        display: inline-block;\\n        width: 103%;\\n    }\\n\\n    .completer-selected-row {\\n        background-color: lightblue;\\n        color: #ffffff;\\n    }\\n\\n    .completer-description {\\n        font-size: 14px;\\n    }\\n\\n    .completer-image-default {\\n        width: 16px;\\n        height: 16px;\\n        background-image: url(\\\"demo/res/img/default.png\\\");\\n    }\\n\\n    .completer-image-holder {\\n        float: left;\\n        width: 10%;\\n    }\\n    .completer-item-text-image {\\n        float: right;\\n        width: 90%;\\n    }\\n    \"] }]\n    }], function () { return [{ type: CompleterService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { inputName: [{\n            type: Input\n        }], inputId: [{\n            type: Input\n        }], pause: [{\n            type: Input\n        }], minSearchLength: [{\n            type: Input\n        }], maxChars: [{\n            type: Input\n        }], overrideSuggested: [{\n            type: Input\n        }], clearSelected: [{\n            type: Input\n        }], clearUnselected: [{\n            type: Input\n        }], fillHighlighted: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], autoMatch: [{\n            type: Input\n        }], disableInput: [{\n            type: Input\n        }], autofocus: [{\n            type: Input\n        }], openOnFocus: [{\n            type: Input\n        }], openOnClick: [{\n            type: Input\n        }], selectOnClick: [{\n            type: Input\n        }], selectOnFocus: [{\n            type: Input\n        }], autoHighlight: [{\n            type: Input\n        }], selected: [{\n            type: Output\n        }], highlighted: [{\n            type: Output\n        }], blurEvent: [{\n            type: Output,\n            args: [\"blur\"]\n        }], click: [{\n            type: Output\n        }], focusEvent: [{\n            type: Output,\n            args: [\"focus\"]\n        }], opened: [{\n            type: Output\n        }], keyup: [{\n            type: Output\n        }], keydown: [{\n            type: Output\n        }], datasource: [{\n            type: Input\n        }], dataService: [{\n            type: Input\n        }], textNoResults: [{\n            type: Input\n        }], textSearching: [{\n            type: Input\n        }], matchClass: [{\n            type: Input\n        }], fieldTabindex: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], initialValue: [{\n            type: Input\n        }], completer: [{\n            type: ViewChild,\n            args: [CtrCompleter, { static: false }]\n        }], ctrInput: [{\n            type: ViewChild,\n            args: [\"ctrInput\", { static: false }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2CompleterModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CompleterListItemCmp,\n                    CtrCompleter,\n                    CtrDropdown,\n                    CtrInput,\n                    CtrList,\n                    CtrRow,\n                    CompleterCmp\n                ],\n                exports: [\n                    CompleterListItemCmp,\n                    CtrCompleter,\n                    CtrDropdown,\n                    CtrInput,\n                    CtrList,\n                    CtrRow,\n                    CompleterCmp\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule\n                ],\n                providers\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2CompleterModule, { declarations: function () { return [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp]; }, imports: function () { return [CommonModule,\n        FormsModule]; }, exports: function () { return [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp]; } }); })();\n\nexport { CompleterCmp, CompleterListItemCmp, CompleterService, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, LocalData, LocalDataFactory, Ng2CompleterModule, RemoteData, RemoteDataFactory, CtrListContext as ɵa, CompleterBaseData as ɵb };\n\n","import { EventEmitter, Directive, ElementRef, Output, HostListener, Input, Injectable, Pipe, Component, ContentChild, TemplateRef, ViewContainerRef, ViewEncapsulation, Renderer2, NgZone, ChangeDetectorRef, Inject, PLATFORM_ID, Optional, ViewChild, NgModule, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as tween from '@tweenjs/tween.js';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction CIcon__svg_svg_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 4)(1, \"g\");\n    ɵngcc0.ɵɵelement(2, \"path\", 5);\n    ɵngcc0.ɵɵelementEnd()();\n} }\nfunction CIcon__svg_svg_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 6)(1, \"g\")(2, \"g\", 7)(3, \"g\");\n    ɵngcc0.ɵɵelement(4, \"path\", 8);\n    ɵngcc0.ɵɵelementEnd()()()();\n} }\nfunction CIcon__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 6)(1, \"g\")(2, \"g\", 9)(3, \"g\");\n    ɵngcc0.ɵɵelement(4, \"path\", 10);\n    ɵngcc0.ɵɵelementEnd()()()();\n} }\nfunction CIcon__svg_svg_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 11)(1, \"g\")(2, \"g\")(3, \"g\", 12)(4, \"g\");\n    ɵngcc0.ɵɵelement(5, \"path\", 13);\n    ɵngcc0.ɵɵelementEnd()()()()();\n} }\nfunction CIcon__svg_svg_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 14)(1, \"g\");\n    ɵngcc0.ɵɵelement(2, \"path\", 15);\n    ɵngcc0.ɵɵelementEnd()();\n} }\nconst _c0 = [\"header\"];\nconst _c1 = [\"container\"];\nconst _c2 = [\"content\"];\nconst _c3 = [\"invisiblePadding\"];\nconst _c4 = [\"*\"];\nconst _c5 = [\"searchInput\"];\nconst _c6 = [\"selectedList\"];\nconst _c7 = [\"dropdownList\"];\nconst _c8 = [\"cuppaDropdown\"];\nfunction AngularMultiSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.settings.text);\n} }\nfunction AngularMultiSelect_span_6_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r27 = ctx.$implicit;\n    const ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r27[ctx_r26.settings.labelKey], \" \");\n} }\nfunction AngularMultiSelect_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_span_6_span_1_Template, 2, 1, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.selectedItems)(\"ngForTrackBy\", ctx_r3.trackByFn.bind(ctx_r3));\n} }\nfunction AngularMultiSelect_span_7_div_1_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 29);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r30 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r32 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r30[ctx_r32.settings.labelKey]);\n} }\nfunction AngularMultiSelect_span_7_div_1_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 29);\n    ɵngcc0.ɵɵelement(1, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r30 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r33 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r33.badgeTempl)(\"item\", item_r30);\n} }\nfunction AngularMultiSelect_span_7_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_span_7_div_1_span_1_Template, 2, 1, \"span\", 26);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_span_7_div_1_span_2_Template, 2, 2, \"span\", 26);\n    ɵngcc0.ɵɵelementStart(3, \"span\", 27);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_span_7_div_1_Template_span_click_3_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r37); const item_r30 = restoredCtx.$implicit; const k_r31 = restoredCtx.index; const ctx_r36 = ɵngcc0.ɵɵnextContext(2); ctx_r36.onItemClick(item_r30, k_r31, $event); return ɵngcc0.ɵɵresetView($event.stopPropagation()); });\n    ɵngcc0.ɵɵelement(4, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r29.badgeTempl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r29.badgeTempl);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"name\", \"remove\");\n} }\nfunction AngularMultiSelect_span_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_span_7_div_1_Template, 5, 3, \"div\", 24);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.selectedItems)(\"ngForTrackBy\", ctx_r4.trackByFn.bind(ctx_r4));\n} }\nfunction AngularMultiSelect_div_8_div_1_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 29);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r39 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r41 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r39[ctx_r41.settings.labelKey]);\n} }\nfunction AngularMultiSelect_div_8_div_1_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 29);\n    ɵngcc0.ɵɵelement(1, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r39 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r42 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r42.badgeTempl)(\"item\", item_r39);\n} }\nfunction AngularMultiSelect_div_8_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r46 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_8_div_1_span_1_Template, 2, 1, \"span\", 26);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_8_div_1_span_2_Template, 2, 2, \"span\", 26);\n    ɵngcc0.ɵɵelementStart(3, \"span\", 27);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_8_div_1_Template_span_click_3_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r46); const item_r39 = restoredCtx.$implicit; const k_r40 = restoredCtx.index; const ctx_r45 = ɵngcc0.ɵɵnextContext(2); ctx_r45.onItemClick(item_r39, k_r40, $event); return ɵngcc0.ɵɵresetView($event.stopPropagation()); });\n    ɵngcc0.ɵɵelement(4, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const k_r40 = ctx.index;\n    const ctx_r38 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", k_r40 > ctx_r38.settings.badgeShowLimit - 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r38.badgeTempl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r38.badgeTempl);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"name\", \"remove\");\n} }\nfunction AngularMultiSelect_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_8_div_1_Template, 5, 4, \"div\", 31);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.selectedItems)(\"ngForTrackBy\", ctx_r5.trackByFn.bind(ctx_r5));\n} }\nfunction AngularMultiSelect_span_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 33);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"+\", (ctx_r6.selectedItems == null ? null : ctx_r6.selectedItems.length) - ctx_r6.settings.badgeShowLimit, \"\");\n} }\nfunction AngularMultiSelect_span_10_Template(rf, ctx) { if (rf & 1) {\n    const _r48 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 34);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_span_10_Template_span_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r47 = ɵngcc0.ɵɵnextContext(); ctx_r47.clearSelection($event); return ɵngcc0.ɵɵresetView($event.stopPropagation()); });\n    ɵngcc0.ɵɵelement(1, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"name\", \"remove\");\n} }\nfunction AngularMultiSelect_span_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 35);\n    ɵngcc0.ɵɵelement(1, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"name\", \"angle-down\");\n} }\nfunction AngularMultiSelect_span_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 36);\n    ɵngcc0.ɵɵelement(1, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"name\", \"angle-up\");\n} }\nfunction AngularMultiSelect_div_18_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r51 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 41);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularMultiSelect_div_18_input_1_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r51); const ctx_r50 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r50.toggleSelectAll($event)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r49 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r49.isSelectAll)(\"disabled\", ctx_r49.settings.limitSelection == (ctx_r49.selectedItems == null ? null : ctx_r49.selectedItems.length))(\"id\", ctx_r49.id);\n} }\nfunction AngularMultiSelect_div_18_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 37);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_18_input_1_Template, 1, 3, \"input\", 38);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 39)(3, \"span\", 40);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 40);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r11.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"for\", ctx_r11.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r11.isSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.settings.selectAllText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", !ctx_r11.isSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.settings.unSelectAllText);\n} }\nfunction AngularMultiSelect_img_19_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 42);\n} }\nfunction AngularMultiSelect_div_20_span_3_Template(rf, ctx) { if (rf & 1) {\n    const _r59 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 48);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_20_span_3_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r58 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r58.clearSearch()); });\n    ɵngcc0.ɵɵelement(1, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r52 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r52.filter == undefined || (ctx_r52.filter == null ? null : ctx_r52.filter.length) == 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"name\", \"clear\");\n} }\nfunction AngularMultiSelect_div_20_span_4_Template(rf, ctx) { if (rf & 1) {\n    const _r61 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 48);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_20_span_4_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r61); const ctx_r60 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r60.resetInfiniteSearch()); });\n    ɵngcc0.ɵɵelement(1, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r53 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r53.filter == undefined || (ctx_r53.filter == null ? null : ctx_r53.filter.length) == 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"name\", \"clear\");\n} }\nfunction AngularMultiSelect_div_20_input_5_Template(rf, ctx) { if (rf & 1) {\n    const _r64 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 49, 50);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function AngularMultiSelect_div_20_input_5_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r63 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r63.filter = $event); })(\"keyup\", function AngularMultiSelect_div_20_input_5_Template_input_keyup_0_listener() { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r65 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r65.filterGroupedList()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r54 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r54.settings.searchPlaceholderText)(\"ngModel\", ctx_r54.filter);\n} }\nfunction AngularMultiSelect_div_20_input_6_Template(rf, ctx) { if (rf & 1) {\n    const _r68 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 49, 50);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function AngularMultiSelect_div_20_input_6_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r67 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r67.filter = $event); })(\"keyup\", function AngularMultiSelect_div_20_input_6_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r69 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r69.filteritems($event)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r55 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r55.settings.searchPlaceholderText)(\"ngModel\", ctx_r55.filter);\n} }\nfunction AngularMultiSelect_div_20_input_7_Template(rf, ctx) { if (rf & 1) {\n    const _r72 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 49, 50);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function AngularMultiSelect_div_20_input_7_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r72); const ctx_r71 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r71.filter = $event); })(\"keyup\", function AngularMultiSelect_div_20_input_7_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r72); const ctx_r73 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r73.onKeyUp($event)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r56 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r56.settings.searchPlaceholderText)(\"ngModel\", ctx_r56.filter);\n} }\nfunction AngularMultiSelect_div_20_c_templateRenderer_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"c-templateRenderer\", 30);\n} if (rf & 2) {\n    const ctx_r57 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r57.searchTempl)(\"item\", ctx_r57.item);\n} }\nfunction AngularMultiSelect_div_20_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 43)(1, \"span\", 44);\n    ɵngcc0.ɵɵelement(2, \"c-icon\", 28);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, AngularMultiSelect_div_20_span_3_Template, 2, 2, \"span\", 45);\n    ɵngcc0.ɵɵtemplate(4, AngularMultiSelect_div_20_span_4_Template, 2, 2, \"span\", 45);\n    ɵngcc0.ɵɵtemplate(5, AngularMultiSelect_div_20_input_5_Template, 2, 2, \"input\", 46);\n    ɵngcc0.ɵɵtemplate(6, AngularMultiSelect_div_20_input_6_Template, 2, 2, \"input\", 46);\n    ɵngcc0.ɵɵtemplate(7, AngularMultiSelect_div_20_input_7_Template, 2, 2, \"input\", 46);\n    ɵngcc0.ɵɵtemplate(8, AngularMultiSelect_div_20_c_templateRenderer_8_Template, 1, 2, \"c-templateRenderer\", 47);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"name\", \"search\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r13.settings.lazyLoading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.settings.lazyLoading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.settings.groupBy && !ctx_r13.settings.lazyLoading && !ctx_r13.searchTempl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r13.settings.groupBy && !ctx_r13.settings.lazyLoading && !ctx_r13.searchTempl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.settings.lazyLoading && !ctx_r13.searchTempl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.searchTempl);\n} }\nfunction AngularMultiSelect_div_21_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r77 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 53);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_21_div_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r77); const ctx_r76 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r76.toggleFilterSelectAll()); });\n    ɵngcc0.ɵɵelement(1, \"input\", 54);\n    ɵngcc0.ɵɵelementStart(2, \"label\")(3, \"span\", 40);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 40);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r74 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r74.isFilterSelectAll)(\"disabled\", ctx_r74.settings.limitSelection == (ctx_r74.selectedItems == null ? null : ctx_r74.selectedItems.length));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r74.isFilterSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r74.settings.filterSelectAllText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", !ctx_r74.isFilterSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r74.settings.filterUnSelectAllText);\n} }\nfunction AngularMultiSelect_div_21_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r79 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 53);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_21_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r78 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r78.toggleFilterSelectAll()); });\n    ɵngcc0.ɵɵelement(1, \"input\", 55);\n    ɵngcc0.ɵɵelementStart(2, \"label\")(3, \"span\", 40);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 40);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r75 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r75.isFilterSelectAll && (ctx_r75.filter == null ? null : ctx_r75.filter.length) > 0)(\"disabled\", ctx_r75.settings.limitSelection == (ctx_r75.selectedItems == null ? null : ctx_r75.selectedItems.length));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r75.isFilterSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r75.settings.filterSelectAllText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", !ctx_r75.isFilterSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r75.settings.filterUnSelectAllText);\n} }\nfunction AngularMultiSelect_div_21_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 51);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_21_div_1_Template, 7, 6, \"div\", 52);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_21_div_2_Template, 7, 6, \"div\", 52);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r14.settings.groupBy && (ctx_r14.filter == null ? null : ctx_r14.filter.length) > 0 && ctx_r14.filterLength > 0 && !ctx_r14.settings.singleSelection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.settings.groupBy && (ctx_r14.filter == null ? null : ctx_r14.filter.length) > 0 && (ctx_r14.groupedData == null ? null : ctx_r14.groupedData.length) > 0 && !ctx_r14.settings.singleSelection);\n} }\nfunction AngularMultiSelect_div_22_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r82 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 53);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_22_div_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r82); const ctx_r81 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r81.toggleInfiniteFilterSelectAll()); });\n    ɵngcc0.ɵɵelement(1, \"input\", 55);\n    ɵngcc0.ɵɵelementStart(2, \"label\")(3, \"span\", 40);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 40);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r80 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r80.isInfiniteFilterSelectAll)(\"disabled\", ctx_r80.settings.limitSelection == (ctx_r80.selectedItems == null ? null : ctx_r80.selectedItems.length));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r80.isInfiniteFilterSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r80.settings.filterSelectAllText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", !ctx_r80.isInfiniteFilterSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r80.settings.filterUnSelectAllText);\n} }\nfunction AngularMultiSelect_div_22_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 51);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_22_div_1_Template, 7, 6, \"div\", 52);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r15.filter == null ? null : ctx_r15.filter.length) > 0 && ctx_r15.infiniteFilterLength > 0);\n} }\nfunction AngularMultiSelect_div_23_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r85 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 57)(1, \"button\", 58);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_23_div_1_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r85); const ctx_r84 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r84.addFilterNewItem()); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r83 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r83.settings.addNewButtonText);\n} }\nfunction AngularMultiSelect_div_23_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 51);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_23_div_1_Template, 3, 1, \"div\", 56);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.settings.addNewItemOnFilter);\n} }\nfunction AngularMultiSelect_div_24_li_2_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 55);\n} if (rf & 2) {\n    const item_r87 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r89 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r89.isSelected(item_r87))(\"disabled\", ctx_r89.settings.limitSelection == (ctx_r89.selectedItems == null ? null : ctx_r89.selectedItems.length) && !ctx_r89.isSelected(item_r87) || item_r87.disabled);\n} }\nconst _c9 = function (a0) { return { \"selected-item\": a0 }; };\nfunction AngularMultiSelect_div_24_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r92 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_24_li_2_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r92); const item_r87 = restoredCtx.$implicit; const i_r88 = restoredCtx.index; const ctx_r91 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r91.onItemClick(item_r87, i_r88, $event)); });\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_24_li_2_input_1_Template, 1, 2, \"input\", 63);\n    ɵngcc0.ɵɵelementStart(2, \"label\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const item_r87 = ctx.$implicit;\n    const ctx_r86 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c9, ctx_r86.isSelected(item_r87) == true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r86.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r87[ctx_r86.settings.labelKey]);\n} }\nfunction AngularMultiSelect_div_24_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 60);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_24_li_2_Template, 4, 5, \"li\", 61);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r17.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r17.data);\n} }\nfunction AngularMultiSelect_div_25_li_3_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r95 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r97 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r97.isSelected(item_r95))(\"disabled\", ctx_r97.settings.limitSelection == (ctx_r97.selectedItems == null ? null : ctx_r97.selectedItems.length) && !ctx_r97.isSelected(item_r95) || item_r95.disabled);\n} }\nfunction AngularMultiSelect_div_25_li_3_Template(rf, ctx) { if (rf & 1) {\n    const _r100 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_25_li_3_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r100); const item_r95 = restoredCtx.$implicit; const i_r96 = restoredCtx.index; const ctx_r99 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r99.onItemClick(item_r95, i_r96, $event)); });\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_25_li_3_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelementStart(2, \"label\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const item_r95 = ctx.$implicit;\n    const ctx_r94 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c9, ctx_r94.isSelected(item_r95) == true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r94.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r95[ctx_r94.settings.labelKey]);\n} }\nconst _c10 = function (a0) { return { \"height\": a0 }; };\nfunction AngularMultiSelect_div_25_Template(rf, ctx) { if (rf & 1) {\n    const _r102 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 64, 65);\n    ɵngcc0.ɵɵlistener(\"vsStart\", function AngularMultiSelect_div_25_Template_ul_vsStart_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r102); const ctx_r101 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r101.onScrollEnd($event)); })(\"vsEnd\", function AngularMultiSelect_div_25_Template_ul_vsEnd_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r102); const ctx_r103 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r103.onScrollEnd($event)); });\n    ɵngcc0.ɵɵtemplate(3, AngularMultiSelect_div_25_li_3_Template, 4, 5, \"li\", 61);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r93 = ɵngcc0.ɵɵreference(2);\n    const ctx_r18 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r18.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"enableUnequalChildrenSizes\", ctx_r18.randomSize)(\"items\", ctx_r18.virtualdata)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(6, _c10, ctx_r18.settings.maxHeight + \"px\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", _r93.viewPortItems);\n} }\nfunction AngularMultiSelect_div_26_li_2_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r105 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r107 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r107.isSelected(item_r105))(\"disabled\", ctx_r107.settings.limitSelection == (ctx_r107.selectedItems == null ? null : ctx_r107.selectedItems.length) && !ctx_r107.isSelected(item_r105) || item_r105.disabled);\n} }\nfunction AngularMultiSelect_div_26_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r110 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_26_li_2_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r110); const item_r105 = restoredCtx.$implicit; const i_r106 = restoredCtx.index; const ctx_r109 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r109.onItemClick(item_r105, i_r106, $event)); });\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_26_li_2_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelement(2, \"label\")(3, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r105 = ctx.$implicit;\n    const ctx_r104 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c9, ctx_r104.isSelected(item_r105) == true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r104.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r104.itemTempl)(\"item\", item_r105);\n} }\nfunction AngularMultiSelect_div_26_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 60);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_26_li_2_Template, 4, 6, \"li\", 61);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r19.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r19.data);\n} }\nfunction AngularMultiSelect_div_27_li_3_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r113 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r115 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r115.isSelected(item_r113))(\"disabled\", ctx_r115.settings.limitSelection == (ctx_r115.selectedItems == null ? null : ctx_r115.selectedItems.length) && !ctx_r115.isSelected(item_r113) || item_r113.disabled);\n} }\nfunction AngularMultiSelect_div_27_li_3_Template(rf, ctx) { if (rf & 1) {\n    const _r118 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_27_li_3_Template_li_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r118); const item_r113 = restoredCtx.$implicit; const i_r114 = restoredCtx.index; const ctx_r117 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r117.onItemClick(item_r113, i_r114, $event)); });\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_27_li_3_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelement(2, \"label\")(3, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r113 = ctx.$implicit;\n    const ctx_r112 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c9, ctx_r112.isSelected(item_r113) == true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r112.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r112.itemTempl)(\"item\", item_r113);\n} }\nfunction AngularMultiSelect_div_27_Template(rf, ctx) { if (rf & 1) {\n    const _r120 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 64, 68);\n    ɵngcc0.ɵɵlistener(\"vsStart\", function AngularMultiSelect_div_27_Template_ul_vsStart_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r120); const ctx_r119 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r119.onScrollEnd($event)); })(\"vsEnd\", function AngularMultiSelect_div_27_Template_ul_vsEnd_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r120); const ctx_r121 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r121.onScrollEnd($event)); });\n    ɵngcc0.ɵɵtemplate(3, AngularMultiSelect_div_27_li_3_Template, 4, 6, \"li\", 61);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r111 = ɵngcc0.ɵɵreference(2);\n    const ctx_r20 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r20.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"enableUnequalChildrenSizes\", ctx_r20.randomSize)(\"items\", ctx_r20.virtualdata)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(6, _c10, ctx_r20.settings.maxHeight + \"px\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", _r111.viewPortItems);\n} }\nfunction AngularMultiSelect_div_28_span_3_li_1_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r124 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r128 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r128.isSelected(item_r124))(\"disabled\", ctx_r128.settings.limitSelection == (ctx_r128.selectedItems == null ? null : ctx_r128.selectedItems.length) && !ctx_r128.isSelected(item_r124) || item_r124.disabled);\n} }\nconst _c11 = function (a0, a1) { return { \"grp-title\": a0, \"grp-item\": a1 }; };\nfunction AngularMultiSelect_div_28_span_3_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r132 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_28_span_3_li_1_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r132); const ctx_r131 = ɵngcc0.ɵɵnextContext(); const item_r124 = ctx_r131.$implicit; const i_r125 = ctx_r131.index; const ctx_r130 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r130.onItemClick(item_r124, i_r125, $event)); });\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_28_span_3_li_1_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelement(2, \"label\")(3, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r124 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r126 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c11, item_r124.grpTitle, !item_r124.grpTitle && !ctx_r126.settings.singleSelection));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r126.settings.showCheckbox && !ctx_r126.settings.singleSelection);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r126.itemTempl)(\"item\", item_r124);\n} }\nfunction AngularMultiSelect_div_28_span_3_li_2_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r124 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r134 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r134.isSelected(item_r124))(\"disabled\", ctx_r134.settings.limitSelection == (ctx_r134.selectedItems == null ? null : ctx_r134.selectedItems.length) && !ctx_r134.isSelected(item_r124) || item_r124.disabled);\n} }\nfunction AngularMultiSelect_div_28_span_3_li_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 73);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_28_span_3_li_2_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelement(2, \"label\")(3, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r124 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r127 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c11, item_r124.grpTitle, !item_r124.grpTitle && !ctx_r127.settings.singleSelection));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r127.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r127.itemTempl)(\"item\", item_r124);\n} }\nfunction AngularMultiSelect_div_28_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_28_span_3_li_1_Template, 4, 7, \"li\", 71);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_28_span_3_li_2_Template, 4, 7, \"li\", 72);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r124 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r124.grpTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r124.grpTitle);\n} }\nfunction AngularMultiSelect_div_28_Template(rf, ctx) { if (rf & 1) {\n    const _r138 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 64, 69);\n    ɵngcc0.ɵɵlistener(\"vsStart\", function AngularMultiSelect_div_28_Template_ul_vsStart_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const ctx_r137 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r137.onScrollEnd($event)); })(\"vsEnd\", function AngularMultiSelect_div_28_Template_ul_vsEnd_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const ctx_r139 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r139.onScrollEnd($event)); });\n    ɵngcc0.ɵɵtemplate(3, AngularMultiSelect_div_28_span_3_Template, 3, 2, \"span\", 70);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r122 = ɵngcc0.ɵɵreference(2);\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r21.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"enableUnequalChildrenSizes\", ctx_r21.randomSize)(\"items\", ctx_r21.virtualdata)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(6, _c10, ctx_r21.settings.maxHeight + \"px\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", _r122.viewPortItems);\n} }\nfunction AngularMultiSelect_div_29_span_2_input_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r141 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r143 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", item_r141.selected)(\"disabled\", ctx_r143.settings.limitSelection == (ctx_r143.selectedItems == null ? null : ctx_r143.selectedItems.length) && !ctx_r143.isSelected(item_r141) || item_r141.disabled);\n} }\nfunction AngularMultiSelect_div_29_span_2_span_6_input_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const val_r146 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r148 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r148.isSelected(val_r146))(\"disabled\", ctx_r148.settings.limitSelection == (ctx_r148.selectedItems == null ? null : ctx_r148.selectedItems.length) && !ctx_r148.isSelected(val_r146) || val_r146.disabled);\n} }\nfunction AngularMultiSelect_div_29_span_2_span_6_Template(rf, ctx) { if (rf & 1) {\n    const _r151 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_29_span_2_span_6_Template_li_click_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r151); const val_r146 = restoredCtx.$implicit; const j_r147 = restoredCtx.index; const ctx_r150 = ɵngcc0.ɵɵnextContext(3); ctx_r150.onItemClick(val_r146, j_r147, $event); return ɵngcc0.ɵɵresetView($event.stopPropagation()); });\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_29_span_2_span_6_input_2_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelement(3, \"label\")(4, \"c-templateRenderer\", 30);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const val_r146 = ctx.$implicit;\n    const ctx_r144 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c11, val_r146.grpTitle, !val_r146.grpTitle && !ctx_r144.settings.singleSelection));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r144.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r144.itemTempl)(\"item\", val_r146);\n} }\nfunction AngularMultiSelect_div_29_span_2_Template(rf, ctx) { if (rf & 1) {\n    const _r153 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_29_span_2_Template_li_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r153); const item_r141 = restoredCtx.$implicit; const ctx_r152 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r152.selectGroup(item_r141)); });\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_29_span_2_input_2_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelementStart(3, \"label\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"ul\", 60);\n    ɵngcc0.ɵɵtemplate(6, AngularMultiSelect_div_29_span_2_span_6_Template, 5, 7, \"span\", 70);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const item_r141 = ctx.$implicit;\n    const ctx_r140 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c11, item_r141.grpTitle, !item_r141.grpTitle && !ctx_r140.settings.singleSelection));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r140.settings.showCheckbox && !ctx_r140.settings.singleSelection);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r141[ctx_r140.settings.labelKey]);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", item_r141.list);\n} }\nfunction AngularMultiSelect_div_29_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 60);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_29_span_2_Template, 7, 7, \"span\", 70);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r22.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r22.groupedData);\n} }\nfunction AngularMultiSelect_div_30_span_4_li_1_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r156 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r160 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r160.isSelected(item_r156))(\"disabled\", ctx_r160.settings.limitSelection == (ctx_r160.selectedItems == null ? null : ctx_r160.selectedItems.length) && !ctx_r160.isSelected(item_r156) || item_r156.disabled);\n} }\nconst _c12 = function (a0, a1, a2) { return { \"grp-title\": a0, \"grp-item\": a1, \"selected-item\": a2 }; };\nfunction AngularMultiSelect_div_30_span_4_li_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 73);\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_30_span_4_li_1_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelementStart(2, \"label\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const item_r156 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r158 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(3, _c12, item_r156.grpTitle, !item_r156.grpTitle && !ctx_r158.settings.singleSelection, ctx_r158.isSelected(item_r156) == true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r158.settings.showCheckbox && !item_r156.grpTitle && !ctx_r158.settings.singleSelection);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r156[ctx_r158.settings.labelKey]);\n} }\nfunction AngularMultiSelect_div_30_span_4_li_2_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r156 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r163 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r163.isSelected(item_r156))(\"disabled\", ctx_r163.settings.limitSelection == (ctx_r163.selectedItems == null ? null : ctx_r163.selectedItems.length) && !ctx_r163.isSelected(item_r156) || item_r156.disabled);\n} }\nfunction AngularMultiSelect_div_30_span_4_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r167 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_30_span_4_li_2_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r167); const ctx_r166 = ɵngcc0.ɵɵnextContext(); const item_r156 = ctx_r166.$implicit; const i_r157 = ctx_r166.index; const ctx_r165 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r165.onItemClick(item_r156, i_r157, $event)); });\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_30_span_4_li_2_input_1_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelementStart(2, \"label\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const item_r156 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r159 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(3, _c12, item_r156.grpTitle, !item_r156.grpTitle && !ctx_r159.settings.singleSelection, ctx_r159.isSelected(item_r156) == true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r159.settings.showCheckbox && !item_r156.grpTitle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r156[ctx_r159.settings.labelKey]);\n} }\nfunction AngularMultiSelect_div_30_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, AngularMultiSelect_div_30_span_4_li_1_Template, 4, 7, \"li\", 72);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_30_span_4_li_2_Template, 4, 7, \"li\", 71);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r156 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r156.grpTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r156.grpTitle);\n} }\nfunction AngularMultiSelect_div_30_Template(rf, ctx) { if (rf & 1) {\n    const _r170 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"virtual-scroller\", 74);\n    ɵngcc0.ɵɵlistener(\"vsUpdate\", function AngularMultiSelect_div_30_Template_virtual_scroller_vsUpdate_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r169 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r169.viewPortItems = $event); })(\"vsEnd\", function AngularMultiSelect_div_30_Template_virtual_scroller_vsEnd_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r171 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r171.onScrollEnd($event)); });\n    ɵngcc0.ɵɵelementStart(2, \"ul\", 64, 75);\n    ɵngcc0.ɵɵlistener(\"vsStart\", function AngularMultiSelect_div_30_Template_ul_vsStart_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r172 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r172.onScrollEnd($event)); })(\"vsEnd\", function AngularMultiSelect_div_30_Template_ul_vsEnd_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r173 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r173.onScrollEnd($event)); });\n    ɵngcc0.ɵɵtemplate(4, AngularMultiSelect_div_30_span_4_Template, 3, 2, \"span\", 70);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const _r154 = ɵngcc0.ɵɵreference(3);\n    const ctx_r23 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r23.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"items\", ctx_r23.groupedData)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(8, _c10, ctx_r23.settings.maxHeight + \"px\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"enableUnequalChildrenSizes\", ctx_r23.randomSize)(\"items\", ctx_r23.virtualdata)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(10, _c10, ctx_r23.settings.maxHeight + \"px\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", _r154.viewPortItems);\n} }\nfunction AngularMultiSelect_div_31_span_2_input_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const item_r175 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r177 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", item_r175.selected)(\"disabled\", ctx_r177.settings.limitSelection == (ctx_r177.selectedItems == null ? null : ctx_r177.selectedItems.length) && !ctx_r177.isSelected(item_r175) || item_r175.disabled);\n} }\nfunction AngularMultiSelect_div_31_span_2_span_6_input_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 67);\n} if (rf & 2) {\n    const val_r180 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r182 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r182.isSelected(val_r180))(\"disabled\", ctx_r182.settings.limitSelection == (ctx_r182.selectedItems == null ? null : ctx_r182.selectedItems.length) && !ctx_r182.isSelected(val_r180) || val_r180.disabled);\n} }\nconst _c13 = function (a0, a1, a2) { return { \"selected-item\": a0, \"grp-title\": a1, \"grp-item\": a2 }; };\nfunction AngularMultiSelect_div_31_span_2_span_6_Template(rf, ctx) { if (rf & 1) {\n    const _r185 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_31_span_2_span_6_Template_li_click_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r185); const val_r180 = restoredCtx.$implicit; const j_r181 = restoredCtx.index; const ctx_r184 = ɵngcc0.ɵɵnextContext(3); ctx_r184.onItemClick(val_r180, j_r181, $event); return ɵngcc0.ɵɵresetView($event.stopPropagation()); });\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_31_span_2_span_6_input_2_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelementStart(3, \"label\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const val_r180 = ctx.$implicit;\n    const ctx_r178 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(3, _c13, ctx_r178.isSelected(val_r180) == true, val_r180.grpTitle, !val_r180.grpTitle && !ctx_r178.settings.singleSelection));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r178.settings.showCheckbox);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(val_r180[ctx_r178.settings.labelKey]);\n} }\nfunction AngularMultiSelect_div_31_span_2_Template(rf, ctx) { if (rf & 1) {\n    const _r187 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"li\", 62);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_div_31_span_2_Template_li_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r187); const item_r175 = restoredCtx.$implicit; const ctx_r186 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r186.selectGroup(item_r175)); });\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_31_span_2_input_2_Template, 1, 2, \"input\", 66);\n    ɵngcc0.ɵɵelementStart(3, \"label\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"ul\", 60);\n    ɵngcc0.ɵɵtemplate(6, AngularMultiSelect_div_31_span_2_span_6_Template, 5, 7, \"span\", 70);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const item_r175 = ctx.$implicit;\n    const ctx_r174 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c11, item_r175.grpTitle, !item_r175.grpTitle && !ctx_r174.settings.singleSelection));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r174.settings.showCheckbox && !ctx_r174.settings.singleSelection);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r175[ctx_r174.settings.labelKey]);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", item_r175.list);\n} }\nfunction AngularMultiSelect_div_31_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 59)(1, \"ul\", 60);\n    ɵngcc0.ɵɵtemplate(2, AngularMultiSelect_div_31_span_2_Template, 7, 7, \"span\", 70);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r24.settings.maxHeight + \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r24.groupedData);\n} }\nfunction AngularMultiSelect_h5_32_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h5\", 76);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r25 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r25.settings.noDataLabel);\n} }\nconst _c14 = function (a0) { return { \"disabled\": a0 }; };\nconst _c15 = function (a0) { return { \"tagToBody\": a0 }; };\nconst _c16 = function (a0, a1) { return { \"arrow-up\": a0, \"arrow-down\": a1 }; };\nconst _c17 = function (a0) { return { \"single-select-mode\": a0 }; };\nclass MyException {\n    constructor(status, body) {\n        this.status = status;\n        this.body = body;\n    }\n}\n\nclass ClickOutsideDirective {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n        this.clickOutside = new EventEmitter();\n    }\n    onClick(event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\nClickOutsideDirective.ɵfac = function ClickOutsideDirective_Factory(t) { return new (t || ClickOutsideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nClickOutsideDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ClickOutsideDirective, selectors: [[\"\", \"clickOutside\", \"\"]], hostBindings: function ClickOutsideDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ClickOutsideDirective_click_HostBindingHandler($event) { return ctx.onClick($event, $event.target); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchstart\", function ClickOutsideDirective_touchstart_HostBindingHandler($event) { return ctx.onClick($event, $event.target); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, outputs: { clickOutside: \"clickOutside\" } });\nClickOutsideDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nClickOutsideDirective.propDecorators = {\n    clickOutside: [{ type: Output }],\n    onClick: [{ type: HostListener, args: ['document:click', ['$event', '$event.target'],] }, { type: HostListener, args: ['document:touchstart', ['$event', '$event.target'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClickOutsideDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[clickOutside]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { clickOutside: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['document:click', ['$event', '$event.target']]\n        }, {\n            type: HostListener,\n            args: ['document:touchstart', ['$event', '$event.target']]\n        }] }); })();\nclass ScrollDirective {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n        this.scroll = new EventEmitter();\n    }\n    onClick(event, targetElement) {\n        this.scroll.emit(event);\n    }\n}\nScrollDirective.ɵfac = function ScrollDirective_Factory(t) { return new (t || ScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nScrollDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ScrollDirective, selectors: [[\"\", \"scroll\", \"\"]], hostBindings: function ScrollDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"scroll\", function ScrollDirective_scroll_HostBindingHandler($event) { return ctx.onClick($event); });\n    } }, outputs: { scroll: \"scroll\" } });\nScrollDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nScrollDirective.propDecorators = {\n    scroll: [{ type: Output }],\n    onClick: [{ type: HostListener, args: ['scroll', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[scroll]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { scroll: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['scroll', ['$event']]\n        }] }); })();\nclass styleDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    ngOnInit() {\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n    ngOnChanges() {\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n}\nstyleDirective.ɵfac = function styleDirective_Factory(t) { return new (t || styleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nstyleDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: styleDirective, selectors: [[\"\", \"styleProp\", \"\"]], inputs: { styleVal: [\"styleProp\", \"styleVal\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nstyleDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nstyleDirective.propDecorators = {\n    styleVal: [{ type: Input, args: ['styleProp',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(styleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[styleProp]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { styleVal: [{\n            type: Input,\n            args: ['styleProp']\n        }] }); })();\nclass setPosition {\n    constructor(el) {\n        this.el = el;\n    }\n    ngOnInit() {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n    ngOnChanges() {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n}\nsetPosition.ɵfac = function setPosition_Factory(t) { return new (t || setPosition)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nsetPosition.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: setPosition, selectors: [[\"\", \"setPosition\", \"\"]], inputs: { height: [\"setPosition\", \"height\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nsetPosition.ctorParameters = () => [\n    { type: ElementRef }\n];\nsetPosition.propDecorators = {\n    height: [{ type: Input, args: ['setPosition',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(setPosition, [{\n        type: Directive,\n        args: [{\n                selector: '[setPosition]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { height: [{\n            type: Input,\n            args: ['setPosition']\n        }] }); })();\n\nclass DataService {\n    constructor() {\n        this.filteredData = [];\n        this.subject = new Subject();\n    }\n    setData(data) {\n        this.filteredData = data;\n        this.subject.next(data);\n    }\n    getData() {\n        return this.subject.asObservable();\n    }\n    getFilteredData() {\n        if (this.filteredData && this.filteredData.length > 0) {\n            return this.filteredData;\n        }\n        else {\n            return [];\n        }\n    }\n}\nDataService.ɵfac = function DataService_Factory(t) { return new (t || DataService)(); };\nDataService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DataService, factory: DataService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nclass ListFilterPipe {\n    constructor(ds) {\n        this.ds = ds;\n        this.filteredList = [];\n    }\n    transform(items, filter, searchBy) {\n        if (!items || !filter || filter == \"\") {\n            return items;\n        }\n        this.filteredList = items.filter((item) => this.applyFilter(item, filter, searchBy));\n        return this.filteredList;\n    }\n    applyFilter(item, filter, searchBy) {\n        let found = false;\n        if (searchBy.length > 0) {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var t = 0; t < searchBy.length; t++) {\n                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\n                        if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var prop in item) {\n                    if (filter && item[prop]) {\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n        return found;\n    }\n}\nListFilterPipe.ɵfac = function ListFilterPipe_Factory(t) { return new (t || ListFilterPipe)(ɵngcc0.ɵɵdirectiveInject(DataService, 16)); };\nListFilterPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"listFilter\", type: ListFilterPipe, pure: true });\nListFilterPipe.ctorParameters = () => [\n    { type: DataService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListFilterPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'listFilter',\n                pure: true\n            }]\n    }], function () { return [{ type: DataService }]; }, null); })();\n\nclass Item {\n    constructor() {\n    }\n}\nItem.ɵfac = function Item_Factory(t) { return new (t || Item)(); };\nItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Item, selectors: [[\"c-item\"]], contentQueries: function Item_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, decls: 0, vars: 0, template: function Item_Template(rf, ctx) { }, encapsulation: 2 });\nItem.ctorParameters = () => [];\nItem.propDecorators = {\n    template: [{ type: ContentChild, args: [TemplateRef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Item, [{\n        type: Component,\n        args: [{\n                selector: 'c-item',\n                template: ``\n            }]\n    }], function () { return []; }, { template: [{\n            type: ContentChild,\n            args: [TemplateRef, { static: true }]\n        }] }); })();\nclass Badge {\n    constructor() {\n    }\n}\nBadge.ɵfac = function Badge_Factory(t) { return new (t || Badge)(); };\nBadge.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Badge, selectors: [[\"c-badge\"]], contentQueries: function Badge_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, decls: 0, vars: 0, template: function Badge_Template(rf, ctx) { }, encapsulation: 2 });\nBadge.ctorParameters = () => [];\nBadge.propDecorators = {\n    template: [{ type: ContentChild, args: [TemplateRef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Badge, [{\n        type: Component,\n        args: [{\n                selector: 'c-badge',\n                template: ``\n            }]\n    }], function () { return []; }, { template: [{\n            type: ContentChild,\n            args: [TemplateRef, { static: true }]\n        }] }); })();\nclass Search {\n    constructor() {\n    }\n}\nSearch.ɵfac = function Search_Factory(t) { return new (t || Search)(); };\nSearch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Search, selectors: [[\"c-search\"]], contentQueries: function Search_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, decls: 0, vars: 0, template: function Search_Template(rf, ctx) { }, encapsulation: 2 });\nSearch.ctorParameters = () => [];\nSearch.propDecorators = {\n    template: [{ type: ContentChild, args: [TemplateRef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Search, [{\n        type: Component,\n        args: [{\n                selector: 'c-search',\n                template: ``\n            }]\n    }], function () { return []; }, { template: [{\n            type: ContentChild,\n            args: [TemplateRef, { static: true }]\n        }] }); })();\nclass TemplateRenderer {\n    constructor(viewContainer) {\n        this.viewContainer = viewContainer;\n    }\n    ngOnInit() {\n        this.view = this.viewContainer.createEmbeddedView(this.data.template, {\n            '\\$implicit': this.data,\n            'item': this.item\n        });\n    }\n    ngOnDestroy() {\n        this.view.destroy();\n    }\n}\nTemplateRenderer.ɵfac = function TemplateRenderer_Factory(t) { return new (t || TemplateRenderer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nTemplateRenderer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TemplateRenderer, selectors: [[\"c-templateRenderer\"]], inputs: { data: \"data\", item: \"item\" }, decls: 0, vars: 0, template: function TemplateRenderer_Template(rf, ctx) { }, encapsulation: 2 });\nTemplateRenderer.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nTemplateRenderer.propDecorators = {\n    data: [{ type: Input }],\n    item: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TemplateRenderer, [{\n        type: Component,\n        args: [{\n                selector: 'c-templateRenderer',\n                template: ``\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { data: [{\n            type: Input\n        }], item: [{\n            type: Input\n        }] }); })();\nclass CIcon {\n}\nCIcon.ɵfac = function CIcon_Factory(t) { return new (t || CIcon)(); };\nCIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CIcon, selectors: [[\"c-icon\"]], inputs: { name: \"name\" }, decls: 5, vars: 5, consts: [[\"width\", \"100%\", \"height\", \"100%\", \"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 47.971 47.971\", \"style\", \"enable-background:new 0 0 47.971 47.971;\", 0, \"xml\", \"space\", \"preserve\", 4, \"ngIf\"], [\"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"width\", \"100%\", \"height\", \"100%\", \"viewBox\", \"0 0 612 612\", \"style\", \"enable-background:new 0 0 612 612;\", 0, \"xml\", \"space\", \"preserve\", 4, \"ngIf\"], [\"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"width\", \"100%\", \"height\", \"100%\", \"viewBox\", \"0 0 615.52 615.52\", \"style\", \"enable-background:new 0 0 615.52 615.52;\", 0, \"xml\", \"space\", \"preserve\", 4, \"ngIf\"], [\"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 51.976 51.976\", \"style\", \"enable-background:new 0 0 51.976 51.976;\", 0, \"xml\", \"space\", \"preserve\", 4, \"ngIf\"], [\"width\", \"100%\", \"height\", \"100%\", \"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 47.971 47.971\", 0, \"xml\", \"space\", \"preserve\", 2, \"enable-background\", \"new 0 0 47.971 47.971\"], [\"d\", \"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"], [\"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"width\", \"100%\", \"height\", \"100%\", \"viewBox\", \"0 0 612 612\", 0, \"xml\", \"space\", \"preserve\", 2, \"enable-background\", \"new 0 0 612 612\"], [\"id\", \"_x31_0_34_\"], [\"d\", \"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\\n\\t\\t\\t\\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\\n\\t\\t\\t\\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"], [\"id\", \"_x39__30_\"], [\"d\", \"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\\n\\t\\t\\t\\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\\n\\t\\t\\t\\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"], [\"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"width\", \"100%\", \"height\", \"100%\", \"viewBox\", \"0 0 615.52 615.52\", 0, \"xml\", \"space\", \"preserve\", 2, \"enable-background\", \"new 0 0 615.52 615.52\"], [\"id\", \"Search__x28_and_thou_shall_find_x29_\"], [\"d\", \"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\\n\\t\\t\\t\\t\\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\\n\\t\\t\\t\\t\\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\\n\\t\\t\\t\\t\\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\\n\\t\\t\\t\\t\\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\\n\\t\\t\\t\\t\\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"], [\"version\", \"1.1\", \"id\", \"Capa_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 51.976 51.976\", 0, \"xml\", \"space\", \"preserve\", 2, \"enable-background\", \"new 0 0 51.976 51.976\"], [\"d\", \"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\\n\\t\\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\\n\\t\\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\\n\\t\\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\\n\\t\\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"]], template: function CIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CIcon__svg_svg_0_Template, 3, 0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, CIcon__svg_svg_1_Template, 5, 0, \"svg\", 1);\n        ɵngcc0.ɵɵtemplate(2, CIcon__svg_svg_2_Template, 5, 0, \"svg\", 1);\n        ɵngcc0.ɵɵtemplate(3, CIcon__svg_svg_3_Template, 6, 0, \"svg\", 2);\n        ɵngcc0.ɵɵtemplate(4, CIcon__svg_svg_4_Template, 3, 0, \"svg\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.name == \"remove\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.name == \"angle-down\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.name == \"angle-up\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.name == \"search\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.name == \"clear\");\n    } }, dependencies: [ɵngcc1.NgIf], encapsulation: 2 });\nCIcon.propDecorators = {\n    name: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CIcon, [{\n        type: Component,\n        args: [{\n                selector: 'c-icon',\n                template: `<svg *ngIf=\"name == 'remove'\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 47.971 47.971\" style=\"enable-background:new 0 0 47.971 47.971;\" xml:space=\"preserve\">\n                        <g>\n                            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\n                        </g>\n                    </svg>\n            <svg *ngIf=\"name == 'angle-down'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x31_0_34_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\n\t\t\t\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\n\t\t\t\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n<svg *ngIf=\"name == 'angle-up'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x39__30_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\n\t\t\t\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\n\t\t\t\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"/>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'search'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 615.52 615.52\" style=\"enable-background:new 0 0 615.52 615.52;\"\n\t xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g id=\"Search__x28_and_thou_shall_find_x29_\">\n\t\t\t<g>\n\t\t\t\t<path d=\"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\n\t\t\t\t\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\n\t\t\t\t\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\n\t\t\t\t\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\n\t\t\t\t\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\n\t\t\t\t\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"/>\n\t\t\t</g>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'clear'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 51.976 51.976\" style=\"enable-background:new 0 0 51.976 51.976;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\n\t\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\n\t\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\n\t\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\n\t\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"/>\n</g>\n</svg>`,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { name: [{\n            type: Input\n        }] }); })();\n\nfunction VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        scrollThrottlingTime: 0,\n        scrollDebounceTime: 0,\n        scrollAnimationTime: 750,\n        checkResizeInterval: 1000,\n        resizeBypassRefreshThreshold: 5,\n        modifyOverflowStyleOfParentScroll: true,\n        stripedTable: false\n    };\n}\nclass VirtualScrollerComponent {\n    constructor(element, renderer, zone, changeDetectorRef, platformId, options) {\n        this.element = element;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.changeDetectorRef = changeDetectorRef;\n        this.window = window;\n        this.executeRefreshOutsideAngularZone = false;\n        this._enableUnequalChildrenSizes = false;\n        this.useMarginInsteadOfTranslate = false;\n        this.ssrViewportWidth = 1920;\n        this.ssrViewportHeight = 1080;\n        this._bufferAmount = 0;\n        this._items = [];\n        this.compareItems = (item1, item2) => item1 === item2;\n        this.vsUpdate = new EventEmitter();\n        this.vsChange = new EventEmitter();\n        this.vsStart = new EventEmitter();\n        this.vsEnd = new EventEmitter();\n        this.calculatedScrollbarWidth = 0;\n        this.calculatedScrollbarHeight = 0;\n        this.padding = 0;\n        this.previousViewPort = {};\n        this.cachedPageSize = 0;\n        this.previousScrollNumberElements = 0;\n        this.isAngularUniversalSSR = isPlatformServer(platformId);\n        this.scrollThrottlingTime = options.scrollThrottlingTime;\n        this.scrollDebounceTime = options.scrollDebounceTime;\n        this.scrollAnimationTime = options.scrollAnimationTime;\n        this.scrollbarWidth = options.scrollbarWidth;\n        this.scrollbarHeight = options.scrollbarHeight;\n        this.checkResizeInterval = options.checkResizeInterval;\n        this.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\n        this.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\n        this.stripedTable = options.stripedTable;\n        this.horizontal = false;\n        this.resetWrapGroupDimensions();\n    }\n    get viewPortInfo() {\n        let pageInfo = this.previousViewPort || {};\n        return {\n            startIndex: pageInfo.startIndex || 0,\n            endIndex: pageInfo.endIndex || 0,\n            scrollStartPosition: pageInfo.scrollStartPosition || 0,\n            scrollEndPosition: pageInfo.scrollEndPosition || 0,\n            maxScrollPosition: pageInfo.maxScrollPosition || 0,\n            startIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\n            endIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\n        };\n    }\n    get enableUnequalChildrenSizes() {\n        return this._enableUnequalChildrenSizes;\n    }\n    set enableUnequalChildrenSizes(value) {\n        if (this._enableUnequalChildrenSizes === value) {\n            return;\n        }\n        this._enableUnequalChildrenSizes = value;\n        this.minMeasuredChildWidth = undefined;\n        this.minMeasuredChildHeight = undefined;\n    }\n    get bufferAmount() {\n        if (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\n            return this._bufferAmount;\n        }\n        else {\n            return this.enableUnequalChildrenSizes ? 5 : 0;\n        }\n    }\n    set bufferAmount(value) {\n        this._bufferAmount = value;\n    }\n    get scrollThrottlingTime() {\n        return this._scrollThrottlingTime;\n    }\n    set scrollThrottlingTime(value) {\n        this._scrollThrottlingTime = value;\n        this.updateOnScrollFunction();\n    }\n    get scrollDebounceTime() {\n        return this._scrollDebounceTime;\n    }\n    set scrollDebounceTime(value) {\n        this._scrollDebounceTime = value;\n        this.updateOnScrollFunction();\n    }\n    updateOnScrollFunction() {\n        if (this.scrollDebounceTime) {\n            this.onScroll = this.debounce(() => {\n                this.refresh_internal(false);\n            }, this.scrollDebounceTime);\n        }\n        else if (this.scrollThrottlingTime) {\n            this.onScroll = this.throttleTrailing(() => {\n                this.refresh_internal(false);\n            }, this.scrollThrottlingTime);\n        }\n        else {\n            this.onScroll = () => {\n                this.refresh_internal(false);\n            };\n        }\n    }\n    get checkResizeInterval() {\n        return this._checkResizeInterval;\n    }\n    set checkResizeInterval(value) {\n        if (this._checkResizeInterval === value) {\n            return;\n        }\n        this._checkResizeInterval = value;\n        this.addScrollEventHandlers();\n    }\n    get items() {\n        return this._items;\n    }\n    set items(value) {\n        if (value === this._items) {\n            return;\n        }\n        this._items = value || [];\n        this.refresh_internal(true);\n    }\n    get horizontal() {\n        return this._horizontal;\n    }\n    set horizontal(value) {\n        this._horizontal = value;\n        this.updateDirection();\n    }\n    revertParentOverscroll() {\n        const scrollElement = this.getScrollElement();\n        if (scrollElement && this.oldParentScrollOverflow) {\n            scrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n            scrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n        }\n        this.oldParentScrollOverflow = undefined;\n    }\n    get parentScroll() {\n        return this._parentScroll;\n    }\n    set parentScroll(value) {\n        if (this._parentScroll === value) {\n            return;\n        }\n        this.revertParentOverscroll();\n        this._parentScroll = value;\n        this.addScrollEventHandlers();\n        const scrollElement = this.getScrollElement();\n        if (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\n            this.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\n            scrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n            scrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n        }\n    }\n    ngOnInit() {\n        this.addScrollEventHandlers();\n    }\n    ngOnDestroy() {\n        this.removeScrollEventHandlers();\n        this.revertParentOverscroll();\n    }\n    ngOnChanges(changes) {\n        let indexLengthChanged = this.cachedItemsLength !== this.items.length;\n        this.cachedItemsLength = this.items.length;\n        const firstRun = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\n        this.refresh_internal(indexLengthChanged || firstRun);\n    }\n    ngDoCheck() {\n        if (this.cachedItemsLength !== this.items.length) {\n            this.cachedItemsLength = this.items.length;\n            this.refresh_internal(true);\n            return;\n        }\n        if (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\n            let itemsArrayChanged = false;\n            for (let i = 0; i < this.viewPortItems.length; ++i) {\n                if (!this.compareItems(this.items[this.previousViewPort.startIndexWithBuffer + i], this.viewPortItems[i])) {\n                    itemsArrayChanged = true;\n                    break;\n                }\n            }\n            if (itemsArrayChanged) {\n                this.refresh_internal(true);\n            }\n        }\n    }\n    refresh() {\n        this.refresh_internal(true);\n    }\n    invalidateAllCachedMeasurements() {\n        this.wrapGroupDimensions = {\n            maxChildSizePerWrapGroup: [],\n            numberOfKnownWrapGroupChildSizes: 0,\n            sumOfKnownWrapGroupChildWidths: 0,\n            sumOfKnownWrapGroupChildHeights: 0\n        };\n        this.minMeasuredChildWidth = undefined;\n        this.minMeasuredChildHeight = undefined;\n        this.refresh_internal(false);\n    }\n    invalidateCachedMeasurementForItem(item) {\n        if (this.enableUnequalChildrenSizes) {\n            let index = this.items && this.items.indexOf(item);\n            if (index >= 0) {\n                this.invalidateCachedMeasurementAtIndex(index);\n            }\n        }\n        else {\n            this.minMeasuredChildWidth = undefined;\n            this.minMeasuredChildHeight = undefined;\n        }\n        this.refresh_internal(false);\n    }\n    invalidateCachedMeasurementAtIndex(index) {\n        if (this.enableUnequalChildrenSizes) {\n            let cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\n            if (cachedMeasurement) {\n                this.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\n                --this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\n            }\n        }\n        else {\n            this.minMeasuredChildWidth = undefined;\n            this.minMeasuredChildHeight = undefined;\n        }\n        this.refresh_internal(false);\n    }\n    scrollInto(item, alignToBeginning = true, additionalOffset = 0, animationMilliseconds = undefined, animationCompletedCallback = undefined) {\n        let index = this.items.indexOf(item);\n        if (index === -1) {\n            return;\n        }\n        this.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n    }\n    scrollToIndex(index, alignToBeginning = true, additionalOffset = 0, animationMilliseconds = undefined, animationCompletedCallback = undefined) {\n        let maxRetries = 5;\n        let retryIfNeeded = () => {\n            --maxRetries;\n            if (maxRetries <= 0) {\n                if (animationCompletedCallback) {\n                    animationCompletedCallback();\n                }\n                return;\n            }\n            let dimensions = this.calculateDimensions();\n            let desiredStartIndex = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\n            if (this.previousViewPort.startIndex === desiredStartIndex) {\n                if (animationCompletedCallback) {\n                    animationCompletedCallback();\n                }\n                return;\n            }\n            this.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\n        };\n        this.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\n    }\n    scrollToIndex_internal(index, alignToBeginning = true, additionalOffset = 0, animationMilliseconds = undefined, animationCompletedCallback = undefined) {\n        animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n        let dimensions = this.calculateDimensions();\n        let scroll = this.calculatePadding(index, dimensions) + additionalOffset;\n        if (!alignToBeginning) {\n            scroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n        }\n        this.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\n    }\n    scrollToPosition(scrollPosition, animationMilliseconds = undefined, animationCompletedCallback = undefined) {\n        scrollPosition += this.getElementsOffset();\n        animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n        let scrollElement = this.getScrollElement();\n        let animationRequest;\n        if (this.currentTween) {\n            this.currentTween.stop();\n            this.currentTween = undefined;\n        }\n        if (!animationMilliseconds) {\n            this.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\n            this.refresh_internal(false, animationCompletedCallback);\n            return;\n        }\n        const tweenConfigObj = { scrollPosition: scrollElement[this._scrollType] };\n        let newTween = new tween.Tween(tweenConfigObj)\n            .to({ scrollPosition }, animationMilliseconds)\n            .easing(tween.Easing.Quadratic.Out)\n            .onUpdate((data) => {\n            if (isNaN(data.scrollPosition)) {\n                return;\n            }\n            this.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\n            this.refresh_internal(false);\n        })\n            .onStop(() => {\n            cancelAnimationFrame(animationRequest);\n        })\n            .start();\n        const animate = (time) => {\n            if (!newTween[\"isPlaying\"]()) {\n                return;\n            }\n            newTween.update(time);\n            if (tweenConfigObj.scrollPosition === scrollPosition) {\n                this.refresh_internal(false, animationCompletedCallback);\n                return;\n            }\n            this.zone.runOutsideAngular(() => {\n                animationRequest = requestAnimationFrame(animate);\n            });\n        };\n        animate();\n        this.currentTween = newTween;\n    }\n    getElementSize(element) {\n        let result = element.getBoundingClientRect();\n        let styles = getComputedStyle(element);\n        let marginTop = parseInt(styles['margin-top'], 10) || 0;\n        let marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n        let marginLeft = parseInt(styles['margin-left'], 10) || 0;\n        let marginRight = parseInt(styles['margin-right'], 10) || 0;\n        return {\n            top: result.top + marginTop,\n            bottom: result.bottom + marginBottom,\n            left: result.left + marginLeft,\n            right: result.right + marginRight,\n            width: result.width + marginLeft + marginRight,\n            height: result.height + marginTop + marginBottom\n        };\n    }\n    checkScrollElementResized() {\n        let boundingRect = this.getElementSize(this.getScrollElement());\n        let sizeChanged;\n        if (!this.previousScrollBoundingRect) {\n            sizeChanged = true;\n        }\n        else {\n            let widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n            let heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n            sizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\n        }\n        if (sizeChanged) {\n            this.previousScrollBoundingRect = boundingRect;\n            if (boundingRect.width > 0 && boundingRect.height > 0) {\n                this.refresh_internal(false);\n            }\n        }\n    }\n    updateDirection() {\n        if (this.horizontal) {\n            this._invisiblePaddingProperty = 'width';\n            this._offsetType = 'offsetLeft';\n            this._pageOffsetType = 'pageXOffset';\n            this._childScrollDim = 'childWidth';\n            this._marginDir = 'margin-left';\n            this._translateDir = 'translateX';\n            this._scrollType = 'scrollLeft';\n        }\n        else {\n            this._invisiblePaddingProperty = 'height';\n            this._offsetType = 'offsetTop';\n            this._pageOffsetType = 'pageYOffset';\n            this._childScrollDim = 'childHeight';\n            this._marginDir = 'margin-top';\n            this._translateDir = 'translateY';\n            this._scrollType = 'scrollTop';\n        }\n    }\n    debounce(func, wait) {\n        const throttled = this.throttleTrailing(func, wait);\n        const result = function () {\n            throttled['cancel']();\n            throttled.apply(this, arguments);\n        };\n        result['cancel'] = function () {\n            throttled['cancel']();\n        };\n        return result;\n    }\n    throttleTrailing(func, wait) {\n        let timeout = undefined;\n        let _arguments = arguments;\n        const result = function () {\n            const _this = this;\n            _arguments = arguments;\n            if (timeout) {\n                return;\n            }\n            if (wait <= 0) {\n                func.apply(_this, _arguments);\n            }\n            else {\n                timeout = setTimeout(function () {\n                    timeout = undefined;\n                    func.apply(_this, _arguments);\n                }, wait);\n            }\n        };\n        result['cancel'] = function () {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = undefined;\n            }\n        };\n        return result;\n    }\n    refresh_internal(itemsArrayModified, refreshCompletedCallback = undefined, maxRunTimes = 2) {\n        //note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n        //The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n        //The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n        //Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\n        if (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\n            //if items were prepended, scroll forward to keep same items visible\n            let oldViewPort = this.previousViewPort;\n            let oldViewPortItems = this.viewPortItems;\n            let oldRefreshCompletedCallback = refreshCompletedCallback;\n            refreshCompletedCallback = () => {\n                let scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\n                if (scrollLengthDelta > 0 && this.viewPortItems) {\n                    let oldStartItem = oldViewPortItems[0];\n                    let oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\n                    if (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\n                        let itemOrderChanged = false;\n                        for (let i = 1; i < this.viewPortItems.length; ++i) {\n                            if (!this.compareItems(this.items[oldStartItemIndex + i], oldViewPortItems[i])) {\n                                itemOrderChanged = true;\n                                break;\n                            }\n                        }\n                        if (!itemOrderChanged) {\n                            this.scrollToPosition(this.previousViewPort.scrollStartPosition + scrollLengthDelta, 0, oldRefreshCompletedCallback);\n                            return;\n                        }\n                    }\n                }\n                if (oldRefreshCompletedCallback) {\n                    oldRefreshCompletedCallback();\n                }\n            };\n        }\n        this.zone.runOutsideAngular(() => {\n            requestAnimationFrame(() => {\n                if (itemsArrayModified) {\n                    this.resetWrapGroupDimensions();\n                }\n                let viewport = this.calculateViewport();\n                let startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n                let endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n                let scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\n                let paddingChanged = viewport.padding !== this.previousViewPort.padding;\n                let scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\n                this.previousViewPort = viewport;\n                if (scrollLengthChanged) {\n                    this.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\n                }\n                if (paddingChanged) {\n                    if (this.useMarginInsteadOfTranslate) {\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n                    }\n                    else {\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n                    }\n                }\n                if (this.headerElementRef) {\n                    let scrollPosition = this.getScrollElement()[this._scrollType];\n                    let containerOffset = this.getElementsOffset();\n                    let offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\n                    this.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\n                    this.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\n                }\n                const changeEventArg = (startChanged || endChanged) ? {\n                    startIndex: viewport.startIndex,\n                    endIndex: viewport.endIndex,\n                    scrollStartPosition: viewport.scrollStartPosition,\n                    scrollEndPosition: viewport.scrollEndPosition,\n                    startIndexWithBuffer: viewport.startIndexWithBuffer,\n                    endIndexWithBuffer: viewport.endIndexWithBuffer,\n                    maxScrollPosition: viewport.maxScrollPosition\n                } : undefined;\n                if (startChanged || endChanged || scrollPositionChanged) {\n                    const handleChanged = () => {\n                        // update the scroll list to trigger re-render of components in viewport\n                        this.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n                        this.vsUpdate.emit(this.viewPortItems);\n                        if (startChanged) {\n                            this.vsStart.emit(changeEventArg);\n                        }\n                        if (endChanged) {\n                            this.vsEnd.emit(changeEventArg);\n                        }\n                        if (startChanged || endChanged) {\n                            this.changeDetectorRef.markForCheck();\n                            this.vsChange.emit(changeEventArg);\n                        }\n                        if (maxRunTimes > 0) {\n                            this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n                            return;\n                        }\n                        if (refreshCompletedCallback) {\n                            refreshCompletedCallback();\n                        }\n                    };\n                    if (this.executeRefreshOutsideAngularZone) {\n                        handleChanged();\n                    }\n                    else {\n                        this.zone.run(handleChanged);\n                    }\n                }\n                else {\n                    if (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n                        this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n                        return;\n                    }\n                    if (refreshCompletedCallback) {\n                        refreshCompletedCallback();\n                    }\n                }\n            });\n        });\n    }\n    getScrollElement() {\n        return this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n    }\n    addScrollEventHandlers() {\n        if (this.isAngularUniversalSSR) {\n            return;\n        }\n        let scrollElement = this.getScrollElement();\n        this.removeScrollEventHandlers();\n        this.zone.runOutsideAngular(() => {\n            if (this.parentScroll instanceof Window) {\n                this.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\n                this.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\n            }\n            else {\n                this.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\n                if (this._checkResizeInterval > 0) {\n                    this.checkScrollElementResizedTimer = setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\n                }\n            }\n        });\n    }\n    removeScrollEventHandlers() {\n        if (this.checkScrollElementResizedTimer) {\n            clearInterval(this.checkScrollElementResizedTimer);\n        }\n        if (this.disposeScrollHandler) {\n            this.disposeScrollHandler();\n            this.disposeScrollHandler = undefined;\n        }\n        if (this.disposeResizeHandler) {\n            this.disposeResizeHandler();\n            this.disposeResizeHandler = undefined;\n        }\n    }\n    getElementsOffset() {\n        if (this.isAngularUniversalSSR) {\n            return 0;\n        }\n        let offset = 0;\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\n            offset += this.containerElementRef.nativeElement[this._offsetType];\n        }\n        if (this.parentScroll) {\n            let scrollElement = this.getScrollElement();\n            let elementClientRect = this.getElementSize(this.element.nativeElement);\n            let scrollClientRect = this.getElementSize(scrollElement);\n            if (this.horizontal) {\n                offset += elementClientRect.left - scrollClientRect.left;\n            }\n            else {\n                offset += elementClientRect.top - scrollClientRect.top;\n            }\n            if (!(this.parentScroll instanceof Window)) {\n                offset += scrollElement[this._scrollType];\n            }\n        }\n        return offset;\n    }\n    countItemsPerWrapGroup() {\n        if (this.isAngularUniversalSSR) {\n            return Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\n        }\n        let propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\n        let children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n        let childrenLength = children ? children.length : 0;\n        if (childrenLength === 0) {\n            return 1;\n        }\n        let firstOffset = children[0][propertyName];\n        let result = 1;\n        while (result < childrenLength && firstOffset === children[result][propertyName]) {\n            ++result;\n        }\n        return result;\n    }\n    getScrollStartPosition() {\n        let windowScrollValue = undefined;\n        if (this.parentScroll instanceof Window) {\n            windowScrollValue = window[this._pageOffsetType];\n        }\n        return windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\n    }\n    resetWrapGroupDimensions() {\n        const oldWrapGroupDimensions = this.wrapGroupDimensions;\n        this.invalidateAllCachedMeasurements();\n        if (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\n            return;\n        }\n        const itemsPerWrapGroup = this.countItemsPerWrapGroup();\n        for (let wrapGroupIndex = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\n            const oldWrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n            if (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\n                continue;\n            }\n            if (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\n                return;\n            }\n            let itemsChanged = false;\n            let arrayStartIndex = itemsPerWrapGroup * wrapGroupIndex;\n            for (let i = 0; i < itemsPerWrapGroup; ++i) {\n                if (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\n                    itemsChanged = true;\n                    break;\n                }\n            }\n            if (!itemsChanged) {\n                ++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\n                this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\n            }\n        }\n    }\n    calculateDimensions() {\n        let scrollElement = this.getScrollElement();\n        const maxCalculatedScrollBarSize = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\n        this.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\n        this.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\n        let viewportWidth = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\n        let viewportHeight = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\n        let content = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\n        let itemsPerWrapGroup = this.countItemsPerWrapGroup();\n        let wrapGroupsPerPage;\n        let defaultChildWidth;\n        let defaultChildHeight;\n        if (this.isAngularUniversalSSR) {\n            viewportWidth = this.ssrViewportWidth;\n            viewportHeight = this.ssrViewportHeight;\n            defaultChildWidth = this.ssrChildWidth;\n            defaultChildHeight = this.ssrChildHeight;\n            let itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n            let itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n            wrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n        }\n        else if (!this.enableUnequalChildrenSizes) {\n            if (content.children.length > 0) {\n                if (!this.childWidth || !this.childHeight) {\n                    if (!this.minMeasuredChildWidth && viewportWidth > 0) {\n                        this.minMeasuredChildWidth = viewportWidth;\n                    }\n                    if (!this.minMeasuredChildHeight && viewportHeight > 0) {\n                        this.minMeasuredChildHeight = viewportHeight;\n                    }\n                }\n                let child = content.children[0];\n                let clientRect = this.getElementSize(child);\n                this.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n                this.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n            }\n            defaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\n            defaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\n            let itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n            let itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n            wrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n        }\n        else {\n            let scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n            let arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\n            let wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n            let maxWidthForWrapGroup = 0;\n            let maxHeightForWrapGroup = 0;\n            let sumOfVisibleMaxWidths = 0;\n            let sumOfVisibleMaxHeights = 0;\n            wrapGroupsPerPage = 0;\n            for (let i = 0; i < content.children.length; ++i) {\n                ++arrayStartIndex;\n                let child = content.children[i];\n                let clientRect = this.getElementSize(child);\n                maxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\n                maxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\n                if (arrayStartIndex % itemsPerWrapGroup === 0) {\n                    let oldValue = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n                    if (oldValue) {\n                        --this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n                        this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\n                        this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\n                    }\n                    ++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n                    const items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex);\n                    this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\n                        childWidth: maxWidthForWrapGroup,\n                        childHeight: maxHeightForWrapGroup,\n                        items: items\n                    };\n                    this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\n                    this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\n                    if (this.horizontal) {\n                        let maxVisibleWidthForWrapGroup = Math.min(maxWidthForWrapGroup, Math.max(viewportWidth - sumOfVisibleMaxWidths, 0));\n                        if (scrollOffset > 0) {\n                            let scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n                            maxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n                            scrollOffset -= scrollOffsetToRemove;\n                        }\n                        sumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n                        if (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\n                            ++wrapGroupsPerPage;\n                        }\n                    }\n                    else {\n                        let maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\n                        if (scrollOffset > 0) {\n                            let scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n                            maxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n                            scrollOffset -= scrollOffsetToRemove;\n                        }\n                        sumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n                        if (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\n                            ++wrapGroupsPerPage;\n                        }\n                    }\n                    ++wrapGroupIndex;\n                    maxWidthForWrapGroup = 0;\n                    maxHeightForWrapGroup = 0;\n                }\n            }\n            let averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            let averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            defaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\n            defaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\n            if (this.horizontal) {\n                if (viewportWidth > sumOfVisibleMaxWidths) {\n                    wrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n                }\n            }\n            else {\n                if (viewportHeight > sumOfVisibleMaxHeights) {\n                    wrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n                }\n            }\n        }\n        let itemCount = this.items.length;\n        let itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\n        let pageCount_fractional = itemCount / itemsPerPage;\n        let numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\n        let scrollLength = 0;\n        let defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\n        if (this.enableUnequalChildrenSizes) {\n            let numUnknownChildSizes = 0;\n            for (let i = 0; i < numberOfWrapGroups; ++i) {\n                let childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n                if (childSize) {\n                    scrollLength += childSize;\n                }\n                else {\n                    ++numUnknownChildSizes;\n                }\n            }\n            scrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n        }\n        else {\n            scrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\n        }\n        if (this.headerElementRef) {\n            scrollLength += this.headerElementRef.nativeElement.clientHeight;\n        }\n        let viewportLength = this.horizontal ? viewportWidth : viewportHeight;\n        let maxScrollPosition = Math.max(scrollLength - viewportLength, 0);\n        return {\n            itemCount: itemCount,\n            itemsPerWrapGroup: itemsPerWrapGroup,\n            wrapGroupsPerPage: wrapGroupsPerPage,\n            itemsPerPage: itemsPerPage,\n            pageCount_fractional: pageCount_fractional,\n            childWidth: defaultChildWidth,\n            childHeight: defaultChildHeight,\n            scrollLength: scrollLength,\n            viewportLength: viewportLength,\n            maxScrollPosition: maxScrollPosition\n        };\n    }\n    calculatePadding(arrayStartIndexWithBuffer, dimensions) {\n        if (dimensions.itemCount === 0) {\n            return 0;\n        }\n        let defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n        let startingWrapGroupIndex = Math.floor(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\n        if (!this.enableUnequalChildrenSizes) {\n            return defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\n        }\n        let numUnknownChildSizes = 0;\n        let result = 0;\n        for (let i = 0; i < startingWrapGroupIndex; ++i) {\n            let childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n            if (childSize) {\n                result += childSize;\n            }\n            else {\n                ++numUnknownChildSizes;\n            }\n        }\n        result += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n        return result;\n    }\n    calculatePageInfo(scrollPosition, dimensions) {\n        let scrollPercentage = 0;\n        if (this.enableUnequalChildrenSizes) {\n            const numberOfWrapGroups = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\n            let totalScrolledLength = 0;\n            let defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n            for (let i = 0; i < numberOfWrapGroups; ++i) {\n                let childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n                if (childSize) {\n                    totalScrolledLength += childSize;\n                }\n                else {\n                    totalScrolledLength += defaultScrollLengthPerWrapGroup;\n                }\n                if (scrollPosition < totalScrolledLength) {\n                    scrollPercentage = i / numberOfWrapGroups;\n                    break;\n                }\n            }\n        }\n        else {\n            scrollPercentage = scrollPosition / dimensions.scrollLength;\n        }\n        let startingArrayIndex_fractional = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\n        let maxStart = dimensions.itemCount - dimensions.itemsPerPage - 1;\n        let arrayStartIndex = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\n        arrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\n        if (this.stripedTable) {\n            let bufferBoundary = 2 * dimensions.itemsPerWrapGroup;\n            if (arrayStartIndex % bufferBoundary !== 0) {\n                arrayStartIndex = Math.max(arrayStartIndex - arrayStartIndex % bufferBoundary, 0);\n            }\n        }\n        let arrayEndIndex = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\n        let endIndexWithinWrapGroup = (arrayEndIndex + 1) % dimensions.itemsPerWrapGroup;\n        if (endIndexWithinWrapGroup > 0) {\n            arrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\n        }\n        if (isNaN(arrayStartIndex)) {\n            arrayStartIndex = 0;\n        }\n        if (isNaN(arrayEndIndex)) {\n            arrayEndIndex = 0;\n        }\n        arrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n        arrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n        let bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\n        let startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n        let endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n        return {\n            startIndex: arrayStartIndex,\n            endIndex: arrayEndIndex,\n            startIndexWithBuffer: startIndexWithBuffer,\n            endIndexWithBuffer: endIndexWithBuffer,\n            scrollStartPosition: scrollPosition,\n            scrollEndPosition: scrollPosition + dimensions.viewportLength,\n            maxScrollPosition: dimensions.maxScrollPosition\n        };\n    }\n    calculateViewport() {\n        let dimensions = this.calculateDimensions();\n        let offset = this.getElementsOffset();\n        let scrollStartPosition = this.getScrollStartPosition();\n        if (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\n            scrollStartPosition = dimensions.scrollLength;\n        }\n        else {\n            scrollStartPosition -= offset;\n        }\n        scrollStartPosition = Math.max(0, scrollStartPosition);\n        let pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\n        let newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\n        let newScrollLength = dimensions.scrollLength;\n        return {\n            startIndex: pageInfo.startIndex,\n            endIndex: pageInfo.endIndex,\n            startIndexWithBuffer: pageInfo.startIndexWithBuffer,\n            endIndexWithBuffer: pageInfo.endIndexWithBuffer,\n            padding: Math.round(newPadding),\n            scrollLength: Math.round(newScrollLength),\n            scrollStartPosition: pageInfo.scrollStartPosition,\n            scrollEndPosition: pageInfo.scrollEndPosition,\n            maxScrollPosition: pageInfo.maxScrollPosition\n        };\n    }\n}\nVirtualScrollerComponent.ɵfac = function VirtualScrollerComponent_Factory(t) { return new (t || VirtualScrollerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject('virtual-scroller-default-options', 8)); };\nVirtualScrollerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: VirtualScrollerComponent, selectors: [[\"virtual-scroller\"], [\"\", \"virtualScroller\", \"\"]], contentQueries: function VirtualScrollerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 5, ElementRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c1, 5, ElementRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerElementRef = _t.first);\n    } }, viewQuery: function VirtualScrollerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c3, 5, ElementRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.invisiblePaddingElementRef = _t.first);\n    } }, hostVars: 6, hostBindings: function VirtualScrollerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"horizontal\", ctx.horizontal)(\"vertical\", !ctx.horizontal)(\"selfScroll\", !ctx.parentScroll);\n    } }, inputs: { executeRefreshOutsideAngularZone: \"executeRefreshOutsideAngularZone\", useMarginInsteadOfTranslate: \"useMarginInsteadOfTranslate\", ssrViewportWidth: \"ssrViewportWidth\", ssrViewportHeight: \"ssrViewportHeight\", compareItems: \"compareItems\", scrollThrottlingTime: \"scrollThrottlingTime\", scrollDebounceTime: \"scrollDebounceTime\", scrollAnimationTime: \"scrollAnimationTime\", scrollbarWidth: \"scrollbarWidth\", scrollbarHeight: \"scrollbarHeight\", checkResizeInterval: \"checkResizeInterval\", resizeBypassRefreshThreshold: \"resizeBypassRefreshThreshold\", modifyOverflowStyleOfParentScroll: \"modifyOverflowStyleOfParentScroll\", stripedTable: \"stripedTable\", horizontal: \"horizontal\", enableUnequalChildrenSizes: \"enableUnequalChildrenSizes\", bufferAmount: \"bufferAmount\", items: \"items\", parentScroll: \"parentScroll\", childWidth: \"childWidth\", childHeight: \"childHeight\", ssrChildWidth: \"ssrChildWidth\", ssrChildHeight: \"ssrChildHeight\" }, outputs: { vsUpdate: \"vsUpdate\", vsChange: \"vsChange\", vsStart: \"vsStart\", vsEnd: \"vsEnd\" }, exportAs: [\"virtualScroller\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 5, vars: 0, consts: [[1, \"total-padding\"], [\"invisiblePadding\", \"\"], [1, \"scrollable-content\"], [\"content\", \"\"]], template: function VirtualScrollerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"[_nghost-%COMP%] {\\n      position: relative;\\n\\t  display: block;\\n      -webkit-overflow-scrolling: touch;\\n    }\\n\\t\\n\\t.horizontal.selfScroll[_nghost-%COMP%] {\\n      overflow-y: visible;\\n      overflow-x: auto;\\n\\t}\\n\\t.vertical.selfScroll[_nghost-%COMP%] {\\n      overflow-y: auto;\\n      overflow-x: visible;\\n\\t}\\n\\t\\n    .scrollable-content[_ngcontent-%COMP%] {\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      max-width: 100vw;\\n      max-height: 100vh;\\n      position: absolute;\\n    }\\n\\n\\t.scrollable-content[_ngcontent-%COMP%]     > * {\\n\\t\\tbox-sizing: border-box;\\n\\t}\\n\\t\\n\\t.horizontal[_nghost-%COMP%] {\\n\\t\\twhite-space: nowrap;\\n\\t}\\n\\t\\n\\t.horizontal[_nghost-%COMP%]   .scrollable-content[_ngcontent-%COMP%] {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\t\\n\\t.horizontal[_nghost-%COMP%]   .scrollable-content[_ngcontent-%COMP%]     > * {\\n\\t\\tflex-shrink: 0;\\n\\t\\tflex-grow: 0;\\n\\t\\twhite-space: initial;\\n\\t}\\n\\t\\n    .total-padding[_ngcontent-%COMP%] {\\n      width: 1px;\\n      opacity: 0;\\n    }\\n    \\n    .horizontal[_nghost-%COMP%]   .total-padding[_ngcontent-%COMP%] {\\n      height: 100%;\\n    }\"] });\nVirtualScrollerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['virtual-scroller-default-options',] }] }\n];\nVirtualScrollerComponent.propDecorators = {\n    executeRefreshOutsideAngularZone: [{ type: Input }],\n    enableUnequalChildrenSizes: [{ type: Input }],\n    useMarginInsteadOfTranslate: [{ type: Input }],\n    modifyOverflowStyleOfParentScroll: [{ type: Input }],\n    stripedTable: [{ type: Input }],\n    scrollbarWidth: [{ type: Input }],\n    scrollbarHeight: [{ type: Input }],\n    childWidth: [{ type: Input }],\n    childHeight: [{ type: Input }],\n    ssrChildWidth: [{ type: Input }],\n    ssrChildHeight: [{ type: Input }],\n    ssrViewportWidth: [{ type: Input }],\n    ssrViewportHeight: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    scrollAnimationTime: [{ type: Input }],\n    resizeBypassRefreshThreshold: [{ type: Input }],\n    scrollThrottlingTime: [{ type: Input }],\n    scrollDebounceTime: [{ type: Input }],\n    checkResizeInterval: [{ type: Input }],\n    items: [{ type: Input }],\n    compareItems: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    parentScroll: [{ type: Input }],\n    vsUpdate: [{ type: Output }],\n    vsChange: [{ type: Output }],\n    vsStart: [{ type: Output }],\n    vsEnd: [{ type: Output }],\n    contentElementRef: [{ type: ViewChild, args: ['content', { read: ElementRef, static: false },] }],\n    invisiblePaddingElementRef: [{ type: ViewChild, args: ['invisiblePadding', { read: ElementRef, static: false },] }],\n    headerElementRef: [{ type: ContentChild, args: ['header', { read: ElementRef, static: false },] }],\n    containerElementRef: [{ type: ContentChild, args: ['container', { read: ElementRef, static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VirtualScrollerComponent, [{\n        type: Component,\n        args: [{ selector: 'virtual-scroller,[virtualScroller]', exportAs: 'virtualScroller', template: `\n    <div class=\"total-padding\" #invisiblePadding></div>\n    <div class=\"scrollable-content\" #content>\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                    '[class.horizontal]': \"horizontal\",\n                    '[class.vertical]': \"!horizontal\",\n                    '[class.selfScroll]': \"!parentScroll\"\n                }, styles: [\"\\n    :host {\\n      position: relative;\\n\\t  display: block;\\n      -webkit-overflow-scrolling: touch;\\n    }\\n\\t\\n\\t:host.horizontal.selfScroll {\\n      overflow-y: visible;\\n      overflow-x: auto;\\n\\t}\\n\\t:host.vertical.selfScroll {\\n      overflow-y: auto;\\n      overflow-x: visible;\\n\\t}\\n\\t\\n    .scrollable-content {\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      max-width: 100vw;\\n      max-height: 100vh;\\n      position: absolute;\\n    }\\n\\n\\t.scrollable-content ::ng-deep > * {\\n\\t\\tbox-sizing: border-box;\\n\\t}\\n\\t\\n\\t:host.horizontal {\\n\\t\\twhite-space: nowrap;\\n\\t}\\n\\t\\n\\t:host.horizontal .scrollable-content {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\t\\n\\t:host.horizontal .scrollable-content ::ng-deep > * {\\n\\t\\tflex-shrink: 0;\\n\\t\\tflex-grow: 0;\\n\\t\\twhite-space: initial;\\n\\t}\\n\\t\\n    .total-padding {\\n      width: 1px;\\n      opacity: 0;\\n    }\\n    \\n    :host.horizontal .total-padding {\\n      height: 100%;\\n    }\\n  \"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: ['virtual-scroller-default-options']\n            }] }]; }, { executeRefreshOutsideAngularZone: [{\n            type: Input\n        }], useMarginInsteadOfTranslate: [{\n            type: Input\n        }], ssrViewportWidth: [{\n            type: Input\n        }], ssrViewportHeight: [{\n            type: Input\n        }], compareItems: [{\n            type: Input\n        }], vsUpdate: [{\n            type: Output\n        }], vsChange: [{\n            type: Output\n        }], vsStart: [{\n            type: Output\n        }], vsEnd: [{\n            type: Output\n        }], scrollThrottlingTime: [{\n            type: Input\n        }], scrollDebounceTime: [{\n            type: Input\n        }], scrollAnimationTime: [{\n            type: Input\n        }], scrollbarWidth: [{\n            type: Input\n        }], scrollbarHeight: [{\n            type: Input\n        }], checkResizeInterval: [{\n            type: Input\n        }], resizeBypassRefreshThreshold: [{\n            type: Input\n        }], modifyOverflowStyleOfParentScroll: [{\n            type: Input\n        }], stripedTable: [{\n            type: Input\n        }], horizontal: [{\n            type: Input\n        }], enableUnequalChildrenSizes: [{\n            type: Input\n        }], bufferAmount: [{\n            type: Input\n        }], items: [{\n            type: Input\n        }], parentScroll: [{\n            type: Input\n        }], childWidth: [{\n            type: Input\n        }], childHeight: [{\n            type: Input\n        }], ssrChildWidth: [{\n            type: Input\n        }], ssrChildHeight: [{\n            type: Input\n        }], contentElementRef: [{\n            type: ViewChild,\n            args: ['content', { read: ElementRef, static: false }]\n        }], invisiblePaddingElementRef: [{\n            type: ViewChild,\n            args: ['invisiblePadding', { read: ElementRef, static: false }]\n        }], headerElementRef: [{\n            type: ContentChild,\n            args: ['header', { read: ElementRef, static: false }]\n        }], containerElementRef: [{\n            type: ContentChild,\n            args: ['container', { read: ElementRef, static: false }]\n        }] }); })();\nclass VirtualScrollerModule {\n}\nVirtualScrollerModule.ɵfac = function VirtualScrollerModule_Factory(t) { return new (t || VirtualScrollerModule)(); };\nVirtualScrollerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: VirtualScrollerModule });\nVirtualScrollerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        {\n            provide: 'virtual-scroller-default-options',\n            useFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n        }\n    ], imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VirtualScrollerModule, [{\n        type: NgModule,\n        args: [{\n                exports: [VirtualScrollerComponent],\n                declarations: [VirtualScrollerComponent],\n                imports: [CommonModule],\n                providers: [\n                    {\n                        provide: 'virtual-scroller-default-options',\n                        useFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n                    }\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VirtualScrollerModule, { declarations: function () { return [VirtualScrollerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [VirtualScrollerComponent]; } }); })();\n\nconst DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true\n};\nconst DROPDOWN_CONTROL_VALIDATION = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true,\n};\nconst noop = () => {\n};\nconst ɵ0 = noop;\nclass AngularMultiSelect {\n    constructor(_elementRef, cdr, filterPipe) {\n        this._elementRef = _elementRef;\n        this.cdr = cdr;\n        this.filterPipe = filterPipe;\n        this.onSelect = new EventEmitter();\n        this.onDeSelect = new EventEmitter();\n        this.onSelectAll = new EventEmitter();\n        this.onDeSelectAll = new EventEmitter();\n        this.onOpen = new EventEmitter();\n        this.onClose = new EventEmitter();\n        this.onScrollToEnd = new EventEmitter();\n        this.onFilterSelectAll = new EventEmitter();\n        this.onFilterDeSelectAll = new EventEmitter();\n        this.onAddFilterNewItem = new EventEmitter();\n        this.onGroupSelect = new EventEmitter();\n        this.onGroupDeSelect = new EventEmitter();\n        this.virtualdata = [];\n        this.searchTerm$ = new Subject();\n        this.isActive = false;\n        this.isSelectAll = false;\n        this.isFilterSelectAll = false;\n        this.isInfiniteFilterSelectAll = false;\n        this.chunkIndex = [];\n        this.cachedItems = [];\n        this.groupCachedItems = [];\n        this.itemHeight = 41.6;\n        this.filterLength = 0;\n        this.infiniteFilterLength = 0;\n        this.dropdownListYOffset = 0;\n        this.dropDownWidth = 0;\n        this.dropDownTop = '';\n        this.dropDownBottom = 'unset';\n        this.dropDownLeft = 0;\n        this.id = Math.random().toString(36).substring(2);\n        this.defaultSettings = {\n            singleSelection: false,\n            text: 'Select',\n            enableCheckAll: true,\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            filterSelectAllText: 'Select all filtered results',\n            filterUnSelectAllText: 'UnSelect all filtered results',\n            enableSearchFilter: false,\n            searchBy: [],\n            maxHeight: 300,\n            badgeShowLimit: 999999999999,\n            classes: '',\n            disabled: false,\n            searchPlaceholderText: 'Search',\n            showCheckbox: true,\n            noDataLabel: 'No Data Available',\n            searchAutofocus: true,\n            lazyLoading: false,\n            labelKey: 'itemName',\n            primaryKey: 'id',\n            position: 'bottom',\n            autoPosition: true,\n            enableFilterSelectAll: true,\n            selectGroup: false,\n            addNewItemOnFilter: false,\n            addNewButtonText: \"Add\",\n            escapeToClose: true,\n            clearAll: true,\n            tagToBody: true\n        };\n        this.randomSize = true;\n        this.filteredList = [];\n        this.virtualScroollInit = false;\n        this.isDisabledItemPresent = false;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.searchTerm$.asObservable().pipe(debounceTime(1000), distinctUntilChanged(), tap(term => term)).subscribe(val => {\n            this.filterInfiniteList(val);\n        });\n    }\n    onEscapeDown(event) {\n        if (this.settings.escapeToClose) {\n            this.closeDropdown();\n        }\n    }\n    onScroll(event) {\n        if (this.isActive && this.settings.tagToBody) {\n            this.closeDropdown();\n            /*             const elem = this.cuppaDropdown.nativeElement;\n                        if(this.settings.autoPosition){\n                            this.dropDownTop = elem.getBoundingClientRect().y + elem.clientHeight + 1;\n                        }\n                        this.dropDownLeft = elem.getBoundingClientRect().x; */\n        }\n    }\n    ngOnInit() {\n        this.settings = Object.assign(this.defaultSettings, this.settings);\n        this.cachedItems = this.cloneArray(this.data);\n        if (this.settings.position == 'top') {\n            setTimeout(() => {\n                this.selectedListHeight = { val: 0 };\n                this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            });\n        }\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        });\n        this.virtualScroollInit = false;\n    }\n    onKeyUp(evt) {\n        this.searchTerm$.next(evt.target.value);\n    }\n    ngOnChanges(changes) {\n        if (changes.data && !changes.data.firstChange) {\n            if (this.settings.groupBy) {\n                this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                if (this.data.length == 0) {\n                    this.selectedItems = [];\n                }\n                this.groupCachedItems = this.cloneArray(this.groupedData);\n            }\n            this.cachedItems = this.cloneArray(this.data);\n        }\n        if (changes.settings && !changes.settings.firstChange) {\n            this.settings = Object.assign(this.defaultSettings, this.settings);\n        }\n        if (changes.loading) {\n        }\n        if (this.settings.lazyLoading && this.virtualScroollInit && changes.data) {\n            this.virtualdata = changes.data.currentValue;\n        }\n    }\n    ngDoCheck() {\n        if (this.selectedItems) {\n            if (this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length) {\n                this.isSelectAll = false;\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this.settings.lazyLoading) {\n            // this._elementRef.nativeElement.getElementsByClassName(\"lazyContainer\")[0].addEventListener('scroll', this.onScroll.bind(this));\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.selectedListElem.nativeElement.clientHeight && this.settings.position == 'top' && this.selectedListHeight) {\n            this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            this.cdr.detectChanges();\n        }\n        //this.calculateDropdownDirection();\n    }\n    onItemClick(item, index, evt) {\n        if (item.disabled) {\n            return;\n        }\n        if (this.settings.disabled) {\n            return;\n        }\n        let found = this.isSelected(item);\n        let limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\n        if (!found) {\n            if (this.settings.limitSelection) {\n                if (limit) {\n                    this.addSelected(item);\n                    this.onSelect.emit(item);\n                }\n            }\n            else {\n                this.addSelected(item);\n                this.onSelect.emit(item);\n            }\n        }\n        else {\n            this.removeSelected(item);\n            this.onDeSelect.emit(item);\n        }\n        if (this.isSelectAll || this.data.length > this.selectedItems.length) {\n            this.isSelectAll = false;\n        }\n        if (this.data.length == this.selectedItems.length) {\n            this.isSelectAll = true;\n        }\n        if (this.settings.groupBy) {\n            this.updateGroupInfo(item);\n        }\n    }\n    validate(c) {\n        return null;\n    }\n    writeValue(value) {\n        if (value !== undefined && value !== null && value !== '') {\n            if (this.settings.singleSelection) {\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                    this.selectedItems = [value[0]];\n                }\n                else {\n                    try {\n                        if (value.length > 1) {\n                            this.selectedItems = [value[0]];\n                            throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\n                        }\n                        else {\n                            this.selectedItems = value;\n                        }\n                    }\n                    catch (e) {\n                        console.error(e.body.msg);\n                    }\n                }\n            }\n            else {\n                if (this.settings.limitSelection) {\n                    this.selectedItems = value.slice(0, this.settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = value;\n                }\n                if (this.selectedItems.length === this.data.length && this.data.length > 0) {\n                    this.isSelectAll = true;\n                }\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                }\n            }\n        }\n        else {\n            this.selectedItems = [];\n        }\n    }\n    //From ControlValueAccessor interface\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    //From ControlValueAccessor interface\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    trackByFn(index, item) {\n        return item[this.settings.primaryKey];\n    }\n    isSelected(clickedItem) {\n        if (clickedItem.disabled) {\n            return false;\n        }\n        let found = false;\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    addSelected(item) {\n        if (item.disabled) {\n            return;\n        }\n        if (this.settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n            this.closeDropdown();\n        }\n        else\n            this.selectedItems.push(item);\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    removeSelected(clickedItem) {\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    toggleDropdown(evt) {\n        if (this.settings.disabled) {\n            return;\n        }\n        this.isActive = !this.isActive;\n        if (this.isActive) {\n            this.openDropdown();\n        }\n        else {\n            this.closeDropdown();\n        }\n        if (this.settings.lazyLoading) {\n            this.virtualdata = this.data;\n            this.virtualScroollInit = true;\n        }\n        evt.preventDefault();\n    }\n    openDropdown() {\n        if (this.settings.disabled) {\n            return;\n        }\n        this.isActive = true;\n        this.calculateDropdownDirection();\n        if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n            }, 0);\n        }\n        this.onOpen.emit(true);\n    }\n    closeDropdown() {\n        if (this.searchInput && this.settings.lazyLoading) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        this.filter = \"\";\n        this.isActive = false;\n        this.searchTerm$.next('');\n        this.onClose.emit(false);\n    }\n    closeDropdownOnClickOut() {\n        if (this.isActive) {\n            if (this.searchInput && this.settings.lazyLoading) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            if (this.searchInput) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            this.filter = \"\";\n            this.isActive = false;\n            this.clearSearch();\n            this.searchTerm$.next('');\n            this.onClose.emit(false);\n        }\n    }\n    toggleSelectAll(event) {\n        if (!this.isSelectAll) {\n            this.selectedItems = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = !obj.disabled;\n                });\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = !obj.disabled;\n                });\n            }\n            // this.selectedItems = this.data.slice();\n            this.selectedItems = this.data.filter((individualData) => !individualData.disabled);\n            this.isSelectAll = true;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n            this.onSelectAll.emit(this.selectedItems);\n        }\n        else {\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = false;\n                });\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = false;\n                });\n            }\n            this.selectedItems = [];\n            this.isSelectAll = false;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n            this.onDeSelectAll.emit(this.selectedItems);\n        }\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        });\n        event.stopPropagation();\n    }\n    filterGroupedList() {\n        if (this.filter == \"\" || this.filter == null) {\n            this.clearSearch();\n            return;\n        }\n        this.groupedData = this.cloneArray(this.groupCachedItems);\n        this.groupedData = this.groupedData.filter(obj => {\n            let arr = [];\n            if (obj[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1) {\n                arr = obj.list;\n            }\n            else {\n                arr = obj.list.filter(t => {\n                    return t[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n                });\n            }\n            obj.list = arr;\n            if (obj[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1) {\n                return arr;\n            }\n            else {\n                return arr.some(cat => {\n                    return cat[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n                });\n            }\n        });\n    }\n    toggleFilterSelectAll() {\n        if (!this.isFilterSelectAll) {\n            let added = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item) => {\n                    item.sele;\n                    if (item.list) {\n                        item.list.forEach((el) => {\n                            if (!this.isSelected(el)) {\n                                this.addSelected(el);\n                                added.push(el);\n                            }\n                        });\n                    }\n                    this.updateGroupInfo(item);\n                });\n                this.filteredList.forEach((el) => {\n                    if (!this.isSelected(el) && !el.hasOwnProperty('grpTitle')) {\n                        this.addSelected(el);\n                        added.push(el);\n                    }\n                });\n            }\n            else {\n                this.filteredList.forEach((item) => {\n                    if (!this.isSelected(item)) {\n                        this.addSelected(item);\n                        added.push(item);\n                    }\n                });\n            }\n            this.isFilterSelectAll = true;\n            this.onFilterSelectAll.emit(added);\n        }\n        else {\n            let removed = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item) => {\n                    if (item.list) {\n                        item.list.forEach((el) => {\n                            if (this.isSelected(el)) {\n                                this.removeSelected(el);\n                                removed.push(el);\n                            }\n                        });\n                    }\n                    this.updateGroupInfo(item);\n                });\n                this.filteredList.forEach((el) => {\n                    if (this.isSelected(el)) {\n                        this.removeSelected(el);\n                        removed.push(el);\n                    }\n                });\n            }\n            else {\n                this.filteredList.forEach((item) => {\n                    if (this.isSelected(item)) {\n                        this.removeSelected(item);\n                        removed.push(item);\n                    }\n                });\n            }\n            this.isFilterSelectAll = false;\n            this.onFilterDeSelectAll.emit(removed);\n        }\n    }\n    toggleInfiniteFilterSelectAll() {\n        if (!this.isInfiniteFilterSelectAll) {\n            this.virtualdata.forEach((item) => {\n                if (!this.isSelected(item)) {\n                    this.addSelected(item);\n                }\n            });\n            this.isInfiniteFilterSelectAll = true;\n        }\n        else {\n            this.virtualdata.forEach((item) => {\n                if (this.isSelected(item)) {\n                    this.removeSelected(item);\n                }\n            });\n            this.isInfiniteFilterSelectAll = false;\n        }\n    }\n    clearSearch() {\n        if (this.settings.groupBy) {\n            this.groupedData = [];\n            this.groupedData = this.cloneArray(this.groupCachedItems);\n        }\n        this.filter = \"\";\n        this.isFilterSelectAll = false;\n        this.searchTerm$.next('');\n        this.data = this.cachedItems;\n    }\n    onFilterChange(data) {\n        if (this.filter && this.filter == \"\" || data.length == 0) {\n            this.isFilterSelectAll = false;\n            this.data = this.cachedItems.slice();\n        }\n        let cnt = 0;\n        data.forEach((item) => {\n            if (!item.hasOwnProperty('grpTitle') && this.isSelected(item)) {\n                cnt++;\n            }\n        });\n        if (cnt > 0 && this.filterLength == cnt) {\n            this.isFilterSelectAll = true;\n        }\n        else if (cnt > 0 && this.filterLength != cnt) {\n            this.isFilterSelectAll = false;\n        }\n        this.data = data;\n    }\n    cloneArray(arr) {\n        let i, copy;\n        if (Array.isArray(arr)) {\n            return JSON.parse(JSON.stringify(arr));\n        }\n        else if (typeof arr === 'object') {\n            throw 'Cannot clone array containing an object!';\n        }\n        else {\n            return arr;\n        }\n    }\n    updateGroupInfo(item) {\n        if (item.disabled) {\n            return;\n        }\n        let key = this.settings.groupBy;\n        this.groupedData.forEach((obj) => {\n            let cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n        this.groupCachedItems.forEach((obj) => {\n            let cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n    }\n    transformData(arr, field) {\n        const groupedObj = arr.reduce((prev, cur) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            }\n            else {\n                prev[cur[field]].push(cur);\n            }\n            return prev;\n        }, {});\n        const tempArr = [];\n        Object.keys(groupedObj).map((x) => {\n            let obj = {};\n            let disabledChildrens = [];\n            obj[\"grpTitle\"] = true;\n            obj[this.settings.labelKey] = x;\n            obj[this.settings.groupBy] = x;\n            obj['selected'] = false;\n            obj['list'] = [];\n            let cnt = 0;\n            groupedObj[x].forEach((item) => {\n                item['list'] = [];\n                if (item.disabled) {\n                    this.isDisabledItemPresent = true;\n                    disabledChildrens.push(item);\n                }\n                obj.list.push(item);\n                if (this.isSelected(item)) {\n                    cnt++;\n                }\n            });\n            if (cnt == obj.list.length) {\n                obj.selected = true;\n            }\n            else {\n                obj.selected = false;\n            }\n            // Check if current group item's all childrens are disabled or not\n            obj['disabled'] = disabledChildrens.length === groupedObj[x].length;\n            tempArr.push(obj);\n            // obj.list.forEach((item: any) => {\n            //     tempArr.push(item);\n            // });\n        });\n        return tempArr;\n    }\n    filterInfiniteList(evt) {\n        let filteredElems = [];\n        if (this.settings.groupBy) {\n            this.groupedData = this.groupCachedItems.slice();\n        }\n        else {\n            this.data = this.cachedItems.slice();\n            this.virtualdata = this.cachedItems.slice();\n        }\n        if ((evt != null || evt != '') && !this.settings.groupBy) {\n            if (this.settings.searchBy.length > 0) {\n                for (let t = 0; t < this.settings.searchBy.length; t++) {\n                    this.virtualdata.filter((el) => {\n                        if (el[this.settings.searchBy[t].toString()].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                        }\n                    });\n                }\n            }\n            else {\n                this.virtualdata.filter(function (el) {\n                    for (let prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                });\n            }\n            this.virtualdata = [];\n            this.virtualdata = filteredElems;\n            this.infiniteFilterLength = this.virtualdata.length;\n        }\n        if (evt.toString() != '' && this.settings.groupBy) {\n            this.groupedData.filter(function (el) {\n                if (el.hasOwnProperty('grpTitle')) {\n                    filteredElems.push(el);\n                }\n                else {\n                    for (let prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                }\n            });\n            this.groupedData = [];\n            this.groupedData = filteredElems;\n            this.infiniteFilterLength = this.groupedData.length;\n        }\n        else if (evt.toString() == '' && this.cachedItems.length > 0) {\n            this.virtualdata = [];\n            this.virtualdata = this.cachedItems;\n            this.infiniteFilterLength = 0;\n        }\n        if (this.virtualScroller) {\n            this.virtualScroller.refresh();\n        }\n    }\n    resetInfiniteSearch() {\n        this.filter = \"\";\n        this.isInfiniteFilterSelectAll = false;\n        this.virtualdata = [];\n        this.virtualdata = this.cachedItems;\n        this.groupedData = this.groupCachedItems;\n        this.searchTerm$.next('');\n        this.infiniteFilterLength = 0;\n    }\n    onScrollEnd(e) {\n        if (e.endIndex === this.data.length - 1 || e.startIndex === 0) {\n        }\n        this.onScrollToEnd.emit(e);\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    selectGroup(item) {\n        if (item.disabled) {\n            return;\n        }\n        if (item.selected) {\n            item.selected = false;\n            item.list.forEach((obj) => {\n                this.removeSelected(obj);\n            });\n            this.onGroupDeSelect.emit(item);\n            this.updateGroupInfo(item);\n        }\n        else {\n            item.selected = true;\n            item.list.forEach((obj) => {\n                if (!this.isSelected(obj)) {\n                    this.addSelected(obj);\n                }\n            });\n            this.onGroupSelect.emit(item);\n            this.updateGroupInfo(item);\n        }\n    }\n    addFilterNewItem() {\n        this.onAddFilterNewItem.emit(this.filter);\n        this.filterPipe.transform(this.data, this.filter, this.settings.searchBy);\n    }\n    calculateDropdownDirection() {\n        let shouldOpenTowardsTop = this.settings.position == 'top';\n        const elem = this.cuppaDropdown.nativeElement;\n        const dropdownWidth = elem.clientWidth;\n        this.dropDownWidth = dropdownWidth;\n        this.dropDownLeft = this.settings.tagToBody ? elem.getBoundingClientRect().x : 'unset';\n        if (this.settings.position == 'top' && !this.settings.autoPosition) {\n            this.openTowardsTop(true);\n        }\n        else if (this.settings.position == 'bottom' && !this.settings.autoPosition) {\n            this.openTowardsTop(false);\n        }\n        if (this.settings.autoPosition) {\n            const dropdownHeight = this.defaultSettings.maxHeight;\n            const viewportHeight = document.documentElement.clientHeight;\n            const selectedListBounds = this.selectedListElem.nativeElement.getBoundingClientRect();\n            const spaceOnTop = selectedListBounds.top;\n            const spaceOnBottom = viewportHeight - selectedListBounds.top;\n            if (spaceOnBottom < spaceOnTop && dropdownHeight < spaceOnTop) {\n                this.openTowardsTop(true);\n            }\n            else {\n                this.openTowardsTop(false);\n            }\n            // Keep preference if there is not enough space on either the top or bottom\n            /* \t\t\tif (spaceOnTop || spaceOnBottom) {\n                            if (shouldOpenTowardsTop) {\n                                shouldOpenTowardsTop = spaceOnTop;\n                            } else {\n                                shouldOpenTowardsTop = !spaceOnBottom;\n                            }\n                        } */\n        }\n    }\n    openTowardsTop(value) {\n        const elem = this.cuppaDropdown.nativeElement;\n        if (value && this.selectedListElem.nativeElement.clientHeight) {\n            this.dropdownListYOffset = 15 - this.selectedListElem.nativeElement.clientHeight;\n            if (this.settings.tagToBody) {\n                this.dropDownTop = (elem.getBoundingClientRect().y - this.selectedListElem.nativeElement.clientHeight * 2 - 15 - this.defaultSettings.maxHeight) + 'px';\n            }\n            else {\n                this.dropDownBottom = (this.selectedListElem.nativeElement.clientHeight + 15) + 'px';\n            }\n            this.settings.position = 'top';\n        }\n        else {\n            if (this.settings.tagToBody) {\n                this.dropDownTop = (elem.getBoundingClientRect().y + elem.clientHeight + 1) + 'px';\n            }\n            else {\n                this.dropDownTop = 'unset';\n                this.dropDownBottom = 'unset';\n            }\n            this.dropdownListYOffset = 0;\n            this.settings.position = 'bottom';\n        }\n    }\n    clearSelection(e) {\n        if (this.settings.groupBy) {\n            this.groupCachedItems.forEach((obj) => {\n                obj.selected = false;\n            });\n        }\n        this.clearSearch();\n        this.selectedItems = [];\n        this.isSelectAll = false;\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n        this.onDeSelectAll.emit(this.selectedItems);\n    }\n    filteritems(evt) {\n        this.filteredList = this.filterPipe.transform(this.cachedItems, evt.target.value, this.settings.searchBy);\n        if (this.filteredList) {\n            let len = 0;\n            this.filteredList.forEach((obj, i) => {\n                if (obj.disabled) {\n                    this.isDisabledItemPresent = true;\n                }\n                if (!obj.hasOwnProperty('grpTitle')) {\n                    len++;\n                }\n            });\n            this.filterLength = len;\n        }\n        this.onFilterChange(this.filteredList);\n    }\n}\nAngularMultiSelect.ɵfac = function AngularMultiSelect_Factory(t) { return new (t || AngularMultiSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ListFilterPipe)); };\nAngularMultiSelect.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AngularMultiSelect, selectors: [[\"angular2-multiselect\"]], contentQueries: function AngularMultiSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, Item, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, Badge, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, Search, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTempl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.badgeTempl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchTempl = _t.first);\n    } }, viewQuery: function AngularMultiSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c5, 5);\n        ɵngcc0.ɵɵviewQuery(_c6, 5);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n        ɵngcc0.ɵɵviewQuery(VirtualScrollerComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectedListElem = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownListElem = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cuppaDropdown = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.virtualScroller = _t.first);\n    } }, hostVars: 2, hostBindings: function AngularMultiSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup.escape\", function AngularMultiSelect_keyup_escape_HostBindingHandler($event) { return ctx.onEscapeDown($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"scroll\", function AngularMultiSelect_scroll_HostBindingHandler($event) { return ctx.onScroll($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.defaultSettings.classes);\n    } }, inputs: { settings: \"settings\", data: \"data\", loading: \"loading\" }, outputs: { onSelect: \"onSelect\", onDeSelect: \"onDeSelect\", onSelectAll: \"onSelectAll\", onDeSelectAll: \"onDeSelectAll\", onOpen: \"onOpen\", onClose: \"onClose\", onScrollToEnd: \"onScrollToEnd\", onFilterSelectAll: \"onFilterSelectAll\", onFilterDeSelectAll: \"onFilterDeSelectAll\", onAddFilterNewItem: \"onAddFilterNewItem\", onGroupSelect: \"onGroupSelect\", onGroupDeSelect: \"onGroupDeSelect\" }, features: [ɵngcc0.ɵɵProvidersFeature([DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 33, vars: 50, consts: [[1, \"cuppa-dropdown\", 3, \"clickOutside\"], [\"cuppaDropdown\", \"\"], [1, \"selected-list\"], [\"selectedList\", \"\"], [1, \"c-btn\", 3, \"ngClass\", \"click\"], [4, \"ngIf\"], [\"class\", \"c-list\", 4, \"ngIf\"], [\"class\", \"countplaceholder\", 4, \"ngIf\"], [\"class\", \"c-remove clear-all\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"c-angle-down\", 4, \"ngIf\"], [\"class\", \"c-angle-up\", 4, \"ngIf\"], [1, \"dropdown-list\", \"animated\", \"fadeIn\", 3, \"ngClass\", \"hidden\"], [\"dropdownList\", \"\"], [1, \"arrow-2\", 3, \"ngClass\"], [3, \"ngClass\"], [1, \"list-area\", 3, \"ngClass\"], [\"class\", \"pure-checkbox select-all\", 4, \"ngIf\"], [\"class\", \"loading-icon\", \"src\", \"assets/img/loading.gif\", 4, \"ngIf\"], [\"class\", \"list-filter\", 4, \"ngIf\"], [\"class\", \"filter-select-all\", 4, \"ngIf\"], [\"style\", \"overflow: auto;\", 3, \"maxHeight\", 4, \"ngIf\"], [\"class\", \"list-message\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"c-list\"], [\"class\", \"c-token\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"c-token\"], [\"class\", \"c-label\", 4, \"ngIf\"], [1, \"c-remove\", 3, \"click\"], [3, \"name\"], [1, \"c-label\"], [3, \"data\", \"item\"], [\"class\", \"c-token\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"c-token\", 3, \"hidden\"], [1, \"countplaceholder\"], [1, \"c-remove\", \"clear-all\", 3, \"click\"], [1, \"c-angle-down\"], [1, \"c-angle-up\"], [1, \"pure-checkbox\", \"select-all\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"id\", \"change\", 4, \"ngIf\"], [3, \"for\"], [3, \"hidden\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"id\", \"change\"], [\"src\", \"assets/img/loading.gif\", 1, \"loading-icon\"], [1, \"list-filter\"], [\"id\", \"searchIcon\", 1, \"c-search\"], [\"class\", \"c-clear\", 3, \"hidden\", \"click\", 4, \"ngIf\"], [\"class\", \"c-input\", \"type\", \"text\", \"aria-labelledby\", \"searchIcon\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"keyup\", 4, \"ngIf\"], [3, \"data\", \"item\", 4, \"ngIf\"], [1, \"c-clear\", 3, \"hidden\", \"click\"], [\"type\", \"text\", \"aria-labelledby\", \"searchIcon\", 1, \"c-input\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"keyup\"], [\"searchInput\", \"\"], [1, \"filter-select-all\"], [\"class\", \"pure-checkbox select-all\", 3, \"click\", 4, \"ngIf\"], [1, \"pure-checkbox\", \"select-all\", 3, \"click\"], [\"type\", \"checkbox\", \"aria-labelledby\", \"optionName\", \"aria-label\", \"option\", 3, \"checked\", \"disabled\"], [\"type\", \"checkbox\", \"aria-labelledby\", \"option\", 3, \"checked\", \"disabled\"], [\"class\", \"btn-container\", 4, \"ngIf\"], [1, \"btn-container\"], [1, \"c-btn\", \"btn-iceblue\", 3, \"click\"], [2, \"overflow\", \"auto\"], [1, \"lazyContainer\"], [\"class\", \"pure-checkbox\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"pure-checkbox\", 3, \"ngClass\", \"click\"], [\"type\", \"checkbox\", \"aria-labelledby\", \"option\", 3, \"checked\", \"disabled\", 4, \"ngIf\"], [\"virtualScroller\", \"\", 1, \"lazyContainer\", 3, \"enableUnequalChildrenSizes\", \"items\", \"ngStyle\", \"vsStart\", \"vsEnd\"], [\"scroll\", \"\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\"], [\"scroll2\", \"\"], [\"scroll3\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"pure-checkbox\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"pure-checkbox\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"pure-checkbox\", 3, \"ngClass\"], [3, \"items\", \"ngStyle\", \"vsUpdate\", \"vsEnd\"], [\"scroll4\", \"\"], [1, \"list-message\"]], template: function AngularMultiSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"clickOutside\", function AngularMultiSelect_Template_div_clickOutside_0_listener() { return ctx.closeDropdownOnClickOut(); });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3)(4, \"div\", 4);\n        ɵngcc0.ɵɵlistener(\"click\", function AngularMultiSelect_Template_div_click_4_listener($event) { return ctx.toggleDropdown($event); });\n        ɵngcc0.ɵɵtemplate(5, AngularMultiSelect_span_5_Template, 2, 1, \"span\", 5);\n        ɵngcc0.ɵɵtemplate(6, AngularMultiSelect_span_6_Template, 2, 2, \"span\", 5);\n        ɵngcc0.ɵɵtemplate(7, AngularMultiSelect_span_7_Template, 2, 2, \"span\", 6);\n        ɵngcc0.ɵɵtemplate(8, AngularMultiSelect_div_8_Template, 2, 2, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(9, AngularMultiSelect_span_9_Template, 2, 1, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(10, AngularMultiSelect_span_10_Template, 2, 1, \"span\", 8);\n        ɵngcc0.ɵɵtemplate(11, AngularMultiSelect_span_11_Template, 2, 1, \"span\", 9);\n        ɵngcc0.ɵɵtemplate(12, AngularMultiSelect_span_12_Template, 2, 1, \"span\", 10);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(13, \"div\", 11, 12);\n        ɵngcc0.ɵɵelement(15, \"div\", 13)(16, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(17, \"div\", 15);\n        ɵngcc0.ɵɵtemplate(18, AngularMultiSelect_div_18_Template, 7, 6, \"div\", 16);\n        ɵngcc0.ɵɵtemplate(19, AngularMultiSelect_img_19_Template, 1, 0, \"img\", 17);\n        ɵngcc0.ɵɵtemplate(20, AngularMultiSelect_div_20_Template, 9, 7, \"div\", 18);\n        ɵngcc0.ɵɵtemplate(21, AngularMultiSelect_div_21_Template, 3, 2, \"div\", 19);\n        ɵngcc0.ɵɵtemplate(22, AngularMultiSelect_div_22_Template, 2, 1, \"div\", 19);\n        ɵngcc0.ɵɵtemplate(23, AngularMultiSelect_div_23_Template, 2, 1, \"div\", 19);\n        ɵngcc0.ɵɵtemplate(24, AngularMultiSelect_div_24_Template, 3, 3, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(25, AngularMultiSelect_div_25_Template, 4, 8, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(26, AngularMultiSelect_div_26_Template, 3, 3, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(27, AngularMultiSelect_div_27_Template, 4, 8, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(28, AngularMultiSelect_div_28_Template, 4, 8, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(29, AngularMultiSelect_div_29_Template, 3, 3, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(30, AngularMultiSelect_div_30_Template, 5, 12, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(31, AngularMultiSelect_div_31_Template, 3, 3, \"div\", 20);\n        ɵngcc0.ɵɵtemplate(32, AngularMultiSelect_h5_32_Template, 2, 1, \"h5\", 21);\n        ɵngcc0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(38, _c14, ctx.settings.disabled));\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.selectedItems == null ? null : ctx.selectedItems.length) == 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.singleSelection && !ctx.badgeTempl);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.selectedItems == null ? null : ctx.selectedItems.length) > 0 && ctx.settings.singleSelection && ctx.badgeTempl);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.selectedItems == null ? null : ctx.selectedItems.length) > 0 && !ctx.settings.singleSelection);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.selectedItems == null ? null : ctx.selectedItems.length) > ctx.settings.badgeShowLimit);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.clearAll && (ctx.selectedItems == null ? null : ctx.selectedItems.length) > 0 && !ctx.settings.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isActive);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActive);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.dropDownWidth, \"px\")(\"top\", ctx.dropDownTop)(\"bottom\", ctx.dropDownBottom)(\"left\", ctx.dropDownLeft, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(40, _c15, ctx.settings.tagToBody))(\"hidden\", !ctx.isActive);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(42, _c16, ctx.settings.position == \"bottom\", ctx.settings.position == \"top\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(45, _c16, ctx.settings.position == \"bottom\", ctx.settings.position == \"top\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(48, _c17, ctx.settings.singleSelection));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.enableCheckAll && !ctx.settings.singleSelection && !ctx.settings.limitSelection && (ctx.data == null ? null : ctx.data.length) > 0 && !ctx.isDisabledItemPresent);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.enableSearchFilter);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.lazyLoading && ctx.settings.enableFilterSelectAll && !ctx.isDisabledItemPresent);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.lazyLoading && ctx.settings.enableFilterSelectAll && !ctx.isDisabledItemPresent && !ctx.settings.singleSelection);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.filter == null ? null : ctx.filter.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.groupBy && !ctx.settings.lazyLoading && ctx.itemTempl == undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.groupBy && ctx.settings.lazyLoading && ctx.itemTempl == undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.groupBy && !ctx.settings.lazyLoading && ctx.itemTempl != undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.groupBy && ctx.settings.lazyLoading && ctx.itemTempl != undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.groupBy && ctx.settings.lazyLoading && ctx.itemTempl != undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.groupBy && !ctx.settings.lazyLoading && ctx.itemTempl != undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.groupBy && ctx.settings.lazyLoading && ctx.itemTempl == undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.groupBy && !ctx.settings.lazyLoading && ctx.itemTempl == undefined);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.data == null ? null : ctx.data.length) == 0);\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, VirtualScrollerComponent, ClickOutsideDirective, TemplateRenderer, CIcon], styles: [\"virtual-scroll{display:block;width:100%}.cuppa-dropdown{position:relative}.c-btn{display:inline-block;border-width:1px;line-height:1.25;border-radius:3px;font-size:.85rem;padding:5px 10px;cursor:pointer;align-items:center;min-height:38px}.c-btn.disabled{background:#ccc}.selected-list .c-list{float:left;padding:0;margin:0;width:calc(100% - 20px)}.selected-list .c-list .c-token{list-style:none;border-radius:2px;margin-right:4px;margin-top:2px;float:left;position:relative;padding:4px 22px 4px 8px}.selected-list .c-list .c-token .c-label{display:block;float:left}.selected-list .c-list .c-token .c-remove{position:absolute;right:8px;top:50%;transform:translateY(-50%);width:8px}.selected-list .c-list .c-token .c-remove svg{fill:#fff}.selected-list .fa-angle-down,.selected-list .fa-angle-up{font-size:15pt;position:absolute;right:10px;top:50%;transform:translateY(-50%)}.selected-list .c-angle-down,.selected-list .c-angle-up{width:12px;height:12px;position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none}.selected-list .c-angle-down svg,.selected-list .c-angle-up svg{fill:#333}.selected-list .countplaceholder{position:absolute;right:45px;top:50%;transform:translateY(-50%)}.selected-list .c-btn{width:100%;padding:5px 10px;cursor:pointer;display:flex;position:relative}.selected-list .c-btn .c-icon{position:absolute;right:5px;top:50%;transform:translateY(-50%)}.dropdown-list.tagToBody{position:fixed}.dropdown-list{position:absolute;padding-top:14px;width:100%;z-index:99999}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list ul li{padding:10px;cursor:pointer;text-align:left}.dropdown-list ul li:first-child{padding-top:10px}.dropdown-list ul li:last-child{padding-bottom:10px}.dropdown-list ::-webkit-scrollbar{width:8px}.dropdown-list ::-webkit-scrollbar-thumb{background:#ccc;border-radius:5px}.dropdown-list ::-webkit-scrollbar-track{background:#f2f2f2}.arrow-down,.arrow-up{width:0;height:0;border-left:13px solid transparent;border-right:13px solid transparent;border-bottom:15px solid #fff;margin-left:15px;position:absolute;top:0}.arrow-down{bottom:-14px;top:unset;transform:rotate(180deg)}.arrow-2{border-bottom:15px solid #ccc;top:-1px}.arrow-down.arrow-2{top:unset;bottom:-16px}.list-area{border:1px solid #ccc;border-radius:3px;background:#fff;margin:0}.select-all{padding:10px;text-align:left}.list-filter,.select-all{border-bottom:1px solid #ccc}.list-filter{position:relative;padding-left:35px;height:35px}.list-filter input{border:0;width:100%;height:100%;padding:0}.list-filter input:focus{outline:none}.list-filter .c-search{position:absolute;top:4px;left:10px;width:15px;height:15px}.list-filter .c-search svg{fill:#888}.list-filter .c-clear{position:absolute;top:4px;right:10px;width:15px;height:15px}.list-filter .c-clear svg{fill:#888}.pure-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.pure-checkbox input[type=checkbox]:focus+label:before,.pure-checkbox input[type=checkbox]:hover+label:before{background-color:none}.pure-checkbox input[type=checkbox]:active+label:before{transition-duration:0s}.pure-checkbox input[type=checkbox]:disabled+label{color:#ccc}.pure-checkbox input[type=checkbox]+label{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;user-select:none;cursor:pointer;margin:0;font-weight:300}.pure-checkbox input[type=checkbox]+label:before{box-sizing:initial;content:\\\"\\\";position:absolute;top:50%;left:0;width:15px;height:15px;margin-top:-9px;text-align:center;transition:all .4s ease;border-radius:3px}.pure-checkbox input[type=checkbox]+label:after{box-sizing:initial;content:\\\"\\\";position:absolute;left:0;width:15px;height:15px;margin-top:-9px;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out}.pure-checkbox input[type=checkbox]:disabled+label:before{border-color:#ccc}.pure-checkbox input[type=checkbox]:disabled:focus+label:before .pure-checkbox input[type=checkbox]:disabled:hover+label:before{background-color:inherit}.pure-checkbox input[type=checkbox]:disabled:checked+label:before{background-color:#ccc}.pure-checkbox input[type=checkbox]+label:after{background-color:initial;top:50%;left:3px;width:9px;height:4px;margin-top:-5px;border-style:solid;border-width:0 0 2px 2px;border-image:none;transform:rotate(-45deg) scale(0)}.pure-checkbox input[type=checkbox]:checked+label:after{content:\\\"\\\";transition:transform .2s ease-out}.pure-checkbox input[type=radio]:checked+label:before{background-color:#fff}.pure-checkbox input[type=radio]:checked+label:after{transform:scale(1)}.pure-checkbox input[type=radio]+label:before{border-radius:50%}.pure-checkbox input[type=checkbox]:checked+label:after{transform:rotate(-45deg) scale(1)}.list-message{text-align:center;margin:0;padding:15px 0;font-size:medium}.list-grp{padding:0 15px!important}.list-grp h4{text-transform:capitalize;margin:15px 0 0;font-size:14px;font-weight:700}.list-grp>li{padding-left:15px!important}.grp-item{padding-left:30px!important}.grp-title{padding-bottom:0!important}.grp-title label{margin-bottom:0!important;font-weight:800;text-transform:capitalize}.grp-title:hover{background:none!important}.loading-icon{width:20px;position:absolute;right:10px;top:23px;z-index:1}.nodata-label{width:100%;text-align:center;padding:10px 0 0}.btn-container{text-align:center;padding:5px}.clear-all{width:8px;position:absolute;top:50%;right:30px;transform:translateY(-50%)}\"], encapsulation: 2 });\nAngularMultiSelect.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ListFilterPipe }\n];\nAngularMultiSelect.propDecorators = {\n    data: [{ type: Input }],\n    settings: [{ type: Input }],\n    loading: [{ type: Input }],\n    onSelect: [{ type: Output, args: ['onSelect',] }],\n    onDeSelect: [{ type: Output, args: ['onDeSelect',] }],\n    onSelectAll: [{ type: Output, args: ['onSelectAll',] }],\n    onDeSelectAll: [{ type: Output, args: ['onDeSelectAll',] }],\n    onOpen: [{ type: Output, args: ['onOpen',] }],\n    onClose: [{ type: Output, args: ['onClose',] }],\n    onScrollToEnd: [{ type: Output, args: ['onScrollToEnd',] }],\n    onFilterSelectAll: [{ type: Output, args: ['onFilterSelectAll',] }],\n    onFilterDeSelectAll: [{ type: Output, args: ['onFilterDeSelectAll',] }],\n    onAddFilterNewItem: [{ type: Output, args: ['onAddFilterNewItem',] }],\n    onGroupSelect: [{ type: Output, args: ['onGroupSelect',] }],\n    onGroupDeSelect: [{ type: Output, args: ['onGroupDeSelect',] }],\n    itemTempl: [{ type: ContentChild, args: [Item, { static: false },] }],\n    badgeTempl: [{ type: ContentChild, args: [Badge, { static: false },] }],\n    searchTempl: [{ type: ContentChild, args: [Search, { static: false },] }],\n    searchInput: [{ type: ViewChild, args: ['searchInput', { static: false },] }],\n    selectedListElem: [{ type: ViewChild, args: ['selectedList', { static: false },] }],\n    dropdownListElem: [{ type: ViewChild, args: ['dropdownList', { static: false },] }],\n    cuppaDropdown: [{ type: ViewChild, args: ['cuppaDropdown', { static: false },] }],\n    onEscapeDown: [{ type: HostListener, args: ['document:keyup.escape', ['$event'],] }],\n    onScroll: [{ type: HostListener, args: ['window:scroll', ['$event'],] }],\n    virtualScroller: [{ type: ViewChild, args: [VirtualScrollerComponent, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularMultiSelect, [{\n        type: Component,\n        args: [{ selector: 'angular2-multiselect', template: \"<div class=\\\"cuppa-dropdown\\\" (clickOutside)=\\\"closeDropdownOnClickOut()\\\" #cuppaDropdown>\\n    <div class=\\\"selected-list\\\" #selectedList>\\n        <div class=\\\"c-btn\\\" (click)=\\\"toggleDropdown($event)\\\" [ngClass]=\\\"{'disabled': settings.disabled}\\\" [attr.tabindex]=\\\"0\\\">\\n\\n            <span *ngIf=\\\"selectedItems?.length == 0\\\">{{settings.text}}</span>\\n            <span *ngIf=\\\"settings.singleSelection && !badgeTempl\\\">\\n                <span *ngFor=\\\"let item of selectedItems;trackBy: trackByFn.bind(this);let k = index\\\">\\n                    {{item[settings.labelKey]}}\\n                </span>\\n            </span>\\n            <span class=\\\"c-list\\\" *ngIf=\\\"selectedItems?.length > 0 && settings.singleSelection && badgeTempl \\\">\\n                <div class=\\\"c-token\\\" *ngFor=\\\"let item of selectedItems;trackBy: trackByFn.bind(this);let k = index\\\">\\n                    <span *ngIf=\\\"!badgeTempl\\\" class=\\\"c-label\\\">{{item[settings.labelKey]}}</span>\\n\\n                    <span *ngIf=\\\"badgeTempl\\\" class=\\\"c-label\\\">\\n                        <c-templateRenderer [data]=\\\"badgeTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n                    </span>\\n                    <span class=\\\"c-remove\\\" (click)=\\\"onItemClick(item,k,$event);$event.stopPropagation()\\\">\\n                        <c-icon [name]=\\\"'remove'\\\"></c-icon>\\n                    </span>\\n                </div>\\n            </span>\\n            <div class=\\\"c-list\\\" *ngIf=\\\"selectedItems?.length > 0 && !settings.singleSelection\\\">\\n                <div class=\\\"c-token\\\" *ngFor=\\\"let item of selectedItems;trackBy: trackByFn.bind(this);let k = index\\\" [hidden]=\\\"k > settings.badgeShowLimit-1\\\">\\n                    <span *ngIf=\\\"!badgeTempl\\\" class=\\\"c-label\\\">{{item[settings.labelKey]}}</span>\\n                    <span *ngIf=\\\"badgeTempl\\\" class=\\\"c-label\\\">\\n                        <c-templateRenderer [data]=\\\"badgeTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n                    </span>\\n                    <span class=\\\"c-remove\\\" (click)=\\\"onItemClick(item,k,$event);$event.stopPropagation()\\\">\\n                        <c-icon [name]=\\\"'remove'\\\"></c-icon>\\n                    </span>\\n                </div>\\n            </div>\\n            <span class=\\\"countplaceholder\\\" *ngIf=\\\"selectedItems?.length > settings.badgeShowLimit\\\">+{{selectedItems?.length - settings.badgeShowLimit }}</span>\\n            <span class=\\\"c-remove clear-all\\\" *ngIf=\\\"settings.clearAll && selectedItems?.length > 0 && !settings.disabled\\\" (click)=\\\"clearSelection($event);$event.stopPropagation()\\\">\\n                <c-icon [name]=\\\"'remove'\\\"></c-icon>\\n            </span>\\n            <span *ngIf=\\\"!isActive\\\" class=\\\"c-angle-down\\\">\\n                <c-icon [name]=\\\"'angle-down'\\\"></c-icon>\\n            </span>\\n            <span *ngIf=\\\"isActive\\\" class=\\\"c-angle-up\\\">\\n                <c-icon [name]=\\\"'angle-up'\\\"></c-icon>\\n\\n            </span>\\n        </div>\\n    </div>\\n    <div #dropdownList class=\\\"dropdown-list animated fadeIn\\\" \\n    [ngClass]=\\\"{'tagToBody': settings.tagToBody}\\\"\\n    [style.width.px]=\\\"dropDownWidth\\\" \\n    [style.top]=\\\"dropDownTop\\\" \\n    [style.bottom]=\\\"dropDownBottom\\\"\\n    [style.left.px]=\\\"dropDownLeft\\\" \\n        [hidden]=\\\"!isActive\\\">\\n        <div [ngClass]=\\\"{'arrow-up': settings.position == 'bottom', 'arrow-down': settings.position == 'top'}\\\" class=\\\"arrow-2\\\"></div>\\n        <div [ngClass]=\\\"{'arrow-up': settings.position == 'bottom', 'arrow-down': settings.position == 'top'}\\\"></div>\\n        <div class=\\\"list-area\\\" [ngClass]=\\\"{'single-select-mode': settings.singleSelection }\\\">\\n            <div class=\\\"pure-checkbox select-all\\\" *ngIf=\\\"settings.enableCheckAll && !settings.singleSelection && !settings.limitSelection && data?.length > 0 && !isDisabledItemPresent\\\"\\n                >\\n                <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelectAll\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length\\\"\\n                [id]=\\\"id\\\" (change)=\\\"toggleSelectAll($event)\\\"/>\\n                <label [for]=\\\"id\\\">\\n                    <span [hidden]=\\\"isSelectAll\\\">{{settings.selectAllText}}</span>\\n                    <span [hidden]=\\\"!isSelectAll\\\">{{settings.unSelectAllText}}</span>\\n                </label>\\n            </div>\\n            <img class=\\\"loading-icon\\\" *ngIf=\\\"loading\\\" src=\\\"assets/img/loading.gif\\\" />\\n            <div class=\\\"list-filter\\\" *ngIf=\\\"settings.enableSearchFilter\\\">\\n                <span class=\\\"c-search\\\" id=\\\"searchIcon\\\">\\n                    <c-icon [name]=\\\"'search'\\\"></c-icon>\\n                </span>\\n                <span *ngIf=\\\"!settings.lazyLoading\\\" [hidden]=\\\"filter == undefined || filter?.length == 0\\\" class=\\\"c-clear\\\" (click)=\\\"clearSearch()\\\">\\n                    <c-icon [name]=\\\"'clear'\\\"></c-icon>\\n                </span>\\n                <span *ngIf=\\\"settings.lazyLoading\\\" [hidden]=\\\"filter == undefined || filter?.length == 0\\\" class=\\\"c-clear\\\" (click)=\\\"resetInfiniteSearch()\\\">\\n                    <c-icon [name]=\\\"'clear'\\\"></c-icon>\\n                </span>\\n\\n                <input class=\\\"c-input\\\" *ngIf=\\\"settings.groupBy && !settings.lazyLoading && !searchTempl\\\" #searchInput type=\\\"text\\\" [placeholder]=\\\"settings.searchPlaceholderText\\\"\\n                    [(ngModel)]=\\\"filter\\\" (keyup)=\\\"filterGroupedList()\\\" aria-labelledby=\\\"searchIcon\\\">\\n                <input class=\\\"c-input\\\" *ngIf=\\\"!settings.groupBy && !settings.lazyLoading && !searchTempl\\\" #searchInput type=\\\"text\\\" [placeholder]=\\\"settings.searchPlaceholderText\\\"\\n                    [(ngModel)]=\\\"filter\\\" (keyup)=\\\"filteritems($event)\\\" aria-labelledby=\\\"searchIcon\\\">\\n                <input class=\\\"c-input\\\" *ngIf=\\\"settings.lazyLoading && !searchTempl\\\" #searchInput type=\\\"text\\\" [placeholder]=\\\"settings.searchPlaceholderText\\\"\\n                    [(ngModel)]=\\\"filter\\\" (keyup)=\\\"onKeyUp($event)\\\" aria-labelledby=\\\"searchIcon\\\">\\n                <!--            <input class=\\\"c-input\\\" *ngIf=\\\"!settings.lazyLoading && !searchTempl && settings.groupBy\\\" #searchInput type=\\\"text\\\" [placeholder]=\\\"settings.searchPlaceholderText\\\"\\n                [(ngModel)]=\\\"filter\\\" (keyup)=\\\"filterGroupList($event)\\\">-->\\n                <c-templateRenderer *ngIf=\\\"searchTempl\\\" [data]=\\\"searchTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n            </div>\\n            <div class=\\\"filter-select-all\\\" *ngIf=\\\"!settings.lazyLoading && settings.enableFilterSelectAll && !isDisabledItemPresent\\\">\\n                <div class=\\\"pure-checkbox select-all\\\" *ngIf=\\\"!settings.groupBy && filter?.length > 0 && filterLength > 0  && !settings.singleSelection\\\" (click)=\\\"toggleFilterSelectAll()\\\">\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"isFilterSelectAll\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length\\\" aria-labelledby=\\\"optionName\\\"\\n                    aria-label=\\\"option\\\"/>\\n                    <label>\\n                        <span [hidden]=\\\"isFilterSelectAll\\\">{{settings.filterSelectAllText}}</span>\\n                        <span [hidden]=\\\"!isFilterSelectAll\\\">{{settings.filterUnSelectAllText}}</span>\\n                    </label>\\n                </div>\\n                <div class=\\\"pure-checkbox select-all\\\" *ngIf=\\\"settings.groupBy && filter?.length > 0 && groupedData?.length > 0  && !settings.singleSelection\\\" (click)=\\\"toggleFilterSelectAll()\\\">\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"isFilterSelectAll && filter?.length > 0\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length\\\"\\n                    aria-labelledby=\\\"option\\\"/>\\n                    <label>\\n                        <span [hidden]=\\\"isFilterSelectAll\\\">{{settings.filterSelectAllText}}</span>\\n                        <span [hidden]=\\\"!isFilterSelectAll\\\">{{settings.filterUnSelectAllText}}</span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"filter-select-all\\\" *ngIf=\\\"settings.lazyLoading && settings.enableFilterSelectAll && !isDisabledItemPresent && !settings.singleSelection\\\">\\n                <div class=\\\"pure-checkbox select-all\\\" *ngIf=\\\"filter?.length > 0 && infiniteFilterLength > 0\\\" (click)=\\\"toggleInfiniteFilterSelectAll()\\\">\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"isInfiniteFilterSelectAll\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length\\\"\\n                    aria-labelledby=\\\"option\\\"/>\\n                    <label>\\n                        <span [hidden]=\\\"isInfiniteFilterSelectAll\\\">{{settings.filterSelectAllText}}</span>\\n                        <span [hidden]=\\\"!isInfiniteFilterSelectAll\\\">{{settings.filterUnSelectAllText}}</span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"filter-select-all\\\" *ngIf=\\\"filter?.length\\\">\\n                <div class=\\\"btn-container\\\" *ngIf=\\\"settings.addNewItemOnFilter\\\">\\n                    <button class=\\\"c-btn btn-iceblue\\\" (click)=\\\"addFilterNewItem()\\\">{{settings.addNewButtonText}}</button>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"!settings.groupBy && !settings.lazyLoading && itemTempl == undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul class=\\\"lazyContainer\\\">\\n                    <li *ngFor=\\\"let item of data; let i = index;\\\" (click)=\\\"onItemClick(item,i,$event)\\\"\\n                        class=\\\"pure-checkbox\\\" [ngClass]=\\\"{'selected-item': isSelected(item) == true }\\\">\\n                        <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                        aria-labelledby=\\\"option\\\"/>\\n                        <label>{{item[settings.labelKey]}}</label>\\n                    </li>\\n                </ul>\\n            </div>\\n            <!-- lazy loading -->\\n            <div *ngIf=\\\"!settings.groupBy && settings.lazyLoading && itemTempl == undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul virtualScroller #scroll [enableUnequalChildrenSizes]=\\\"randomSize\\\" [items]=\\\"virtualdata\\\" (vsStart)=\\\"onScrollEnd($event)\\\"\\n                    (vsEnd)=\\\"onScrollEnd($event)\\\" [ngStyle]=\\\"{'height': settings.maxHeight+'px'}\\\" class=\\\"lazyContainer\\\">\\n                    <li *ngFor=\\\"let item of scroll.viewPortItems; let i = index;\\\" (click)=\\\"onItemClick(item,i,$event)\\\" class=\\\"pure-checkbox\\\"\\n                        [ngClass]=\\\"{'selected-item': isSelected(item) == true }\\\">\\n                        <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                        />\\n                        <label>{{item[settings.labelKey]}}</label>\\n                    </li>\\n                </ul>\\n            </div>\\n            <!-- custom template -->\\n            <div *ngIf=\\\"!settings.groupBy && !settings.lazyLoading && itemTempl != undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul class=\\\"lazyContainer\\\">\\n                    <li *ngFor=\\\"let item of data; let i = index;\\\" (click)=\\\"onItemClick(item,i,$event)\\\"\\n                        class=\\\"pure-checkbox\\\" [ngClass]=\\\"{'selected-item': isSelected(item) == true }\\\">\\n                        <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                        />\\n                        <label></label>\\n                        <c-templateRenderer [data]=\\\"itemTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n                    </li>\\n                </ul>\\n            </div>\\n            <!-- lazy loading and custom template -->\\n            <div *ngIf=\\\"!settings.groupBy && settings.lazyLoading && itemTempl != undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul virtualScroller #scroll2 [enableUnequalChildrenSizes]=\\\"randomSize\\\" [items]=\\\"virtualdata\\\" (vsStart)=\\\"onScrollEnd($event)\\\"\\n                    (vsEnd)=\\\"onScrollEnd($event)\\\" class=\\\"lazyContainer\\\" [ngStyle]=\\\"{'height': settings.maxHeight+'px'}\\\">\\n                    <li *ngFor=\\\"let item of scroll2.viewPortItems; let i = index;\\\" (click)=\\\"onItemClick(item,i,$event)\\\" class=\\\"pure-checkbox\\\"\\n                        [ngClass]=\\\"{'selected-item': isSelected(item) == true }\\\">\\n                        <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                        />\\n                        <label></label>\\n                        <c-templateRenderer [data]=\\\"itemTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n                    </li>\\n                </ul>\\n            </div>\\n            <!-- lazy loading, group By and custom template -->\\n            <div *ngIf=\\\"settings.groupBy && settings.lazyLoading && itemTempl != undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul virtualScroller #scroll3 [enableUnequalChildrenSizes]=\\\"randomSize\\\" [items]=\\\"virtualdata\\\" (vsStart)=\\\"onScrollEnd($event)\\\"\\n                    (vsEnd)=\\\"onScrollEnd($event)\\\" [ngStyle]=\\\"{'height': settings.maxHeight+'px'}\\\" class=\\\"lazyContainer\\\">\\n                    <span *ngFor=\\\"let item of scroll3.viewPortItems; let i = index;\\\">\\n                        <li (click)=\\\"onItemClick(item,i,$event)\\\" *ngIf=\\\"!item.grpTitle\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle && !settings.singleSelection}\\\"\\n                            class=\\\"pure-checkbox\\\">\\n                            <input *ngIf=\\\"settings.showCheckbox && !settings.singleSelection\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                            />\\n                            <label></label>\\n                            <c-templateRenderer [data]=\\\"itemTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n                        </li>\\n                        <li *ngIf=\\\"item.grpTitle\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle && !settings.singleSelection}\\\"\\n                            class=\\\"pure-checkbox\\\">\\n                            <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                            />\\n                            <label></label>\\n                            <c-templateRenderer [data]=\\\"itemTempl\\\" [item]=\\\"item\\\"></c-templateRenderer>\\n                        </li>\\n                    </span>\\n                </ul>\\n            </div>\\n            <!-- group By and custom template -->\\n            <div *ngIf=\\\"settings.groupBy && !settings.lazyLoading && itemTempl != undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul class=\\\"lazyContainer\\\">\\n                    <span *ngFor=\\\"let item of groupedData; let i = index;\\\">\\n                        <li (click)=\\\"selectGroup(item)\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle && !settings.singleSelection}\\\"\\n                            class=\\\"pure-checkbox\\\">\\n                            <input *ngIf=\\\"settings.showCheckbox && !settings.singleSelection\\\" type=\\\"checkbox\\\" [checked]=\\\"item.selected\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                            />\\n                            <label>{{item[settings.labelKey]}}</label>\\n                            <ul class=\\\"lazyContainer\\\">\\n                                <span *ngFor=\\\"let val of item.list ; let j = index;\\\">\\n                                    <li (click)=\\\"onItemClick(val,j,$event); $event.stopPropagation()\\\" [ngClass]=\\\"{'grp-title': val.grpTitle,'grp-item': !val.grpTitle && !settings.singleSelection}\\\"\\n                                        class=\\\"pure-checkbox\\\">\\n                                        <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(val)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(val)) || val.disabled\\\"\\n                                        />\\n                                        <label></label>\\n                                        <c-templateRenderer [data]=\\\"itemTempl\\\" [item]=\\\"val\\\"></c-templateRenderer>\\n                                    </li>\\n                                </span>\\n                            </ul>\\n\\n                        </li>\\n                    </span>\\n                </ul>\\n            </div>\\n            <!-- lazy loading, group By -->\\n            <div *ngIf=\\\"settings.groupBy && settings.lazyLoading && itemTempl == undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <virtual-scroller [items]=\\\"groupedData\\\" (vsUpdate)=\\\"viewPortItems = $event\\\" (vsEnd)=\\\"onScrollEnd($event)\\\" [ngStyle]=\\\"{'height': settings.maxHeight+'px'}\\\">\\n                    <ul virtualScroller #scroll4 [enableUnequalChildrenSizes]=\\\"randomSize\\\" [items]=\\\"virtualdata\\\" (vsStart)=\\\"onScrollEnd($event)\\\"\\n                        (vsEnd)=\\\"onScrollEnd($event)\\\" [ngStyle]=\\\"{'height': settings.maxHeight+'px'}\\\" class=\\\"lazyContainer\\\">\\n                        <span *ngFor=\\\"let item of scroll4.viewPortItems; let i = index;\\\">\\n                            <li *ngIf=\\\"item.grpTitle\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle && !settings.singleSelection, 'selected-item': isSelected(item) == true }\\\"\\n                                class=\\\"pure-checkbox\\\">\\n                                <input *ngIf=\\\"settings.showCheckbox && !item.grpTitle && !settings.singleSelection\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\"\\n                                    [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                                />\\n                                <label>{{item[settings.labelKey]}}</label>\\n                            </li>\\n                            <li (click)=\\\"onItemClick(item,i,$event)\\\" *ngIf=\\\"!item.grpTitle\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle && !settings.singleSelection, 'selected-item': isSelected(item) == true }\\\"\\n                                class=\\\"pure-checkbox\\\">\\n                                <input *ngIf=\\\"settings.showCheckbox && !item.grpTitle\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                                />\\n                                <label>{{item[settings.labelKey]}}</label>\\n                            </li>\\n                        </span>\\n                    </ul>\\n                </virtual-scroller>\\n            </div>\\n            <!-- group By -->\\n            <div *ngIf=\\\"settings.groupBy && !settings.lazyLoading && itemTempl == undefined\\\" [style.maxHeight]=\\\"settings.maxHeight+'px'\\\"\\n                style=\\\"overflow: auto;\\\">\\n                <ul class=\\\"lazyContainer\\\">\\n                    <span *ngFor=\\\"let item of groupedData ; let i = index;\\\">\\n                        <li (click)=\\\"selectGroup(item)\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle && !settings.singleSelection}\\\"\\n                            class=\\\"pure-checkbox\\\">\\n                            <input *ngIf=\\\"settings.showCheckbox && !settings.singleSelection\\\" type=\\\"checkbox\\\" [checked]=\\\"item.selected\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(item)) || item.disabled\\\"\\n                            />\\n                            <label>{{item[settings.labelKey]}}</label>\\n                            <ul class=\\\"lazyContainer\\\">\\n                                <span *ngFor=\\\"let val of item.list ; let j = index;\\\">\\n                                    <li (click)=\\\"onItemClick(val,j,$event); $event.stopPropagation()\\\" [ngClass]=\\\"{'selected-item': isSelected(val) == true,'grp-title': val.grpTitle,'grp-item': !val.grpTitle && !settings.singleSelection}\\\"\\n                                        class=\\\"pure-checkbox\\\">\\n                                        <input *ngIf=\\\"settings.showCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(val)\\\" [disabled]=\\\"(settings.limitSelection == selectedItems?.length && !isSelected(val)) || val.disabled\\\"\\n                                        />\\n                                        <label>{{val[settings.labelKey]}}</label>\\n                                    </li>\\n                                </span>\\n                            </ul>\\n                        </li>\\n                    </span>\\n                    <!-- <span *ngFor=\\\"let item of groupedData ; let i = index;\\\">\\n                    <li (click)=\\\"onItemClick(item,i,$event)\\\" *ngIf=\\\"!item.grpTitle\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle}\\\" class=\\\"pure-checkbox\\\">\\n                    <input *ngIf=\\\"settings.showCheckbox && !item.grpTitle\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length && !isSelected(item)\\\"\\n                    />\\n                    <label>{{item[settings.labelKey]}}</label>\\n                </li>\\n                <li *ngIf=\\\"item.grpTitle && !settings.selectGroup\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle}\\\" class=\\\"pure-checkbox\\\">\\n                    <input *ngIf=\\\"settings.showCheckbox && settings.selectGroup\\\" type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length && !isSelected(item)\\\"\\n                    />\\n                    <label>{{item[settings.labelKey]}}</label>\\n                </li>\\n                 <li  (click)=\\\"selectGroup(item)\\\" *ngIf=\\\"item.grpTitle && settings.selectGroup\\\" [ngClass]=\\\"{'grp-title': item.grpTitle,'grp-item': !item.grpTitle}\\\" class=\\\"pure-checkbox\\\">\\n                    <input *ngIf=\\\"settings.showCheckbox && settings.selectGroup\\\" type=\\\"checkbox\\\" [checked]=\\\"item.selected\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length && !isSelected(item)\\\"\\n                    />\\n                    <label>{{item[settings.labelKey]}}</label>\\n                </li>\\n                </span> -->\\n                </ul>\\n            </div>\\n            <h5 class=\\\"list-message\\\" *ngIf=\\\"data?.length == 0\\\">{{settings.noDataLabel}}</h5>\\n        </div>\\n    </div>\\n</div>\", host: { '[class]': 'defaultSettings.classes' }, providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION], encapsulation: ViewEncapsulation.None, styles: [\"virtual-scroll{display:block;width:100%}.cuppa-dropdown{position:relative}.c-btn{display:inline-block;border-width:1px;line-height:1.25;border-radius:3px;font-size:.85rem;padding:5px 10px;cursor:pointer;align-items:center;min-height:38px}.c-btn.disabled{background:#ccc}.selected-list .c-list{float:left;padding:0;margin:0;width:calc(100% - 20px)}.selected-list .c-list .c-token{list-style:none;border-radius:2px;margin-right:4px;margin-top:2px;float:left;position:relative;padding:4px 22px 4px 8px}.selected-list .c-list .c-token .c-label{display:block;float:left}.selected-list .c-list .c-token .c-remove{position:absolute;right:8px;top:50%;transform:translateY(-50%);width:8px}.selected-list .c-list .c-token .c-remove svg{fill:#fff}.selected-list .fa-angle-down,.selected-list .fa-angle-up{font-size:15pt;position:absolute;right:10px;top:50%;transform:translateY(-50%)}.selected-list .c-angle-down,.selected-list .c-angle-up{width:12px;height:12px;position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none}.selected-list .c-angle-down svg,.selected-list .c-angle-up svg{fill:#333}.selected-list .countplaceholder{position:absolute;right:45px;top:50%;transform:translateY(-50%)}.selected-list .c-btn{width:100%;padding:5px 10px;cursor:pointer;display:flex;position:relative}.selected-list .c-btn .c-icon{position:absolute;right:5px;top:50%;transform:translateY(-50%)}.dropdown-list.tagToBody{position:fixed}.dropdown-list{position:absolute;padding-top:14px;width:100%;z-index:99999}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list ul li{padding:10px;cursor:pointer;text-align:left}.dropdown-list ul li:first-child{padding-top:10px}.dropdown-list ul li:last-child{padding-bottom:10px}.dropdown-list ::-webkit-scrollbar{width:8px}.dropdown-list ::-webkit-scrollbar-thumb{background:#ccc;border-radius:5px}.dropdown-list ::-webkit-scrollbar-track{background:#f2f2f2}.arrow-down,.arrow-up{width:0;height:0;border-left:13px solid transparent;border-right:13px solid transparent;border-bottom:15px solid #fff;margin-left:15px;position:absolute;top:0}.arrow-down{bottom:-14px;top:unset;transform:rotate(180deg)}.arrow-2{border-bottom:15px solid #ccc;top:-1px}.arrow-down.arrow-2{top:unset;bottom:-16px}.list-area{border:1px solid #ccc;border-radius:3px;background:#fff;margin:0}.select-all{padding:10px;text-align:left}.list-filter,.select-all{border-bottom:1px solid #ccc}.list-filter{position:relative;padding-left:35px;height:35px}.list-filter input{border:0;width:100%;height:100%;padding:0}.list-filter input:focus{outline:none}.list-filter .c-search{position:absolute;top:4px;left:10px;width:15px;height:15px}.list-filter .c-search svg{fill:#888}.list-filter .c-clear{position:absolute;top:4px;right:10px;width:15px;height:15px}.list-filter .c-clear svg{fill:#888}.pure-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.pure-checkbox input[type=checkbox]:focus+label:before,.pure-checkbox input[type=checkbox]:hover+label:before{background-color:none}.pure-checkbox input[type=checkbox]:active+label:before{transition-duration:0s}.pure-checkbox input[type=checkbox]:disabled+label{color:#ccc}.pure-checkbox input[type=checkbox]+label{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;user-select:none;cursor:pointer;margin:0;font-weight:300}.pure-checkbox input[type=checkbox]+label:before{box-sizing:initial;content:\\\"\\\";position:absolute;top:50%;left:0;width:15px;height:15px;margin-top:-9px;text-align:center;transition:all .4s ease;border-radius:3px}.pure-checkbox input[type=checkbox]+label:after{box-sizing:initial;content:\\\"\\\";position:absolute;left:0;width:15px;height:15px;margin-top:-9px;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out}.pure-checkbox input[type=checkbox]:disabled+label:before{border-color:#ccc}.pure-checkbox input[type=checkbox]:disabled:focus+label:before .pure-checkbox input[type=checkbox]:disabled:hover+label:before{background-color:inherit}.pure-checkbox input[type=checkbox]:disabled:checked+label:before{background-color:#ccc}.pure-checkbox input[type=checkbox]+label:after{background-color:initial;top:50%;left:3px;width:9px;height:4px;margin-top:-5px;border-style:solid;border-width:0 0 2px 2px;border-image:none;transform:rotate(-45deg) scale(0)}.pure-checkbox input[type=checkbox]:checked+label:after{content:\\\"\\\";transition:transform .2s ease-out}.pure-checkbox input[type=radio]:checked+label:before{background-color:#fff}.pure-checkbox input[type=radio]:checked+label:after{transform:scale(1)}.pure-checkbox input[type=radio]+label:before{border-radius:50%}.pure-checkbox input[type=checkbox]:checked+label:after{transform:rotate(-45deg) scale(1)}.list-message{text-align:center;margin:0;padding:15px 0;font-size:medium}.list-grp{padding:0 15px!important}.list-grp h4{text-transform:capitalize;margin:15px 0 0;font-size:14px;font-weight:700}.list-grp>li{padding-left:15px!important}.grp-item{padding-left:30px!important}.grp-title{padding-bottom:0!important}.grp-title label{margin-bottom:0!important;font-weight:800;text-transform:capitalize}.grp-title:hover{background:none!important}.loading-icon{width:20px;position:absolute;right:10px;top:23px;z-index:1}.nodata-label{width:100%;text-align:center;padding:10px 0 0}.btn-container{text-align:center;padding:5px}.clear-all{width:8px;position:absolute;top:50%;right:30px;transform:translateY(-50%)}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ListFilterPipe }]; }, { onSelect: [{\n            type: Output,\n            args: ['onSelect']\n        }], onDeSelect: [{\n            type: Output,\n            args: ['onDeSelect']\n        }], onSelectAll: [{\n            type: Output,\n            args: ['onSelectAll']\n        }], onDeSelectAll: [{\n            type: Output,\n            args: ['onDeSelectAll']\n        }], onOpen: [{\n            type: Output,\n            args: ['onOpen']\n        }], onClose: [{\n            type: Output,\n            args: ['onClose']\n        }], onScrollToEnd: [{\n            type: Output,\n            args: ['onScrollToEnd']\n        }], onFilterSelectAll: [{\n            type: Output,\n            args: ['onFilterSelectAll']\n        }], onFilterDeSelectAll: [{\n            type: Output,\n            args: ['onFilterDeSelectAll']\n        }], onAddFilterNewItem: [{\n            type: Output,\n            args: ['onAddFilterNewItem']\n        }], onGroupSelect: [{\n            type: Output,\n            args: ['onGroupSelect']\n        }], onGroupDeSelect: [{\n            type: Output,\n            args: ['onGroupDeSelect']\n        }], onEscapeDown: [{\n            type: HostListener,\n            args: ['document:keyup.escape', ['$event']]\n        }], onScroll: [{\n            type: HostListener,\n            args: ['window:scroll', ['$event']]\n        }], settings: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }], loading: [{\n            type: Input\n        }], itemTempl: [{\n            type: ContentChild,\n            args: [Item, { static: false }]\n        }], badgeTempl: [{\n            type: ContentChild,\n            args: [Badge, { static: false }]\n        }], searchTempl: [{\n            type: ContentChild,\n            args: [Search, { static: false }]\n        }], searchInput: [{\n            type: ViewChild,\n            args: ['searchInput', { static: false }]\n        }], selectedListElem: [{\n            type: ViewChild,\n            args: ['selectedList', { static: false }]\n        }], dropdownListElem: [{\n            type: ViewChild,\n            args: ['dropdownList', { static: false }]\n        }], cuppaDropdown: [{\n            type: ViewChild,\n            args: ['cuppaDropdown', { static: false }]\n        }], virtualScroller: [{\n            type: ViewChild,\n            args: [VirtualScrollerComponent, { static: false }]\n        }] }); })();\nclass AngularMultiSelectModule {\n}\nAngularMultiSelectModule.ɵfac = function AngularMultiSelectModule_Factory(t) { return new (t || AngularMultiSelectModule)(); };\nAngularMultiSelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularMultiSelectModule });\nAngularMultiSelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [DataService, ListFilterPipe], imports: [CommonModule, FormsModule, VirtualScrollerModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularMultiSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, FormsModule, VirtualScrollerModule],\n                declarations: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\n                exports: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\n                providers: [DataService, ListFilterPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularMultiSelectModule, { declarations: function () { return [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon]; }, imports: function () { return [CommonModule, FormsModule, VirtualScrollerModule]; }, exports: function () { return [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularMultiSelect, AngularMultiSelectModule, ClickOutsideDirective, Item, ListFilterPipe, TemplateRenderer, DROPDOWN_CONTROL_VALUE_ACCESSOR as ɵa, DROPDOWN_CONTROL_VALIDATION as ɵb, ScrollDirective as ɵc, styleDirective as ɵd, setPosition as ɵe, Badge as ɵf, Search as ɵg, CIcon as ɵh, VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY as ɵi, VirtualScrollerComponent as ɵj, VirtualScrollerModule as ɵk, DataService as ɵm };\n\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, Injectable, Directive, HostListener, Pipe, ViewContainerRef, ViewChild, ChangeDetectionStrategy, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, of, combineLatest, lastValueFrom } from 'rxjs';\nimport { takeUntil, filter, skip, distinctUntilChanged, debounceTime, map, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash-es';\nimport * as i1$1 from '@angular/platform-browser';\nimport * as i1$2 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport * as i1$3 from 'angular2-multiselect-dropdown';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { HttpParams } from '@angular/common/http';\n\nclass DataSource {\r\n    constructor() {\r\n        this.onChangedSource = new Subject();\r\n        this.onAddedSource = new Subject();\r\n        this.onUpdatedSource = new Subject();\r\n        this.onRemovedSource = new Subject();\r\n    }\r\n    refresh() {\r\n        this.emitOnChanged('refresh');\r\n    }\r\n    load(data) {\r\n        this.emitOnChanged('load');\r\n        return Promise.resolve();\r\n    }\r\n    onChanged() {\r\n        return this.onChangedSource.asObservable();\r\n    }\r\n    onAdded() {\r\n        return this.onAddedSource.asObservable();\r\n    }\r\n    onUpdated() {\r\n        return this.onUpdatedSource.asObservable();\r\n    }\r\n    onRemoved() {\r\n        return this.onRemovedSource.asObservable();\r\n    }\r\n    prepend(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('prepend');\r\n        return Promise.resolve();\r\n    }\r\n    append(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('append');\r\n        return Promise.resolve();\r\n    }\r\n    add(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('add');\r\n        return Promise.resolve();\r\n    }\r\n    remove(element) {\r\n        this.emitOnRemoved(element);\r\n        this.emitOnChanged('remove');\r\n        return Promise.resolve();\r\n    }\r\n    update(element, values) {\r\n        this.emitOnUpdated(element);\r\n        this.emitOnChanged('update');\r\n        return Promise.resolve();\r\n    }\r\n    empty() {\r\n        this.emitOnChanged('empty');\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, direction: asc|desc|null, compare?: Function|null},\r\n     * ]\r\n     * @param conf the configuration to add\r\n     * @param doEmit indicates whether a sort event shall be emitted\r\n     * @returns this data source\r\n     */\r\n    setSort(conf, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('sort');\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, direction: asc|desc|null, compare?: Function|null},\r\n     * ]\r\n     * @param conf the configuration to add\r\n     * @param doEmit indicates whether a sort event shall be emitted\r\n     * @returns this data source\r\n     */\r\n    updateSort(conf, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('sort');\r\n        }\r\n    }\r\n    setFilter(conf, andOperator, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('filter');\r\n        }\r\n    }\r\n    addFilter(fieldConf, andOperator, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('filter');\r\n        }\r\n    }\r\n    setPaging(page, perPage, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('paging');\r\n        }\r\n    }\r\n    setPage(page, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('page');\r\n        }\r\n    }\r\n    emitOnRemoved(element) {\r\n        this.onRemovedSource.next(element);\r\n    }\r\n    emitOnUpdated(element) {\r\n        this.onUpdatedSource.next(element);\r\n    }\r\n    emitOnAdded(element) {\r\n        this.onAddedSource.next(element);\r\n    }\r\n    emitOnChanged(action) {\r\n        this.getElements().then((elements) => this.onChangedSource.next({\r\n            action: action,\r\n            elements: elements,\r\n            paging: this.getPaging(),\r\n            filter: this.getFilter(),\r\n            sort: this.getSort(),\r\n        }));\r\n    }\r\n}\n\nfunction defaultObjectComparator(direction, left, right) {\r\n    if (left == null && right == null) {\r\n        return 0;\r\n    }\r\n    // only one of them can be null now\r\n    if (left == null || left < right) {\r\n        return -1 * direction;\r\n    }\r\n    if (right == null || right < left) {\r\n        return direction;\r\n    }\r\n    // none of them can be null now, and they must be equal\r\n    return 0;\r\n}\r\nfunction defaultNumberComparator(direction, left, right) {\r\n    // the default comparator already does what we want, so this function is merely a type-safe alias\r\n    return defaultObjectComparator(direction, left, right);\r\n}\r\nfunction defaultStringComparator(direction, left, right) {\r\n    if (left == null && right == null) {\r\n        return 0;\r\n    }\r\n    else if (left == null) {\r\n        return -1 * direction;\r\n    }\r\n    else if (right == null) {\r\n        return direction;\r\n    }\r\n    else {\r\n        return left.localeCompare(right) * direction;\r\n    }\r\n}\r\n/**\r\n * Compares two values with special treatment for numbers and strings.\r\n *\r\n * The rule is: if both values are of type number (or null), they are compared as if they were numbers.\r\n * If both values are either null, undefined or typeof string, they are compared as strings using the current locale.\r\n * Otherwise, they are compared using their natural ordering.\r\n *\r\n * Null values are considered less than any non-null element. Null and undefined are considered equal.\r\n *\r\n * @param direction 1 for ascending and -1 for descending (other values are not allowed)\r\n * @param left the left value\r\n * @param right the right value\r\n */\r\nfunction defaultComparator(direction, left, right) {\r\n    const leftIsNumeric = left == null || (!isNaN(parseFloat(left)) && !isNaN(left - 0));\r\n    const rightIsNumeric = right == null || (!isNaN(parseFloat(right)) && !isNaN(right - 0));\r\n    const leftIsString = left == null || (typeof left === 'string');\r\n    const rightIsString = right == null || (typeof right === 'string');\r\n    if (leftIsNumeric && rightIsNumeric) {\r\n        return defaultNumberComparator(direction, Number(left), Number(right));\r\n    }\r\n    else if (leftIsString && rightIsString) {\r\n        return defaultStringComparator(direction, left, right);\r\n    }\r\n    else {\r\n        return defaultObjectComparator(direction, left, right);\r\n    }\r\n}\n\n/**\r\n * A filter predicate that implements a case-insensitive string inclusion.\r\n *\r\n * @param cellValue the cell value to check\r\n * @param search the search/filter string to check against\r\n * @param data ignored\r\n * @param cellName ignored\r\n */\r\nfunction defaultStringInclusionFilter(cellValue, search, data, cellName) {\r\n    /* Implementation note: we declared the parameters as strings, but this does NOT mean they\r\n     * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\r\n     */\r\n    const sanitizedCellValue = cellValue?.toString() ?? '';\r\n    const sanitizedSearchString = search?.toString() ?? '';\r\n    return sanitizedCellValue.toLowerCase().includes(sanitizedSearchString.toLowerCase());\r\n}\r\n/**\r\n * A filter predicate that implements a case-sensitive equality check.\r\n *\r\n * @param cellValue the cell value to check\r\n * @param search the search/filter string to check against\r\n * @param data ignored\r\n * @param cellName ignored\r\n */\r\nfunction defaultStringEqualsFilter(cellValue, search, data, cellName) {\r\n    /* Implementation note: we declared the parameters as strings, but this does NOT mean they\r\n     * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\r\n     */\r\n    const sanitizedCellValue = cellValue?.toString() ?? '';\r\n    const sanitizedSearchString = search?.toString() ?? '';\r\n    return sanitizedCellValue === sanitizedSearchString;\r\n}\r\nclass LocalFilter {\r\n    static filter(data, filterConf) {\r\n        const filter = filterConf.filter ? filterConf.filter : defaultStringInclusionFilter;\r\n        return data.filter((el) => {\r\n            let parts = filterConf.field.split(\".\");\r\n            let prop = el;\r\n            for (let i = 0; i < parts.length && typeof prop !== 'undefined'; i++) {\r\n                prop = prop[parts[i]];\r\n            }\r\n            return filter.call(null, prop, filterConf.search, data, filterConf.field, el);\r\n        });\r\n    }\r\n}\n\nclass LocalPager {\r\n    static paginate(data, page, perPage) {\r\n        return data.slice(perPage * (page - 1), perPage * page);\r\n    }\r\n}\n\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nconst deepExtend = function (...objects) {\r\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n        return false;\r\n    }\r\n    if (arguments.length < 2) {\r\n        return arguments[0];\r\n    }\r\n    const target = arguments[0];\r\n    // convert arguments to array and cut off target object\r\n    const args = Array.prototype.slice.call(arguments, 1);\r\n    let val, src;\r\n    args.forEach((obj) => {\r\n        // skip argument if it is array or isn't object\r\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n            return;\r\n        }\r\n        Object.keys(obj).forEach(function (key) {\r\n            src = target[key]; // source value\r\n            val = obj[key]; // new value\r\n            // recursion prevention\r\n            if (val === target) {\r\n                return;\r\n                /**\r\n                 * if new value isn't object then just overwrite by new value\r\n                 * instead of extending.\r\n                 */\r\n            }\r\n            else if (typeof val !== 'object' || val === null) {\r\n                target[key] = val;\r\n                return;\r\n                // just clone arrays (and recursive clone objects inside)\r\n            }\r\n            else if (Array.isArray(val)) {\r\n                target[key] = cloneDeep(val);\r\n                return;\r\n                // overwrite by new value if source isn't object or array\r\n            }\r\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n                target[key] = deepExtend({}, val);\r\n                return;\r\n                // source value and new value is objects both, extending...\r\n            }\r\n            else {\r\n                target[key] = deepExtend(src, val);\r\n                return;\r\n            }\r\n        });\r\n    });\r\n    return target;\r\n};\r\nclass Deferred {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n}\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nfunction getDeepFromObject(object = {}, name, defaultValue) {\r\n    const keys = name.split('.');\r\n    // clone the object\r\n    let level = deepExtend({}, object);\r\n    keys.forEach((k) => {\r\n        if (typeof level !== 'undefined') {\r\n            level = level[k];\r\n        }\r\n    });\r\n    return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\nfunction getPageForRowIndex(index, perPage) {\r\n    // we need to add 1 to convert 0-based index to 1-based page number.\r\n    return Math.floor(index / perPage) + 1;\r\n}\n\nclass LocalDataSource extends DataSource {\r\n    constructor(data = []) {\r\n        super();\r\n        this.data = [];\r\n        this.filteredAndSorted = [];\r\n        this.sortConf = [];\r\n        this.filterConf = {\r\n            filters: [],\r\n            andOperator: true,\r\n        };\r\n        this.pagingConf = { page: 1, perPage: 10 };\r\n        this.selectedItems = [];\r\n        this.data = data;\r\n    }\r\n    load(data) {\r\n        this.data = data;\r\n        return super.load(data);\r\n    }\r\n    prepend(element) {\r\n        this.reset(true);\r\n        this.data.unshift(element);\r\n        return super.prepend(element);\r\n    }\r\n    append(element) {\r\n        this.reset(true);\r\n        this.data.push(element);\r\n        return super.append(element);\r\n    }\r\n    add(element) {\r\n        this.data.push(element);\r\n        return super.add(element);\r\n    }\r\n    remove(element) {\r\n        this.data = this.data.filter(el => el !== element);\r\n        return super.remove(element);\r\n    }\r\n    update(element, values) {\r\n        return new Promise((resolve, reject) => {\r\n            this.find(element).then((found) => {\r\n                found = deepExtend(found, values);\r\n                super.update(found, values).then(resolve).catch(reject);\r\n            }).catch(reject);\r\n        });\r\n    }\r\n    find(element) {\r\n        const found = this.data.find(el => el === element);\r\n        if (found) {\r\n            return Promise.resolve(found);\r\n        }\r\n        return Promise.reject(new Error('Element was not found in the dataset'));\r\n    }\r\n    getElements() {\r\n        const data = this.data.slice(0);\r\n        return Promise.resolve(this.prepareData(data));\r\n    }\r\n    getFilteredAndSorted() {\r\n        let data = this.data.slice(0);\r\n        this.prepareData(data); // this would return only the current page, but it sets filteredAndSorted array\r\n        return Promise.resolve(this.filteredAndSorted);\r\n    }\r\n    getAll() {\r\n        const data = this.data.slice(0);\r\n        return Promise.resolve(data);\r\n    }\r\n    reset(silent = false) {\r\n        if (silent) {\r\n            this.filterConf = {\r\n                filters: [],\r\n                andOperator: true,\r\n            };\r\n            this.sortConf = [];\r\n            this.pagingConf.page = 1;\r\n        }\r\n        else {\r\n            this.setFilter([], true, false);\r\n            this.setSort([], false);\r\n            this.setPage(1);\r\n        }\r\n    }\r\n    empty() {\r\n        this.data = [];\r\n        return super.empty();\r\n    }\r\n    count() {\r\n        return this.filteredAndSorted.length;\r\n    }\r\n    toggleItem(row, isSelected) {\r\n        if (isSelected)\r\n            this.selectedItems.push(row);\r\n        else\r\n            this.selectedItems = this.selectedItems.filter((i) => i !== row);\r\n    }\r\n    // TODO: actually there is no need that this is an async function, but changing the signature would be a breaking change\r\n    async selectAllItems(checked, onlyFiltered = false) {\r\n        if (checked) {\r\n            const itemsToSelect = onlyFiltered ? this.filteredAndSorted : this.data;\r\n            this.selectedItems = itemsToSelect.slice(0);\r\n        }\r\n        else\r\n            this.selectedItems = [];\r\n    }\r\n    isEveryElementSelected(onlyFiltered = false) {\r\n        const itemsToCheck = onlyFiltered ? this.filteredAndSorted : this.data;\r\n        if (onlyFiltered) {\r\n            // TODO: this is an ugly and costly O(n²) check, but currently we have no other choice....\r\n            if (itemsToCheck.length !== this.selectedItems.length)\r\n                return false;\r\n            for (const item of itemsToCheck) {\r\n                if (this.selectedItems.indexOf(itemsToCheck) < 0)\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return itemsToCheck.length === this.selectedItems.length;\r\n        }\r\n    }\r\n    getSelectedItems() {\r\n        return this.selectedItems;\r\n    }\r\n    setSort(conf, doEmit = true) {\r\n        this.sortConf = conf ?? [];\r\n        super.setSort(conf, doEmit);\r\n        return this;\r\n    }\r\n    updateSort(conf, doEmit = true) {\r\n        if (conf !== null) {\r\n            conf.forEach((fieldConf) => {\r\n                const found = this.sortConf.findIndex(c => c.field === fieldConf.field);\r\n                if (found >= 0) {\r\n                    if (fieldConf.compare === undefined) {\r\n                        // keep the previously configured compare function\r\n                        fieldConf.compare = this.sortConf[found].compare;\r\n                    }\r\n                    this.sortConf.splice(found, 1);\r\n                }\r\n                // push the updated config to the front of the array (highest sort priority)\r\n                this.sortConf = [fieldConf, ...this.sortConf];\r\n            });\r\n        }\r\n        super.setSort(conf, doEmit);\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, search: string, filter: Function|null},\r\n     * ]\r\n     * @param conf\r\n     * @param andOperator\r\n     * @param doEmit\r\n     * @returns {LocalDataSource}\r\n     */\r\n    setFilter(conf, andOperator = true, doEmit = true) {\r\n        if (conf && conf.length > 0) {\r\n            conf.forEach((fieldConf) => {\r\n                this.addFilter(fieldConf, andOperator, false);\r\n            });\r\n        }\r\n        else {\r\n            this.filterConf = {\r\n                filters: [],\r\n                andOperator: true,\r\n            };\r\n        }\r\n        this.filterConf.andOperator = andOperator;\r\n        this.pagingConf.page = 1;\r\n        super.setFilter(conf, andOperator, doEmit);\r\n        return this;\r\n    }\r\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\r\n        let found = false;\r\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\r\n            if (currentFieldConf.field === fieldConf.field) {\r\n                this.filterConf.filters[index] = fieldConf;\r\n                found = true;\r\n            }\r\n        });\r\n        if (!found) {\r\n            this.filterConf.filters.push(fieldConf);\r\n        }\r\n        this.filterConf.andOperator = andOperator;\r\n        super.addFilter(fieldConf, andOperator, doEmit);\r\n        return this;\r\n    }\r\n    setPaging(page, perPage, doEmit = true) {\r\n        this.pagingConf.page = page;\r\n        this.pagingConf.perPage = perPage;\r\n        super.setPaging(page, perPage, doEmit);\r\n        return this;\r\n    }\r\n    setPage(page, doEmit = true) {\r\n        this.pagingConf.page = page;\r\n        super.setPage(page, doEmit);\r\n        return this;\r\n    }\r\n    getSort() {\r\n        return this.sortConf;\r\n    }\r\n    getFilter() {\r\n        return this.filterConf;\r\n    }\r\n    getPaging() {\r\n        return this.pagingConf;\r\n    }\r\n    prepareData(data) {\r\n        data = this.filter(data);\r\n        data = this.sort(data);\r\n        this.filteredAndSorted = data.slice(0);\r\n        return this.paginate(data);\r\n    }\r\n    sort(data) {\r\n        // only use the part of the config where sorting is enabled\r\n        const sortConfig = this.sortConf.filter(c => c.direction !== null);\r\n        return data.sort((a, b) => {\r\n            for (const sc of sortConfig) {\r\n                const dir = (sc.direction === 'asc') ? 1 : -1;\r\n                const compare = sc.compare ? sc.compare : defaultComparator;\r\n                let parts = sc.field.split(\".\");\r\n                let propA = a;\r\n                for (let i = 0; i < parts.length && typeof propA !== 'undefined'; i++) {\r\n                    propA = propA[parts[i]];\r\n                }\r\n                let propB = b;\r\n                for (let i = 0; i < parts.length && typeof propB !== 'undefined'; i++) {\r\n                    propB = propB[parts[i]];\r\n                }\r\n                const result = compare.call(null, dir, propA, propB);\r\n                if (result !== 0)\r\n                    return result;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    // TODO: refactor?\r\n    filter(data) {\r\n        if (this.filterConf.filters) {\r\n            if (this.filterConf.andOperator) {\r\n                this.filterConf.filters.forEach(fieldConf => {\r\n                    if (fieldConf.search.length > 0) {\r\n                        data = LocalFilter.filter(data, fieldConf);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let mergedData = [];\r\n                this.filterConf.filters.forEach((fieldConf) => {\r\n                    if (fieldConf['search'].length > 0) {\r\n                        mergedData = mergedData.concat(LocalFilter.filter(data, fieldConf));\r\n                    }\r\n                });\r\n                // remove non unique items\r\n                data = mergedData.filter((elem, pos, arr) => {\r\n                    return arr.indexOf(elem) === pos;\r\n                });\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    paginate(data) {\r\n        return LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\r\n    }\r\n}\n\nfunction prepareValue(value) { return value; }\r\nclass Cell {\r\n    constructor(value, row, column, dataSet) {\r\n        this.value = value;\r\n        this.row = row;\r\n        this.column = column;\r\n        this.dataSet = dataSet;\r\n        this.newValue = '';\r\n        this.newValue = value;\r\n    }\r\n    getColumn() {\r\n        return this.column;\r\n    }\r\n    getRow() {\r\n        return this.row;\r\n    }\r\n    /**\r\n     * Gets the value (after post-processing with valuePrepareFunction).\r\n     */\r\n    getValue() {\r\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n        return prepare.call(null, this.value, this.row.getData(), this);\r\n    }\r\n    /**\r\n     * Returns the raw value that has not been post-processed by the valuePrepareFunction.\r\n     */\r\n    getRawValue() {\r\n        return this.value;\r\n    }\r\n    setValue(value) {\r\n        this.newValue = value;\r\n    }\r\n    getId() {\r\n        return this.getColumn().id;\r\n    }\r\n    getTitle() {\r\n        return this.getColumn().title;\r\n    }\r\n    isEditable() {\r\n        if (this.getRow().index === -1) {\r\n            return this.getColumn().isAddable ?? false;\r\n        }\r\n        else {\r\n            return this.getColumn().isEditable ?? false;\r\n        }\r\n    }\r\n    resetValue() {\r\n        this.newValue = this.getRawValue();\r\n    }\r\n}\r\nCell.PREPARE = prepareValue;\n\nclass Row {\r\n    constructor(index, data, _dataSet) {\r\n        this.index = index;\r\n        this.data = data;\r\n        this._dataSet = _dataSet;\r\n        this.isSelected = false;\r\n        this.isInEditing = false;\r\n        this.isExpanded = false;\r\n        this.cells = [];\r\n        this.process();\r\n    }\r\n    getCell(column) {\r\n        const theCell = this.cells.find(el => el.getColumn() === column);\r\n        if (!theCell)\r\n            throw new Error('There is no cell with such Column');\r\n        return theCell;\r\n    }\r\n    getCells() {\r\n        return this.cells;\r\n    }\r\n    getData() {\r\n        return this.data;\r\n    }\r\n    getIsSelected() {\r\n        return this.isSelected;\r\n    }\r\n    getIsExpanded() {\r\n        return this.isExpanded;\r\n    }\r\n    getNewData() {\r\n        const values = Object.assign({}, this.data);\r\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n        return values;\r\n    }\r\n    setData(data) {\r\n        this.data = data;\r\n        this.process();\r\n    }\r\n    process() {\r\n        this.cells = [];\r\n        this._dataSet.getColumns().forEach((column) => {\r\n            const cell = this.createCell(column);\r\n            this.cells.push(cell);\r\n        });\r\n    }\r\n    createCell(column) {\r\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\r\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n        return new Cell(value, this, column, this._dataSet);\r\n    }\r\n}\n\n/**\r\n * @deprecated just use 'single' or 'multi'\r\n */\r\nvar SelectModeOptions;\r\n(function (SelectModeOptions) {\r\n    SelectModeOptions[\"Single\"] = \"single\";\r\n    SelectModeOptions[\"Multi\"] = \"multi\";\r\n})(SelectModeOptions || (SelectModeOptions = {}));\r\nvar IColumnType;\r\n(function (IColumnType) {\r\n    IColumnType[\"Text\"] = \"text\";\r\n    IColumnType[\"Html\"] = \"html\";\r\n    IColumnType[\"Custom\"] = \"custom\";\r\n})(IColumnType || (IColumnType = {}));\n\nclass Column {\r\n    constructor(id, settings, dataSet) {\r\n        this.id = id;\r\n        this.settings = settings;\r\n        this.dataSet = dataSet;\r\n        this.title = '';\r\n        this.hide = false;\r\n        this.type = IColumnType.Text;\r\n        this.sanitizer = {};\r\n        this.classHeader = '';\r\n        this.classContent = '';\r\n        this.width = '';\r\n        this.isSortable = true;\r\n        this.isEditable = true;\r\n        this.isAddable = true;\r\n        this.isFilterable = false;\r\n        this.sortDirection = 'asc';\r\n        this.defaultSortDirection = undefined;\r\n        this.editor = { type: '', config: {}, component: null };\r\n        this.filter = { type: '', config: {}, component: null };\r\n        this.renderComponent = null;\r\n        this.process();\r\n    }\r\n    getOnComponentInitFunction() {\r\n        return this.onComponentInitFunction;\r\n    }\r\n    getCompareFunction() {\r\n        return this.compareFunction;\r\n    }\r\n    getValuePrepareFunction() {\r\n        return this.valuePrepareFunction;\r\n    }\r\n    getFilterFunction() {\r\n        return this.filterFunction;\r\n    }\r\n    getConfig() {\r\n        return this.editor && this.editor.config;\r\n    }\r\n    getFilterType() {\r\n        return this.filter && this.filter.type;\r\n    }\r\n    getFilterConfig() {\r\n        return this.filter && this.filter.config;\r\n    }\r\n    /**\r\n     * Retrieves a setting by name.\r\n     *\r\n     * @param key the current key name\r\n     * @param compatKeys key names for backwards compatibility\r\n     * @private\r\n     */\r\n    lookupSetting(key, compatKeys = []) {\r\n        if (typeof this.settings[key] === undefined) {\r\n            for (const k of compatKeys) {\r\n                if (typeof this.settings[k] !== undefined) {\r\n                    return this.settings[k];\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.settings[key];\r\n        }\r\n    }\r\n    process() {\r\n        // the pattern is \"X = lookup(key) ?? X\" - this keeps the default value in case the setting is undefined\r\n        this.placeholder = this.lookupSetting('placeholder');\r\n        this.sanitizer = this.lookupSetting('sanitizer') ?? {};\r\n        this.title = this.lookupSetting('title') ?? this.title;\r\n        this.classHeader = this.lookupSetting('classHeader', ['class']) ?? this.classHeader;\r\n        this.classContent = this.lookupSetting('classContent', ['class']) ?? this.classContent;\r\n        this.width = this.lookupSetting('width') ?? this.width;\r\n        this.hide = this.lookupSetting('hide') ?? this.hide;\r\n        this.type = this.lookupSetting('type') ?? this.determineType();\r\n        this.editor = this.lookupSetting('editor') ?? this.editor;\r\n        this.filter = this.lookupSetting('filter') ?? this.filter;\r\n        this.renderComponent = this.lookupSetting('renderComponent') ?? this.renderComponent;\r\n        this.isFilterable = this.filter !== undefined && !!this.filter;\r\n        this.isSortable = this.lookupSetting('isSortable', ['sort']) ?? this.isSortable;\r\n        this.isEditable = this.lookupSetting('isEditable', ['editable']) ?? this.isEditable;\r\n        this.isAddable = this.lookupSetting('isAddable') ?? this.isAddable;\r\n        this.defaultSortDirection = this.lookupSetting('sortDirection') ?? this.defaultSortDirection;\r\n        this.sortDirection = this.defaultSortDirection ?? this.sortDirection;\r\n        this.compareFunction = this.lookupSetting('compareFunction');\r\n        this.valuePrepareFunction = this.lookupSetting('valuePrepareFunction');\r\n        this.filterFunction = this.lookupSetting('filterFunction');\r\n        this.onComponentInitFunction = this.lookupSetting('onComponentInitFunction');\r\n    }\r\n    determineType() {\r\n        // TODO: determine type by data\r\n        return IColumnType.Text;\r\n    }\r\n}\n\nclass DataSet {\r\n    constructor(data = [], columnSettings) {\r\n        this.columnSettings = columnSettings;\r\n        this.data = [];\r\n        this.columns = [];\r\n        this.rows = [];\r\n        this.willSelect = '';\r\n        this.createColumns(columnSettings);\r\n        this.setData(data);\r\n        this.createNewRow();\r\n    }\r\n    setData(data, selectedRows = []) {\r\n        this.data = data.map((el, index) => {\r\n            const row = new Row(index, el, this);\r\n            row.isSelected = selectedRows.indexOf(el) > -1;\r\n            return row;\r\n        });\r\n        this.createRows();\r\n    }\r\n    getColumns() {\r\n        return this.columns;\r\n    }\r\n    getExpandedRow() {\r\n        if (!this.expandedRow) {\r\n            console.warn('Expanded row not found');\r\n            throw new Error('Expanded row not found');\r\n        }\r\n        return this.expandedRow;\r\n    }\r\n    getSelectedRow() {\r\n        if (!this.selectedRow) {\r\n            console.warn('Selected row not found');\r\n            throw new Error('Selected row not found');\r\n        }\r\n        return this.selectedRow;\r\n    }\r\n    getRows() {\r\n        return this.rows ?? [];\r\n    }\r\n    getFirstRow() {\r\n        return this.rows[0];\r\n    }\r\n    getLastRow() {\r\n        return this.rows[this.rows.length - 1];\r\n    }\r\n    findRowByData(data) {\r\n        const row = this.rows.find((row) => row.getData() === data);\r\n        if (!row) {\r\n            console.warn('Data row not found', data);\r\n            throw new Error('Row not found');\r\n        }\r\n        return row;\r\n    }\r\n    deselectAll() {\r\n        this.rows.forEach((row) => {\r\n            row.isSelected = false;\r\n        });\r\n        // we need to clear selectedRow field because no one row selected\r\n        this.selectedRow = undefined;\r\n    }\r\n    clearExpandAll() {\r\n        this.rows.forEach((row) => {\r\n            row.isExpanded = false;\r\n        });\r\n        // we need to clear selectedRow field because no one row selected\r\n        this.expandedRow = undefined;\r\n    }\r\n    selectRow(row) {\r\n        const previousIsSelected = row.isSelected;\r\n        this.deselectAll();\r\n        row.isSelected = !previousIsSelected;\r\n        this.selectedRow = row;\r\n    }\r\n    multipleSelectRow(row) {\r\n        row.isSelected = !row.isSelected;\r\n        this.selectedRow = row;\r\n    }\r\n    expandRow(row) {\r\n        const previousIsExpanded = row.isExpanded;\r\n        this.clearExpandAll();\r\n        if (row.index !== this.expandedRow?.index) {\r\n            this.expandedRow = undefined;\r\n        }\r\n        row.isExpanded = !previousIsExpanded;\r\n        this.expandedRow = row;\r\n        return this.expandedRow;\r\n    }\r\n    selectPreviousRow() {\r\n        if (this.rows.length > 0) {\r\n            let index = this.selectedRow ? this.selectedRow.index : 0;\r\n            if (index > this.rows.length - 1) {\r\n                index = this.rows.length - 1;\r\n            }\r\n            this.selectRow(this.rows[index]);\r\n            return this.getSelectedRow();\r\n        }\r\n        throw new Error('There are no rows inside the data table');\r\n    }\r\n    selectFirstRow() {\r\n        if (this.rows.length > 0) {\r\n            this.selectRow(this.rows[0]);\r\n            return this.getSelectedRow();\r\n        }\r\n        throw new Error('There are no rows inside the data table');\r\n    }\r\n    selectLastRow() {\r\n        if (this.rows.length > 0) {\r\n            this.selectRow(this.rows[this.rows.length - 1]);\r\n            return this.getSelectedRow();\r\n        }\r\n        throw new Error('There are no rows inside the data table');\r\n    }\r\n    selectRowByIndex(index) {\r\n        const rowsLength = this.rows.length;\r\n        if (rowsLength === 0) {\r\n            throw new Error('There are no rows inside the data table');\r\n        }\r\n        if (!index) {\r\n            this.selectFirstRow();\r\n        }\r\n        else if (index > 0 && index < rowsLength) {\r\n            this.selectRow(this.rows[index]);\r\n        }\r\n        else\r\n            // we need to deselect all rows if we got an incorrect index\r\n            this.deselectAll();\r\n    }\r\n    willSelectFirstRow() {\r\n        this.willSelect = 'first';\r\n    }\r\n    willSelectLastRow() {\r\n        this.willSelect = 'last';\r\n    }\r\n    select(selectedRowIndex) {\r\n        if (this.getRows().length === 0) {\r\n            throw new Error('There are no rows inside the data table');\r\n        }\r\n        if (this.willSelect) {\r\n            if (this.willSelect === 'first') {\r\n                this.selectFirstRow();\r\n            }\r\n            if (this.willSelect === 'last') {\r\n                this.selectLastRow();\r\n            }\r\n            this.willSelect = '';\r\n        }\r\n        else {\r\n            this.selectRowByIndex(selectedRowIndex);\r\n        }\r\n        return this.getSelectedRow();\r\n    }\r\n    createNewRow() {\r\n        this.newRow = new Row(-1, {}, this);\r\n        this.newRow.isInEditing = true;\r\n    }\r\n    /**\r\n     * Create columns by mapping from the settings\r\n     * @param settings\r\n     * @private\r\n     */\r\n    createColumns(settings) {\r\n        for (const id in settings) {\r\n            if (settings.hasOwnProperty(id)) {\r\n                this.columns.push(new Column(id, settings[id], this));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Create rows based on current data prepared in data source\r\n     * @private\r\n     */\r\n    createRows() {\r\n        this.rows = [];\r\n        this.data.forEach((el) => {\r\n            this.rows.push(el);\r\n        });\r\n    }\r\n}\n\nclass Grid {\r\n    constructor(source, settings) {\r\n        this.createFormShown = false;\r\n        this.onSelectRowSource = new Subject();\r\n        this.setSettings(settings);\r\n        this.setSource(source);\r\n    }\r\n    detach() {\r\n        if (this.sourceOnChangedSubscription) {\r\n            this.sourceOnChangedSubscription.unsubscribe();\r\n        }\r\n        if (this.sourceOnUpdatedSubscription) {\r\n            this.sourceOnUpdatedSubscription.unsubscribe();\r\n        }\r\n    }\r\n    showActionColumn(position) {\r\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n    }\r\n    isCurrentActionsPosition(position) {\r\n        return position == this.getSetting('actions.position');\r\n    }\r\n    isActionsVisible() {\r\n        return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n    }\r\n    isMultiSelectVisible() {\r\n        return ['multi', 'multi_filtered'].indexOf(this.getSetting('selectMode')) > -1;\r\n    }\r\n    getNewRow() {\r\n        return this.dataSet.newRow;\r\n    }\r\n    setSettings(settings) {\r\n        this.settings = settings;\r\n        this.dataSet = new DataSet([], this.getSetting('columns'));\r\n        if (this.source) {\r\n            this.source.refresh();\r\n        }\r\n    }\r\n    getDataSet() {\r\n        return this.dataSet;\r\n    }\r\n    setSource(source) {\r\n        this.detach();\r\n        this.source = this.prepareSource(source);\r\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\r\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\r\n            const changedRow = this.dataSet.findRowByData(data);\r\n            changedRow.setData(data);\r\n        });\r\n    }\r\n    getSetting(name, defaultValue) {\r\n        return getDeepFromObject(this.settings, name, defaultValue);\r\n    }\r\n    getColumns() {\r\n        return this.dataSet.getColumns();\r\n    }\r\n    getRows() {\r\n        return this.dataSet.getRows();\r\n    }\r\n    selectRow(row) {\r\n        this.dataSet.selectRow(row);\r\n        this.source.toggleItem(row.getData(), row.isSelected);\r\n    }\r\n    multipleSelectRow(row) {\r\n        this.dataSet.multipleSelectRow(row);\r\n        this.source.toggleItem(row.getData(), row.isSelected);\r\n    }\r\n    onSelectRow() {\r\n        return this.onSelectRowSource.asObservable();\r\n    }\r\n    expandRow(row) {\r\n        this.dataSet.expandRow(row);\r\n    }\r\n    edit(row) {\r\n        row.isInEditing = true;\r\n    }\r\n    create(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then((newData) => {\r\n            newData = newData ? newData : row.getNewData();\r\n            if (deferred.resolve.skipAdd) {\r\n                this.createFormShown = false;\r\n            }\r\n            else {\r\n                this.source.prepend(newData).then(() => {\r\n                    this.createFormShown = false;\r\n                    this.dataSet.createNewRow();\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('add.confirmCreate')) {\r\n            confirmEmitter.emit({\r\n                newData: row.getNewData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    save(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then((newData) => {\r\n            newData = newData ? newData : row.getNewData();\r\n            if (deferred.resolve.skipEdit) {\r\n                row.isInEditing = false;\r\n            }\r\n            else {\r\n                this.source.update(row.getData(), newData).then(() => {\r\n                    row.isInEditing = false;\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('edit.confirmSave')) {\r\n            confirmEmitter.emit({\r\n                row: row,\r\n                data: row.getData(),\r\n                newData: row.getNewData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    delete(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then(() => {\r\n            this.source.remove(row.getData());\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('delete.confirmDelete')) {\r\n            confirmEmitter.emit({\r\n                row: row,\r\n                data: row.getData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    processDataChange(changes) {\r\n        if (this.shouldProcessChange(changes)) {\r\n            this.dataSet.setData(changes.elements, this.getSelectedItems());\r\n            if (this.getSetting('selectMode') === 'single') {\r\n                if (this.dataSet.getRows().length > 0) {\r\n                    const row = this.determineRowToSelect(changes);\r\n                    this.onSelectRowSource.next(row);\r\n                }\r\n                else {\r\n                    this.onSelectRowSource.next(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    shouldProcessChange(changes) {\r\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'empty', 'paging'].indexOf(changes.action) !== -1) {\r\n            return true;\r\n        }\r\n        else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @breaking-change 1.8.0\r\n     * Need to add `| null` in return type\r\n     *\r\n     * TODO: move to selectable? Separate directive\r\n     */\r\n    determineRowToSelect(changes) {\r\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\r\n            return this.dataSet.select(this.getRowIndexToSelect());\r\n        }\r\n        if (this.shouldSkipSelection()) {\r\n            return null;\r\n        }\r\n        if (changes.action === 'remove') {\r\n            if (changes.elements.length === 0) {\r\n                // we have to store which one to select as the data will be reloaded\r\n                this.dataSet.willSelectLastRow();\r\n            }\r\n            else {\r\n                return this.dataSet.selectPreviousRow();\r\n            }\r\n        }\r\n        if (changes.action === 'append') {\r\n            // we have to store which one to select as the data will be reloaded\r\n            this.dataSet.willSelectLastRow();\r\n        }\r\n        if (changes.action === 'add') {\r\n            return this.dataSet.selectFirstRow();\r\n        }\r\n        if (changes.action === 'update') {\r\n            return this.dataSet.selectFirstRow();\r\n        }\r\n        if (changes.action === 'prepend') {\r\n            // we have to store which one to select as the data will be reloaded\r\n            this.dataSet.willSelectFirstRow();\r\n        }\r\n        return null;\r\n    }\r\n    prepareSource(source) {\r\n        const initialSource = this.getInitialSort();\r\n        if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n            source.setSort([initialSource], false);\r\n        }\r\n        source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\r\n        source.refresh();\r\n        return source;\r\n    }\r\n    getInitialSort() {\r\n        const sortConf = {};\r\n        this.getColumns().forEach((column) => {\r\n            if (column.isSortable && column.defaultSortDirection) {\r\n                sortConf['field'] = column.id;\r\n                sortConf['direction'] = column.defaultSortDirection;\r\n                sortConf['compare'] = column.getCompareFunction();\r\n            }\r\n        });\r\n        return sortConf;\r\n    }\r\n    getSelectedRows() {\r\n        return this.dataSet.getRows()\r\n            .filter(r => r.isSelected);\r\n    }\r\n    getSelectedItems() {\r\n        return this.source.getSelectedItems();\r\n    }\r\n    async selectAllRows(status) {\r\n        // remember that the data set of the grid only contains the visible elements on the current page\r\n        this.dataSet.getRows().forEach(r => r.isSelected = status);\r\n        // advise the data source to also update the selected elements\r\n        await this.source.selectAllItems(status, this.getSetting('selectMode') === 'multi_filtered');\r\n    }\r\n    getFirstRow() {\r\n        return this.dataSet.getFirstRow();\r\n    }\r\n    getLastRow() {\r\n        return this.dataSet.getLastRow();\r\n    }\r\n    getSelectionInfo() {\r\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\r\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\r\n        const { perPage, page } = this.getSetting('pager');\r\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\r\n    }\r\n    getRowIndexToSelect() {\r\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\r\n        const dataAmount = this.source.count();\r\n        /**\r\n         * source - contains all table data\r\n         * dataSet - contains data for current page\r\n         * selectedRowIndex - contains index for data in all data\r\n         *\r\n         * because of that, we need to count index for a specific row in page\r\n         * if\r\n         * `switchPageToSelectedRowPage` - we need to change page automatically\r\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\r\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\r\n         *  if we return index witch not points to existing data - no line will be highlighted)\r\n         */\r\n        return (switchPageToSelectedRowPage &&\r\n            selectedRowIndex < dataAmount &&\r\n            selectedRowIndex >= 0) ?\r\n            selectedRowIndex % perPage :\r\n            selectedRowIndex;\r\n    }\r\n    getPageToSelect(source) {\r\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\r\n        let pageToSelect = Math.max(1, page);\r\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\r\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\r\n        }\r\n        const maxPageAmount = Math.ceil(source.count() / perPage);\r\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\r\n    }\r\n    shouldSkipSelection() {\r\n        /**\r\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\r\n         *\r\n         * Therefore, in order to select a row after some changes,\r\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\r\n         *\r\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\r\n         *\r\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\r\n         * because when < 0 all lines must be deselected\r\n         */\r\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\r\n        return selectedRowIndex < 0;\r\n    }\r\n}\n\nclass TagComponent {\r\n    constructor() {\r\n        this.close = new EventEmitter();\r\n    }\r\n    closeClicked(evt) {\r\n        evt.stopPropagation();\r\n        this.close.emit(this.item.id);\r\n    }\r\n}\r\nTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TagComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TagComponent, selector: \"angular2-smart-table-tag\", inputs: { item: \"item\" }, outputs: { close: \"close\" }, ngImport: i0, template: \"<div style=\\\"padding: 5px; display: inline; white-space: nowrap\\\">\\r\\n  <svg\\r\\n    style=\\\"width: 15px\\\"\\r\\n    (click)=\\\"closeClicked($event)\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n    focusable=\\\"false\\\"\\r\\n    data-prefix=\\\"fas\\\"\\r\\n    data-icon=\\\"times-circle\\\"\\r\\n    class=\\\"svg-inline--fa fa-times-circle fa-w-16\\\"\\r\\n    role=\\\"img\\\"\\r\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n    viewBox=\\\"0 0 512 512\\\"\\r\\n  >\\r\\n    <path\\r\\n      fill=\\\"currentColor\\\"\\r\\n      d=\\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\\\"\\r\\n    ></path>\\r\\n  </svg>\\r\\n  <span style=\\\"margin-left: 3px\\\" class=\\\"itemText\\\">{{ item.title }}</span>\\r\\n</div>\\r\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TagComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'angular2-smart-table-tag', template: \"<div style=\\\"padding: 5px; display: inline; white-space: nowrap\\\">\\r\\n  <svg\\r\\n    style=\\\"width: 15px\\\"\\r\\n    (click)=\\\"closeClicked($event)\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n    focusable=\\\"false\\\"\\r\\n    data-prefix=\\\"fas\\\"\\r\\n    data-icon=\\\"times-circle\\\"\\r\\n    class=\\\"svg-inline--fa fa-times-circle fa-w-16\\\"\\r\\n    role=\\\"img\\\"\\r\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n    viewBox=\\\"0 0 512 512\\\"\\r\\n  >\\r\\n    <path\\r\\n      fill=\\\"currentColor\\\"\\r\\n      d=\\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\\\"\\r\\n    ></path>\\r\\n  </svg>\\r\\n  <span style=\\\"margin-left: 3px\\\" class=\\\"itemText\\\">{{ item.title }}</span>\\r\\n</div>\\r\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"] }]\r\n        }], propDecorators: { item: [{\r\n                type: Input\r\n            }], close: [{\r\n                type: Output\r\n            }] } });\n\nclass TagsListComponent {\r\n    constructor() {\r\n        this.close = new EventEmitter();\r\n    }\r\n    closedTag(tag) {\r\n        this.close.emit(tag);\r\n    }\r\n}\r\nTagsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TagsListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTagsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TagsListComponent, selector: \"angular2-smart-table-tags-list\", inputs: { tags: \"tags\" }, outputs: { close: \"close\" }, ngImport: i0, template: \"<div class=\\\"add-tag-list\\\" id=\\\"tagslist\\\">\\r\\n  <angular2-smart-table-tag\\r\\n    *ngFor=\\\"let tag of tags\\\"\\r\\n    [item]=\\\"tag\\\"\\r\\n    (close)=\\\"closedTag($event)\\\"\\r\\n  ></angular2-smart-table-tag>\\r\\n</div>\\r\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"], components: [{ type: TagComponent, selector: \"angular2-smart-table-tag\", inputs: [\"item\"], outputs: [\"close\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TagsListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'angular2-smart-table-tags-list', template: \"<div class=\\\"add-tag-list\\\" id=\\\"tagslist\\\">\\r\\n  <angular2-smart-table-tag\\r\\n    *ngFor=\\\"let tag of tags\\\"\\r\\n    [item]=\\\"tag\\\"\\r\\n    (close)=\\\"closedTag($event)\\\"\\r\\n  ></angular2-smart-table-tag>\\r\\n</div>\\r\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"] }]\r\n        }], propDecorators: { tags: [{\r\n                type: Input\r\n            }], close: [{\r\n                type: Output\r\n            }] } });\n\nclass TableService {\r\n    constructor() {\r\n        this.mouseMoveEvent$ = new Subject();\r\n    }\r\n}\r\nTableService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nTableService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TableService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TableService, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }] });\n\nclass ActionsTitleComponent {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.ref.nativeElement.classList.add('angular2-smart-actions');\r\n    }\r\n    ngOnChanges() {\r\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n    }\r\n}\r\nActionsTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ActionsTitleComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nActionsTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ActionsTitleComponent, selector: \"[angular2-st-actions-title]\", inputs: { grid: \"grid\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"angular2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ActionsTitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[angular2-st-actions-title]',\r\n                    template: `\r\n    <div class=\"angular2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { grid: [{\r\n                type: Input\r\n            }] } });\n\nclass TitleComponent {\r\n    constructor() {\r\n        this.currentDirection = null;\r\n        this.hide = new EventEmitter();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                this.currentDirection = null;\r\n                const sortConf = this.source.getSort();\r\n                if (sortConf) {\r\n                    sortConf.forEach(c => {\r\n                        if (c.field === this.column.id) {\r\n                            this.currentDirection = c.direction;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _sort(event) {\r\n        event.preventDefault();\r\n        this.changeSortDirection();\r\n        this.source.updateSort([\r\n            {\r\n                field: this.column.id,\r\n                direction: this.currentDirection,\r\n                compare: this.column.getCompareFunction(),\r\n            },\r\n        ]);\r\n    }\r\n    _hideColumnClicked(event) {\r\n        event.preventDefault();\r\n        this.hide.emit(this.column.id);\r\n    }\r\n    changeSortDirection() {\r\n        // rotate sort direction, including null (no sort)\r\n        if (this.currentDirection === null) {\r\n            this.currentDirection = 'asc';\r\n        }\r\n        else if (this.currentDirection === 'asc') {\r\n            this.currentDirection = 'desc';\r\n        }\r\n        else if (this.currentDirection === 'desc') {\r\n            this.currentDirection = null;\r\n        }\r\n    }\r\n}\r\nTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TitleComponent, selector: \"angular2-smart-table-title\", inputs: { column: \"column\", source: \"source\", isHideable: \"isHideable\" }, outputs: { hide: \"hide\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n       (click)=\"_sort($event)\"\r\n       class=\"angular2-smart-sort-link sort\"\r\n       [ngClass]=\"currentDirection??''\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"angular2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n    <button style=\"position: absolute; top:0; right:0; border:none\" *ngIf=\"isHideable\"\r\n            (click)=\"_hideColumnClicked($event)\">X\r\n    </button>\r\n  `, isInline: true, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'angular2-smart-table-title', template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n       (click)=\"_sort($event)\"\r\n       class=\"angular2-smart-sort-link sort\"\r\n       [ngClass]=\"currentDirection??''\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"angular2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n    <button style=\"position: absolute; top:0; right:0; border:none\" *ngIf=\"isHideable\"\r\n            (click)=\"_hideColumnClicked($event)\">X\r\n    </button>\r\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\r\n        }], propDecorators: { column: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], isHideable: [{\r\n                type: Input\r\n            }], hide: [{\r\n                type: Output\r\n            }] } });\n\nclass ColumnTitleComponent {\r\n    constructor() {\r\n        this.hide = new EventEmitter();\r\n    }\r\n}\r\nColumnTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nColumnTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ColumnTitleComponent, selector: \"angular2-st-column-title\", inputs: { column: \"column\", source: \"source\", isHideable: \"isHideable\" }, outputs: { hide: \"hide\" }, ngImport: i0, template: `\r\n    <div class=\"angular2-smart-title\">\r\n      <angular2-smart-table-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (hide)=\"hide.emit($event)\"></angular2-smart-table-title>\r\n    </div>\r\n  `, isInline: true, components: [{ type: TitleComponent, selector: \"angular2-smart-table-title\", inputs: [\"column\", \"source\", \"isHideable\"], outputs: [\"hide\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnTitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'angular2-st-column-title',\r\n                    template: `\r\n    <div class=\"angular2-smart-title\">\r\n      <angular2-smart-table-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (hide)=\"hide.emit($event)\"></angular2-smart-table-title>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], propDecorators: { column: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], isHideable: [{\r\n                type: Input\r\n            }], hide: [{\r\n                type: Output\r\n            }] } });\n\nclass NgxResizerDirective {\r\n    constructor(elementRef, renderer, tableService) {\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.tableService = tableService;\r\n        this.destroyed$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.tableService.mouseMoveEvent$\r\n            .pipe(takeUntil(this.destroyed$), filter(() => this.isClicked))\r\n            .subscribe((event) => {\r\n            const offset = this.pointerOffset - event.pageX;\r\n            const width = this.parentOffset - offset;\r\n            this.renderer.setStyle(this.parentElement, 'width', width + 'px');\r\n            this.renderer.setStyle(this.siblingElement, 'width', this.siblingOffset + offset + 'px');\r\n        });\r\n    }\r\n    onMouseEnter(event) {\r\n        this.isClicked = true;\r\n        this.parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\r\n        this.siblingElement = this.renderer.nextSibling(this.parentElement);\r\n        this.pointerOffset = event.pageX;\r\n        this.parentOffset = this.parentElement.offsetWidth;\r\n        this.siblingOffset = this.siblingElement.offsetWidth;\r\n    }\r\n    onMouseDown() {\r\n        this.isClicked = false;\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed$.next(null);\r\n    }\r\n}\r\nNgxResizerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NgxResizerDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\r\nNgxResizerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: NgxResizerDirective, selector: \"[angular2-resizer]\", host: { listeners: { \"mousedown\": \"onMouseEnter($event)\", \"document:mouseup\": \"onMouseDown()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NgxResizerDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[angular2-resizer]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: TableService }]; }, propDecorators: { onMouseEnter: [{\r\n                type: HostListener,\r\n                args: ['mousedown', ['$event']]\r\n            }], onMouseDown: [{\r\n                type: HostListener,\r\n                args: ['document:mouseup']\r\n            }] } });\n\nclass TheadTitlesRowComponent {\r\n    constructor() {\r\n        this.hide = new EventEmitter();\r\n        this.selectAllRows = new EventEmitter();\r\n        this.multiSelectWidth = '3rem';\r\n        this.isHideable = false;\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.isResizable = this.grid.getSetting('resizable');\r\n        this.isHideable = this.grid.getSetting('hideable');\r\n    }\r\n    getVisibleColumns(columns) {\r\n        return (columns || []).filter((column) => !column.hide);\r\n    }\r\n}\r\nTheadTitlesRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadTitlesRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTheadTitlesRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TheadTitlesRowComponent, selector: \"[angular2-st-thead-titles-row]\", inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { hide: \"hide\", selectAllRows: \"selectAllRows\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"\r\n        [style.width]=\"multiSelectWidth\"\r\n    >\r\n      <input type=\"checkbox\" [ngModel]=\"isAllSelected\" (click)=\"selectAllRows.emit()\">\r\n    </th>\r\n    <th angular2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\r\n        class=\"angular2-smart-th {{ column.id }}\"\r\n        [ngClass]=\"column.classHeader ?? ''\"\r\n        [style.width]=\"column.width\"\r\n    >\r\n      <angular2-st-column-title\r\n        [source]=\"source\"\r\n        [column]=\"column\"\r\n        [isHideable]=\"isHideable\"\r\n        (hide)=\"hide.emit($event)\"\r\n      ></angular2-st-column-title>\r\n      <div *ngIf=\"isResizable\" angular2-resizer class=\"angular2-resizer-block\"></div>\r\n    </th>\r\n    <th angular2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `, isInline: true, components: [{ type: ActionsTitleComponent, selector: \"[angular2-st-actions-title]\", inputs: [\"grid\"] }, { type: ColumnTitleComponent, selector: \"angular2-st-column-title\", inputs: [\"column\", \"source\", \"isHideable\"], outputs: [\"hide\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: NgxResizerDirective, selector: \"[angular2-resizer]\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadTitlesRowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[angular2-st-thead-titles-row]',\r\n                    template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"\r\n        [style.width]=\"multiSelectWidth\"\r\n    >\r\n      <input type=\"checkbox\" [ngModel]=\"isAllSelected\" (click)=\"selectAllRows.emit()\">\r\n    </th>\r\n    <th angular2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\r\n        class=\"angular2-smart-th {{ column.id }}\"\r\n        [ngClass]=\"column.classHeader ?? ''\"\r\n        [style.width]=\"column.width\"\r\n    >\r\n      <angular2-st-column-title\r\n        [source]=\"source\"\r\n        [column]=\"column\"\r\n        [isHideable]=\"isHideable\"\r\n        (hide)=\"hide.emit($event)\"\r\n      ></angular2-st-column-title>\r\n      <div *ngIf=\"isResizable\" angular2-resizer class=\"angular2-resizer-block\"></div>\r\n    </th>\r\n    <th angular2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], isAllSelected: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], hide: [{\r\n                type: Output\r\n            }], selectAllRows: [{\r\n                type: Output\r\n            }] } });\n\nclass BypassSecurityTrustPipe {\r\n    constructor(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    transform(value, type) {\r\n        switch (type) {\r\n            case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\r\n            case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n            case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n            case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n            case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n            case 'none': return value;\r\n        }\r\n    }\r\n}\r\nBypassSecurityTrustPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: BypassSecurityTrustPipe, deps: [{ token: i1$1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\r\nBypassSecurityTrustPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: BypassSecurityTrustPipe, name: \"bypassSecurityTrust\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: BypassSecurityTrustPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'bypassSecurityTrust'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.DomSanitizer }]; } });\n\nclass AddButtonComponent {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.create = new EventEmitter();\r\n        this.hiddenWhenFunction = () => false;\r\n        this.disabledWhenFunction = () => false;\r\n        this.bypassSecurityTrust = 'none';\r\n    }\r\n    ngAfterViewInit() {\r\n        this.ref.nativeElement.classList.add('angular2-smart-actions-title', 'angular2-smart-actions-title-add');\r\n    }\r\n    get visible() {\r\n        return !this.hiddenWhenFunction();\r\n    }\r\n    get disabled() {\r\n        return this.disabledWhenFunction();\r\n    }\r\n    ngOnChanges() {\r\n        this.addNewButtonContent = this.grid.settings.add?.addButtonContent ?? 'Add';\r\n        this.bypassSecurityTrust = this.grid.settings.add?.sanitizer?.bypassHtml ? 'html' : 'none';\r\n        this.disabledWhenFunction = this.grid.settings.add?.disabledWhen ?? this.disabledWhenFunction;\r\n        const actions = this.grid.settings.actions;\r\n        if (actions === false || actions === undefined) {\r\n            this.hiddenWhenFunction = () => (actions === false);\r\n        }\r\n        else {\r\n            this.hiddenWhenFunction = this.grid.settings.add?.hiddenWhen ?? (() => (actions.add === false));\r\n        }\r\n    }\r\n    onAdd(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.disabled)\r\n            return;\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.create.emit({\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.createFormShown = true;\r\n        }\r\n    }\r\n}\r\nAddButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AddButtonComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nAddButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: AddButtonComponent, selector: \"[angular2-st-add-button]\", inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <a *ngIf=\"visible\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-add\"\r\n        [ngClass]=\"{'not-allowed': disabled}\"\r\n        [innerHTML]=\"addNewButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onAdd($event)\"></a>\r\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"bypassSecurityTrust\": BypassSecurityTrustPipe } });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AddButtonComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[angular2-st-add-button]',\r\n                    template: `\r\n    <a *ngIf=\"visible\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-add\"\r\n        [ngClass]=\"{'not-allowed': disabled}\"\r\n        [innerHTML]=\"addNewButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], create: [{\r\n                type: Output\r\n            }] } });\n\nclass FilterDefault {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.query = '';\r\n    }\r\n    onFilter(query) {\r\n        this.source.addFilter({\r\n            field: this.column.id,\r\n            search: query,\r\n            filter: this.column.getFilterFunction(),\r\n        });\r\n    }\r\n}\r\nFilterDefault.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterDefault, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nFilterDefault.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FilterDefault, selector: \"ng-component\", inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterDefault, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    template: '',\r\n                }]\r\n        }], propDecorators: { column: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }] } });\n\nclass CustomFilterComponent extends FilterDefault {\r\n    ngOnChanges(changes) {\r\n        if (this.column && !this.customComponent) {\r\n            const filter = this.column.filter;\r\n            if (!filter) {\r\n                return;\r\n            }\r\n            this.customComponent = this.dynamicTarget.createComponent(filter.component);\r\n            // set @Inputs and @Outputs of custom component\r\n            this.customComponent.instance.query = this.query;\r\n            this.customComponent.instance.column = this.column;\r\n            this.customComponent.instance.source = this.source;\r\n            this.customComponent.instance.inputClass = this.inputClass;\r\n            this.customComponent.instance.filter.subscribe((event) => { this.onFilter(event); });\r\n        }\r\n        if (this.customComponent) {\r\n            this.customComponent.instance.ngOnChanges(changes);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n}\r\nCustomFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CustomFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nCustomFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CustomFilterComponent, selector: \"custom-table-filter\", inputs: { query: \"query\" }, viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-template #dynamicTarget></ng-template>`, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CustomFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'custom-table-filter',\r\n                    template: `<ng-template #dynamicTarget></ng-template>`,\r\n                }]\r\n        }], propDecorators: { query: [{\r\n                type: Input\r\n            }], dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] } });\n\nclass DefaultFilter {\r\n    constructor() {\r\n        this.delay = 300;\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.changesSubscription) {\r\n            this.changesSubscription.unsubscribe();\r\n        }\r\n        if (this.changesSubscription2) {\r\n            this.changesSubscription2.unsubscribe();\r\n        }\r\n    }\r\n    setFilter() {\r\n        this.filter.emit(this.query);\r\n    }\r\n}\r\nDefaultFilter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultFilter, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nDefaultFilter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DefaultFilter, selector: \"ng-component\", inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultFilter, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    template: '',\r\n                }]\r\n        }], propDecorators: { query: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], filter: [{\r\n                type: Output\r\n            }] } });\n\nclass SelectFilterComponent extends DefaultFilter {\r\n    ngOnInit() {\r\n        this.column.filterFunction = this.onFilterValues.bind(this);\r\n        const exist = this.inputControl.valueChanges;\r\n        if (!exist) {\r\n            return;\r\n        }\r\n        exist\r\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((value) => this.setFilter());\r\n    }\r\n    onFilterValues(cellValue, search, data, cellName) {\r\n        const strictFilter = this.column.getFilterConfig()?.strict ?? false;\r\n        if (strictFilter) {\r\n            return defaultStringEqualsFilter(cellValue, search, data, cellName);\r\n        }\r\n        else {\r\n            return defaultStringInclusionFilter(cellValue, search, data, cellName);\r\n        }\r\n    }\r\n}\r\nSelectFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SelectFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nSelectFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: SelectFilterComponent, selector: \"select-filter\", viewQueries: [{ propertyName: \"inputControl\", first: true, predicate: [\"inputControl\"], descendants: true, read: NgControl, static: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `, isInline: true, directives: [{ type: i1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SelectFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'select-filter',\r\n                    template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n                }]\r\n        }], propDecorators: { inputControl: [{\r\n                type: ViewChild,\r\n                args: ['inputControl', { read: NgControl, static: true }]\r\n            }] } });\n\nclass CheckboxFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.filterActive = false;\r\n        this.inputControl = new FormControl();\r\n    }\r\n    ngOnInit() {\r\n        this.changesSubscription = this.inputControl.valueChanges\r\n            .pipe(debounceTime(this.delay))\r\n            .subscribe((checked) => {\r\n            this.filterActive = true;\r\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n            this.query = checked ? trueVal : falseVal;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    resetFilter(event) {\r\n        event.preventDefault();\r\n        this.query = '';\r\n        this.inputControl.setValue(false, { emitEvent: false });\r\n        this.filterActive = false;\r\n        this.setFilter();\r\n    }\r\n}\r\nCheckboxFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CheckboxFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCheckboxFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CheckboxFilterComponent, selector: \"checkbox-filter\", usesInheritance: true, ngImport: i0, template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `, isInline: true, directives: [{ type: i1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CheckboxFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'checkbox-filter',\r\n                    template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass CompleterFilterComponent extends DefaultFilter {\r\n    constructor(completerService) {\r\n        super();\r\n        this.completerService = completerService;\r\n        this.completerContent = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        const config = this.column.getFilterConfig().completer;\r\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n        config.dataService.descriptionField(config.descriptionField);\r\n        this.changesSubscription = this.completerContent\r\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((search) => {\r\n            this.query = search;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    inputTextChanged(event) {\r\n        // workaround to trigger the search event when the home/end buttons are clicked\r\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n        // so here it gets called manually\r\n        if (event === '') {\r\n            this.completerContent.next(event);\r\n        }\r\n    }\r\n}\r\nCompleterFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CompleterFilterComponent, deps: [{ token: i1$2.CompleterService }], target: i0.ɵɵFactoryTarget.Component });\r\nCompleterFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CompleterFilterComponent, selector: \"completer-filter\", usesInheritance: true, ngImport: i0, template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `, isInline: true, components: [{ type: i1$2.CompleterCmp, selector: \"ng2-completer\", inputs: [\"inputName\", \"inputId\", \"pause\", \"minSearchLength\", \"maxChars\", \"overrideSuggested\", \"clearSelected\", \"clearUnselected\", \"fillHighlighted\", \"placeholder\", \"autoMatch\", \"disableInput\", \"autofocus\", \"openOnFocus\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"autoHighlight\", \"datasource\", \"dataService\", \"textNoResults\", \"textSearching\", \"matchClass\", \"fieldTabindex\", \"inputClass\", \"initialValue\"], outputs: [\"selected\", \"highlighted\", \"blur\", \"click\", \"focus\", \"opened\", \"keyup\", \"keydown\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CompleterFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'completer-filter',\r\n                    template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1$2.CompleterService }]; } });\n\nclass DateFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.startDate = new FormControl();\r\n        this.endDate = new FormControl();\r\n        this.dateBefore = new FormControl();\r\n        this.dateAfter = new FormControl();\r\n        this.dateEqual = new FormControl();\r\n        this.filterTypeSelect = new FormControl();\r\n        this.filterType = 'after';\r\n        this.filterOptions = ['before', 'after', 'equal', 'between'];\r\n    }\r\n    ngOnInit() {\r\n        this.changesSubscription2 = this.filterTypeSelect.valueChanges.subscribe(value => {\r\n            this.filterType = value;\r\n            if (this.changesSubscription) {\r\n                this.changesSubscription.unsubscribe();\r\n            }\r\n            this.changesSubscription = this.getFilterType()\r\n                .subscribe((value) => {\r\n                this.query = value;\r\n                this.setFilter();\r\n            });\r\n        });\r\n    }\r\n    getFilterType() {\r\n        switch (this.filterType) {\r\n            case 'before': {\r\n                return this.dateBefore.valueChanges.pipe(map((value) => '_date_before_' + value));\r\n            }\r\n            case 'after': {\r\n                return this.dateAfter.valueChanges.pipe(map((value) => '_date_after_' + value));\r\n            }\r\n            case 'equal': {\r\n                return this.dateEqual.valueChanges.pipe(map((value) => '_date_equal_' + value));\r\n            }\r\n            case 'between': {\r\n                return combineLatest([this.startDate.valueChanges, this.endDate.valueChanges])\r\n                    .pipe(map(([val1, val2]) => {\r\n                    return '_start_date_' + val1 + '_end_date_' + val2;\r\n                }));\r\n            }\r\n            default:\r\n                return of('');\r\n        }\r\n    }\r\n}\r\nDateFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DateFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nDateFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DateFilterComponent, selector: \"date-filter\", usesInheritance: true, ngImport: i0, template: `\r\n    <select [formControl]=\"filterTypeSelect\">\r\n      <option [value]=\"option\" *ngFor=\"let  option of filterOptions\">{{option}}</option>\r\n    </select>\r\n    <div [ngSwitch]=\"filterType\">\r\n     <input *ngSwitchCase=\"'before'\" type=\"date\" [formControl]=\"dateBefore\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'after'\" type=\"date\" [formControl]=\"dateAfter\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'equal'\" type=\"date\" [formControl]=\"dateEqual\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"startDate\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"endDate\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    </div>\r\n  `, isInline: true, directives: [{ type: i1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DateFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'date-filter',\r\n                    template: `\r\n    <select [formControl]=\"filterTypeSelect\">\r\n      <option [value]=\"option\" *ngFor=\"let  option of filterOptions\">{{option}}</option>\r\n    </select>\r\n    <div [ngSwitch]=\"filterType\">\r\n     <input *ngSwitchCase=\"'before'\" type=\"date\" [formControl]=\"dateBefore\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'after'\" type=\"date\" [formControl]=\"dateAfter\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'equal'\" type=\"date\" [formControl]=\"dateEqual\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"startDate\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"endDate\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass MselectFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.selector = \"*;*\";\r\n        this.dropdownList = [];\r\n        this.selectedItems = [];\r\n        this.dropdownSettings = {};\r\n    }\r\n    ngOnInit() {\r\n        this.column.filterFunction = this.onFilterValues.bind(this);\r\n        const config = this.column.getFilterConfig();\r\n        this.dropdownList = config.dropdownList || [];\r\n        this.selectedItems = config.selectedItems || [];\r\n        let setting = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: \"Select All\",\r\n            unSelectAllText: 'UnSelect All',\r\n            enableSearchFilter: true,\r\n            classes: \"myclass\",\r\n            maxHeight: 200,\r\n            position: 'top',\r\n            autoPosition: true,\r\n        };\r\n        this.dropdownSettings = Object.assign(setting, config.dropdownSettings);\r\n    }\r\n    onFilterValues(cellValue, search, data, cellName) {\r\n        if (search.indexOf(this.selector) != -1) {\r\n            let searchArray = search.split(this.selector);\r\n            return searchArray.indexOf(cellValue) != -1;\r\n        }\r\n        const strictFilter = this.column.getFilterConfig()?.strict ?? false;\r\n        if (strictFilter) {\r\n            return defaultStringEqualsFilter(cellValue, search, data, cellName);\r\n        }\r\n        else {\r\n            return defaultStringInclusionFilter(cellValue, search, data, cellName);\r\n        }\r\n    }\r\n    onItemSelect(item) {\r\n        this.updateQuery();\r\n    }\r\n    OnItemDeSelect(item) {\r\n        this.updateQuery();\r\n    }\r\n    onSelectAll(items) {\r\n        this.updateQuery();\r\n    }\r\n    onDeSelectAll(items) {\r\n        this.updateQuery();\r\n    }\r\n    updateQuery() {\r\n        this.query = this.selectedItems.map(item => item.id).join(this.selector); //.replace(/ /g, '')\r\n        this.setFilter();\r\n    }\r\n}\r\nMselectFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: MselectFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nMselectFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: MselectFilterComponent, selector: \"mselect-filter\", usesInheritance: true, ngImport: i0, template: `<angular2-multiselect [data]=\"dropdownList\"\r\n    [(ngModel)]=\"selectedItems\"\r\n    [settings]=\"dropdownSettings\"\r\n    (onSelect)=\"onItemSelect($event)\"\r\n    (onDeSelect)=\"OnItemDeSelect($event)\"\r\n    (onSelectAll)=\"onSelectAll($event)\"\r\n    (onDeSelectAll)=\"onDeSelectAll($event)\">\r\n    </angular2-multiselect>`, isInline: true, components: [{ type: i1$3.AngularMultiSelect, selector: \"angular2-multiselect\", inputs: [\"settings\", \"data\", \"loading\"], outputs: [\"onSelect\", \"onDeSelect\", \"onSelectAll\", \"onDeSelectAll\", \"onOpen\", \"onClose\", \"onScrollToEnd\", \"onFilterSelectAll\", \"onFilterDeSelectAll\", \"onAddFilterNewItem\", \"onGroupSelect\", \"onGroupDeSelect\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: MselectFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mselect-filter',\r\n                    template: `<angular2-multiselect [data]=\"dropdownList\"\r\n    [(ngModel)]=\"selectedItems\"\r\n    [settings]=\"dropdownSettings\"\r\n    (onSelect)=\"onItemSelect($event)\"\r\n    (onDeSelect)=\"OnItemDeSelect($event)\"\r\n    (onSelectAll)=\"onSelectAll($event)\"\r\n    (onDeSelectAll)=\"onDeSelectAll($event)\">\r\n    </angular2-multiselect>`\r\n                }]\r\n        }] });\n\nclass InputFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.inputControl = new FormControl();\r\n    }\r\n    ngOnInit() {\r\n        if (this.query) {\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n        this.inputControl.valueChanges\r\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((value) => {\r\n            this.query = this.inputControl.value;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.query) {\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n    }\r\n}\r\nInputFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: InputFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nInputFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: InputFilterComponent, selector: \"input-filter\", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.placeholder || column.title }}\"/>\r\n  `, isInline: true, directives: [{ type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: InputFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'input-filter',\r\n                    template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.placeholder || column.title }}\"/>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass DefaultFilterComponent extends FilterDefault {\r\n}\r\nDefaultFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nDefaultFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DefaultFilterComponent, selector: \"default-table-filter\", inputs: { query: \"query\" }, usesInheritance: true, ngImport: i0, template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <date-filter *ngSwitchCase=\"'date'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </date-filter>\r\n      <mselect-filter *ngSwitchCase=\"'multiple'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </mselect-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `, isInline: true, components: [{ type: SelectFilterComponent, selector: \"select-filter\" }, { type: CheckboxFilterComponent, selector: \"checkbox-filter\" }, { type: CompleterFilterComponent, selector: \"completer-filter\" }, { type: DateFilterComponent, selector: \"date-filter\" }, { type: MselectFilterComponent, selector: \"mselect-filter\" }, { type: InputFilterComponent, selector: \"input-filter\" }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultFilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'default-table-filter',\r\n                    template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <date-filter *ngSwitchCase=\"'date'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </date-filter>\r\n      <mselect-filter *ngSwitchCase=\"'multiple'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </mselect-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n                }]\r\n        }], propDecorators: { query: [{\r\n                type: Input\r\n            }] } });\n\nclass FilterComponent extends FilterDefault {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.query = '';\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                const filterConf = this.source.getFilter();\r\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n                    this.query = '';\r\n                    // add a check for existing filters an set the query if one exists for this column\r\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\r\n                }\r\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n                    filterConf.filters.forEach((k, v) => {\r\n                        if (k.field == this.column.id) {\r\n                            this.query = k.search;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FilterComponent, selector: \"angular2-smart-table-filter\", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\r\n      <div class=\"angular2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n        ></custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n        ></default-table-filter>\r\n      </div>\r\n    `, isInline: true, styles: [\":host .angular2-smart-filter ::ng-deep input,:host .angular2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .angular2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .angular2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .angular2-smart-filter ::ng-deep a{font-weight:400}\\n\"], components: [{ type: CustomFilterComponent, selector: \"custom-table-filter\", inputs: [\"query\"] }, { type: DefaultFilterComponent, selector: \"default-table-filter\", inputs: [\"query\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'angular2-smart-table-filter', template: `\r\n      <div class=\"angular2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n        ></custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n        ></default-table-filter>\r\n      </div>\r\n    `, styles: [\":host .angular2-smart-filter ::ng-deep input,:host .angular2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .angular2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .angular2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .angular2-smart-filter ::ng-deep a{font-weight:400}\\n\"] }]\r\n        }] });\n\nclass TheadFitlersRowComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n    }\r\n    getVisibleColumns(columns) {\r\n        return (columns || []).filter((column) => !column.hide);\r\n    }\r\n}\r\nTheadFitlersRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadFitlersRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTheadFitlersRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TheadFitlersRowComponent, selector: \"[angular2-st-thead-filters-row]\", inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th angular2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"angular2-smart-th {{ column.id }}\">\r\n      <angular2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n      ></angular2-smart-table-filter>\r\n    </th>\r\n    <th angular2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `, isInline: true, components: [{ type: AddButtonComponent, selector: \"[angular2-st-add-button]\", inputs: [\"grid\", \"source\"], outputs: [\"create\"] }, { type: FilterComponent, selector: \"angular2-smart-table-filter\" }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadFitlersRowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[angular2-st-thead-filters-row]',\r\n                    template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th angular2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"angular2-smart-th {{ column.id }}\">\r\n      <angular2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n      ></angular2-smart-table-filter>\r\n    </th>\r\n    <th angular2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], create: [{\r\n                type: Output\r\n            }] } });\n\nclass TheadCreateCancelComponent {\r\n    constructor() {\r\n        this.bypassSecurityTrust = 'none';\r\n    }\r\n    onCreate(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    }\r\n    onCancelCreate(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.grid.createFormShown = false;\r\n        this.createCancel.emit({\r\n            discardedData: this.grid.getNewRow().getNewData(),\r\n            source: this.grid.source,\r\n        });\r\n    }\r\n    ngOnChanges() {\r\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n        this.bypassSecurityTrust = this.grid.settings.add?.sanitizer?.bypassHtml ? 'html' : 'none';\r\n    }\r\n}\r\nTheadCreateCancelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadCreateCancelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTheadCreateCancelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TheadCreateCancelComponent, selector: \"angular2-st-actions\", inputs: { grid: \"grid\", createConfirm: \"createConfirm\", createCancel: \"createCancel\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onCreate($event)\"></a>\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onCancelCreate($event)\"></a>\r\n  `, isInline: true, pipes: { \"bypassSecurityTrust\": BypassSecurityTrustPipe } });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadCreateCancelComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    // TODO: @breaking-change rename the selector to angular2-st-thead-create-cancel in the next major version\r\n                    selector: 'angular2-st-actions',\r\n                    template: `\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onCreate($event)\"></a>\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onCancelCreate($event)\"></a>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], createCancel: [{\r\n                type: Input\r\n            }] } });\n\nclass CustomViewComponent {\r\n    ngOnInit() {\r\n        if (this.cell && !this.customComponent) {\r\n            this.customComponent = this.dynamicTarget.createComponent(this.cell.getColumn().renderComponent);\r\n            Object.assign(this.customComponent.instance, this.getPatch());\r\n            const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n            onComponentInitFunction && onComponentInitFunction(this.customComponent.instance, this.getPatch());\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.customComponent.destroy();\r\n    }\r\n    getPatch() {\r\n        return {\r\n            value: this.cell.getValue(),\r\n            rowData: this.cell.getRow().getData()\r\n        };\r\n    }\r\n}\r\nCustomViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CustomViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCustomViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CustomViewComponent, selector: \"custom-view-component\", inputs: { cell: \"cell\" }, viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CustomViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'custom-view-component',\r\n                    template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { cell: [{\r\n                type: Input\r\n            }], dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] } });\n\nclass ViewCellComponent {\r\n    get bypassSecurityTrust() {\r\n        return this.cell.getColumn().sanitizer.bypassHtml ? 'html' : 'none';\r\n    }\r\n    get cssClass() {\r\n        return this.cell.getColumn().classContent ?? '';\r\n    }\r\n}\r\nViewCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ViewCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nViewCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ViewCellComponent, selector: \"table-cell-view-mode\", inputs: { cell: \"cell\" }, ngImport: i0, template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue() | bypassSecurityTrust: bypassSecurityTrust\" [ngClass]=\"cssClass\"></div>\r\n        <div *ngSwitchDefault [ngClass]=\"cssClass\">{{ cell.getValue() }}</div>\r\n    </div>\r\n    `, isInline: true, components: [{ type: CustomViewComponent, selector: \"custom-view-component\", inputs: [\"cell\"] }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }], pipes: { \"bypassSecurityTrust\": BypassSecurityTrustPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ViewCellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'table-cell-view-mode',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue() | bypassSecurityTrust: bypassSecurityTrust\" [ngClass]=\"cssClass\"></div>\r\n        <div *ngSwitchDefault [ngClass]=\"cssClass\">{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n                }]\r\n        }], propDecorators: { cell: [{\r\n                type: Input\r\n            }] } });\n\nclass EditCellDefault {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.edited = new EventEmitter();\r\n        this.stopEditing = new EventEmitter();\r\n    }\r\n    onEdited() {\r\n        this.edited.emit();\r\n        return false;\r\n    }\r\n    onStopEditing() {\r\n        this.stopEditing.emit();\r\n        return false;\r\n    }\r\n    onClick(event) {\r\n        event.stopPropagation();\r\n    }\r\n}\r\nEditCellDefault.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: EditCellDefault, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nEditCellDefault.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: EditCellDefault, selector: \"ng-component\", inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\", stopEditing: \"stopEditing\" }, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: EditCellDefault, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    template: ''\r\n                }]\r\n        }], propDecorators: { cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }], stopEditing: [{\r\n                type: Output\r\n            }] } });\n\nclass CustomEditComponent extends EditCellDefault {\r\n    ngOnChanges(changes) {\r\n        if (this.cell && !this.customComponent) {\r\n            const editor = this.cell.getColumn().editor;\r\n            if (!editor)\r\n                return;\r\n            this.customComponent = this.dynamicTarget.createComponent(editor.component);\r\n            // set @Inputs and @Outputs of custom component\r\n            this.customComponent.instance.cell = this.cell;\r\n            this.customComponent.instance.inputClass = this.inputClass;\r\n            this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n            this.customComponent.instance.onEdited.subscribe(() => this.onEdited());\r\n            this.customComponent.instance.onClick.subscribe((event) => this.onClick(event));\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n}\r\nCustomEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CustomEditComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nCustomEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CustomEditComponent, selector: \"table-cell-custom-editor\", viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CustomEditComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'table-cell-custom-editor',\r\n                    template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] } });\n\nclass DefaultEditor {\r\n    constructor() {\r\n        this.onStopEditing = new EventEmitter();\r\n        this.onEdited = new EventEmitter();\r\n        this.onClick = new EventEmitter();\r\n    }\r\n    get disableEnterKeySave() {\r\n        return this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().disableEnterKeySave;\r\n    }\r\n}\r\nDefaultEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultEditor, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nDefaultEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DefaultEditor, selector: \"ng-component\", inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { onStopEditing: \"onStopEditing\", onEdited: \"onEdited\", onClick: \"onClick\" }, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultEditor, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    template: '',\r\n                }]\r\n        }], propDecorators: { cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], onStopEditing: [{\r\n                type: Output\r\n            }], onEdited: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: Output\r\n            }] } });\n\nclass SelectEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onSelectionChanged(newValue) {\r\n        this.cell.newValue = newValue;\r\n    }\r\n}\r\nSelectEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SelectEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nSelectEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: SelectEditorComponent, selector: \"select-editor\", usesInheritance: true, ngImport: i0, template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [value]=\"cell.newValue\"\r\n            (change)=\"onSelectionChanged($any($event.target).value)\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            [multiple]=\"cell.getColumn().getConfig()?.multiple\">\r\n            (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getRawValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `, isInline: true, directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: SelectEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'select-editor',\r\n                    template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [value]=\"cell.newValue\"\r\n            (change)=\"onSelectionChanged($any($event.target).value)\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            [multiple]=\"cell.getColumn().getConfig()?.multiple\">\r\n            (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getRawValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass TextareaEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nTextareaEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TextareaEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTextareaEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TextareaEditorComponent, selector: \"textarea-editor\", usesInheritance: true, ngImport: i0, template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"disableEnterKeySave || onEdited.emit()\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `, isInline: true, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"], directives: [{ type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TextareaEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'textarea-editor', template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"disableEnterKeySave || onEdited.emit()\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass CheckboxEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onChange(event) {\r\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n    }\r\n}\r\nCheckboxEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CheckboxEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCheckboxEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CheckboxEditorComponent, selector: \"checkbox-editor\", usesInheritance: true, ngImport: i0, template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `, isInline: true, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CheckboxEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'checkbox-editor', template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass CompleterEditorComponent extends DefaultEditor {\r\n    constructor(completerService) {\r\n        super();\r\n        this.completerService = completerService;\r\n        this.completerStr = '';\r\n    }\r\n    ngOnInit() {\r\n        this.completerStr = this.cell.getRawValue(); // initialize with current value\r\n        const config = this.completerConfig = this.cell.getColumn().getConfig().completer;\r\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n        config.dataService.descriptionField(config.descriptionField);\r\n    }\r\n    onEditedCompleter(event) {\r\n        this.cell.newValue = event.title;\r\n        return false;\r\n    }\r\n}\r\nCompleterEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CompleterEditorComponent, deps: [{ token: i1$2.CompleterService }], target: i0.ɵɵFactoryTarget.Component });\r\nCompleterEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CompleterEditorComponent, selector: \"completer-editor\", usesInheritance: true, ngImport: i0, template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"completerConfig.dataService\"\r\n                   [minSearchLength]=\"completerConfig.minSearchLength || 0\"\r\n                   [pause]=\"completerConfig.pause || 0\"\r\n                   [placeholder]=\"completerConfig.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `, isInline: true, components: [{ type: i1$2.CompleterCmp, selector: \"ng2-completer\", inputs: [\"inputName\", \"inputId\", \"pause\", \"minSearchLength\", \"maxChars\", \"overrideSuggested\", \"clearSelected\", \"clearUnselected\", \"fillHighlighted\", \"placeholder\", \"autoMatch\", \"disableInput\", \"autofocus\", \"openOnFocus\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"autoHighlight\", \"datasource\", \"dataService\", \"textNoResults\", \"textSearching\", \"matchClass\", \"fieldTabindex\", \"inputClass\", \"initialValue\"], outputs: [\"selected\", \"highlighted\", \"blur\", \"click\", \"focus\", \"opened\", \"keyup\", \"keydown\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CompleterEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'completer-editor',\r\n                    template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"completerConfig.dataService\"\r\n                   [minSearchLength]=\"completerConfig.minSearchLength || 0\"\r\n                   [pause]=\"completerConfig.pause || 0\"\r\n                   [placeholder]=\"completerConfig.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1$2.CompleterService }]; } });\n\nclass InputEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nInputEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: InputEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nInputEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: InputEditorComponent, selector: \"input-editor\", usesInheritance: true, ngImport: i0, template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"disableEnterKeySave || onEdited.emit()\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `, isInline: true, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"], directives: [{ type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: InputEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'input-editor', template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"disableEnterKeySave || onEdited.emit()\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass DefaultEditComponent extends EditCellDefault {\r\n    constructor() {\r\n        super();\r\n    }\r\n    getEditorType() {\r\n        const editor = this.cell.getColumn().editor;\r\n        if (!editor) {\r\n            return 'default';\r\n        }\r\n        return editor.type;\r\n    }\r\n}\r\nDefaultEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultEditComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nDefaultEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DefaultEditComponent, selector: \"table-cell-default-editor\", usesInheritance: true, ngImport: i0, template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\r\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\r\\n                   [cell]=\\\"cell\\\"\\r\\n                   [inputClass]=\\\"inputClass\\\"\\r\\n                   (onClick)=\\\"onClick($event)\\\"\\r\\n                   (onEdited)=\\\"onEdited()\\\"\\r\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </select-editor>\\r\\n\\r\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\"\\r\\n                     (onEdited)=\\\"onEdited()\\\"\\r\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </textarea-editor>\\r\\n\\r\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\">\\r\\n    </checkbox-editor>\\r\\n\\r\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\r\\n                      [cell]=\\\"cell\\\">\\r\\n    </completer-editor>\\r\\n\\r\\n    <input-editor *ngSwitchDefault\\r\\n                  [cell]=\\\"cell\\\"\\r\\n                  [inputClass]=\\\"inputClass\\\"\\r\\n                  (onClick)=\\\"onClick($event)\\\"\\r\\n                  (onEdited)=\\\"onEdited()\\\"\\r\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </input-editor>\\r\\n</div>\\r\\n\", components: [{ type: SelectEditorComponent, selector: \"select-editor\" }, { type: TextareaEditorComponent, selector: \"textarea-editor\" }, { type: CheckboxEditorComponent, selector: \"checkbox-editor\" }, { type: CompleterEditorComponent, selector: \"completer-editor\" }, { type: InputEditorComponent, selector: \"input-editor\" }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DefaultEditComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\r\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\r\\n                   [cell]=\\\"cell\\\"\\r\\n                   [inputClass]=\\\"inputClass\\\"\\r\\n                   (onClick)=\\\"onClick($event)\\\"\\r\\n                   (onEdited)=\\\"onEdited()\\\"\\r\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </select-editor>\\r\\n\\r\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\"\\r\\n                     (onEdited)=\\\"onEdited()\\\"\\r\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </textarea-editor>\\r\\n\\r\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\">\\r\\n    </checkbox-editor>\\r\\n\\r\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\r\\n                      [cell]=\\\"cell\\\">\\r\\n    </completer-editor>\\r\\n\\r\\n    <input-editor *ngSwitchDefault\\r\\n                  [cell]=\\\"cell\\\"\\r\\n                  [inputClass]=\\\"inputClass\\\"\\r\\n                  (onClick)=\\\"onClick($event)\\\"\\r\\n                  (onEdited)=\\\"onEdited()\\\"\\r\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </input-editor>\\r\\n</div>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass EditCellComponent {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.edited = new EventEmitter();\r\n        this.stopEditing = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.cell.resetValue();\r\n    }\r\n    getEditorType() {\r\n        const editor = this.cell.getColumn().editor;\r\n        if (!editor) {\r\n            return 'default';\r\n        }\r\n        return editor.type;\r\n    }\r\n}\r\nEditCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: EditCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nEditCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: EditCellComponent, selector: \"table-cell-edit-mode\", inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\", stopEditing: \"stopEditing\" }, ngImport: i0, template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"edited.emit()\"\r\n                                  (stopEditing)=\"stopEditing.emit()\"\r\n        ></table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                   [cell]=\"cell\"\r\n                                   [inputClass]=\"inputClass\"\r\n                                   (edited)=\"edited.emit()\"\r\n                                   (stopEditing)=\"stopEditing.emit()\"\r\n        ></table-cell-default-editor>\r\n      </div>\r\n    `, isInline: true, components: [{ type: CustomEditComponent, selector: \"table-cell-custom-editor\" }, { type: DefaultEditComponent, selector: \"table-cell-default-editor\" }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: EditCellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'table-cell-edit-mode',\r\n                    template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"edited.emit()\"\r\n                                  (stopEditing)=\"stopEditing.emit()\"\r\n        ></table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                   [cell]=\"cell\"\r\n                                   [inputClass]=\"inputClass\"\r\n                                   (edited)=\"edited.emit()\"\r\n                                   (stopEditing)=\"stopEditing.emit()\"\r\n        ></table-cell-default-editor>\r\n      </div>\r\n    `,\r\n                }]\r\n        }], propDecorators: { cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }], stopEditing: [{\r\n                type: Output\r\n            }] } });\n\nclass CellComponent {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.mode = 'inline';\r\n        this.isInEditing = false;\r\n    }\r\n    onEdited() {\r\n        if (this.isNew) {\r\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n        }\r\n        else {\r\n            this.grid.save(this.row, this.editConfirm);\r\n        }\r\n    }\r\n    onStopEditing() {\r\n        if (this.isNew) {\r\n            this.grid.createFormShown = false;\r\n            this.createCancel.emit({\r\n                discardedData: this.grid.getNewRow().getNewData(),\r\n                source: this.grid.source,\r\n            });\r\n        }\r\n        else {\r\n            this.row.isInEditing = false;\r\n            this.editCancel.emit({\r\n                data: this.row.getData(),\r\n                discardedData: this.row.getNewData(),\r\n                source: this.grid.source,\r\n            });\r\n        }\r\n    }\r\n}\r\nCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CellComponent, selector: \"angular2-smart-table-cell\", inputs: { grid: \"grid\", row: \"row\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\", isNew: \"isNew\", editConfirm: \"editConfirm\", editCancel: \"editCancel\", createConfirm: \"createConfirm\", createCancel: \"createCancel\" }, ngImport: i0, template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited()\"\r\n                          (stopEditing)=\"onStopEditing()\"\r\n    ></table-cell-edit-mode>\r\n  `, isInline: true, components: [{ type: ViewCellComponent, selector: \"table-cell-view-mode\", inputs: [\"cell\"] }, { type: EditCellComponent, selector: \"table-cell-edit-mode\", inputs: [\"cell\", \"inputClass\"], outputs: [\"edited\", \"stopEditing\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'angular2-smart-table-cell',\r\n                    template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited()\"\r\n                          (stopEditing)=\"onStopEditing()\"\r\n    ></table-cell-edit-mode>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], isInEditing: [{\r\n                type: Input\r\n            }], isNew: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }], editCancel: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], createCancel: [{\r\n                type: Input\r\n            }] } });\n\nclass TheadFormRowComponent {\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.addInputClass = this.grid.getSetting('add.inputClass');\r\n    }\r\n    getVisibleCells(cells) {\r\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\r\n    }\r\n}\r\nTheadFormRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadFormRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTheadFormRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TheadFormRowComponent, selector: \"[angular2-st-thead-form-row]\", inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\", createCancel: \"createCancel\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <td *ngIf=\"isMultiSelectVisible\"></td>\r\n    <td *ngIf=\"showActionColumnLeft\" class=\"angular2-smart-actions\">\r\n      <angular2-st-actions [grid]=\"grid\" [createConfirm]=\"createConfirm\" [createCancel]=\"createCancel\"></angular2-st-actions>\r\n    </td>\r\n    <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\r\n      <angular2-smart-table-cell\r\n        [cell]=\"cell\"\r\n        [grid]=\"grid\"\r\n        [isNew]=\"true\"\r\n        [createConfirm]=\"createConfirm\"\r\n        [createCancel]=\"createCancel\"\r\n        [inputClass]=\"addInputClass\"\r\n        [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n      ></angular2-smart-table-cell>\r\n    </td>\r\n    <td *ngIf=\"showActionColumnRight\" class=\"angular2-smart-actions\">\r\n      <angular2-st-actions [grid]=\"grid\" [createConfirm]=\"createConfirm\" [createCancel]=\"createCancel\"></angular2-st-actions>\r\n    </td>\r\n  `, isInline: true, components: [{ type: TheadCreateCancelComponent, selector: \"angular2-st-actions\", inputs: [\"grid\", \"createConfirm\", \"createCancel\"] }, { type: CellComponent, selector: \"angular2-smart-table-cell\", inputs: [\"grid\", \"row\", \"cell\", \"inputClass\", \"mode\", \"isInEditing\", \"isNew\", \"editConfirm\", \"editCancel\", \"createConfirm\", \"createCancel\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TheadFormRowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[angular2-st-thead-form-row]',\r\n                    template: `\r\n    <td *ngIf=\"isMultiSelectVisible\"></td>\r\n    <td *ngIf=\"showActionColumnLeft\" class=\"angular2-smart-actions\">\r\n      <angular2-st-actions [grid]=\"grid\" [createConfirm]=\"createConfirm\" [createCancel]=\"createCancel\"></angular2-st-actions>\r\n    </td>\r\n    <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\r\n      <angular2-smart-table-cell\r\n        [cell]=\"cell\"\r\n        [grid]=\"grid\"\r\n        [isNew]=\"true\"\r\n        [createConfirm]=\"createConfirm\"\r\n        [createCancel]=\"createCancel\"\r\n        [inputClass]=\"addInputClass\"\r\n        [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n      ></angular2-smart-table-cell>\r\n    </td>\r\n    <td *ngIf=\"showActionColumnRight\" class=\"angular2-smart-actions\">\r\n      <angular2-st-actions [grid]=\"grid\" [createConfirm]=\"createConfirm\" [createCancel]=\"createCancel\"></angular2-st-actions>\r\n    </td>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], createCancel: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxSmartTableTheadComponent {\r\n    constructor(tableService) {\r\n        this.tableService = tableService;\r\n        this.hide = new EventEmitter();\r\n        this.selectAllRows = new EventEmitter();\r\n        this.create = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isHideHeader = this.grid.getSetting('hideHeader');\r\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n    mouseMove(event) {\r\n        this.tableService.mouseMoveEvent$.next(event);\r\n    }\r\n}\r\nNgxSmartTableTheadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NgxSmartTableTheadComponent, deps: [{ token: TableService }], target: i0.ɵɵFactoryTarget.Component });\r\nNgxSmartTableTheadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: NgxSmartTableTheadComponent, selector: \"[angular2-st-thead]\", inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\", createCancel: \"createCancel\" }, outputs: { hide: \"hide\", selectAllRows: \"selectAllRows\", create: \"create\" }, host: { listeners: { \"mousemove\": \"mouseMove($event)\" } }, usesOnChanges: true, ngImport: i0, template: \"<tr angular2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\r\\n    class=\\\"angular2-smart-titles\\\"\\r\\n    [grid]=\\\"grid\\\"\\r\\n    [isAllSelected]=\\\"isAllSelected\\\"\\r\\n    [source]=\\\"source\\\"\\r\\n    (hide)=\\\"hide.emit($event)\\\"\\r\\n    (selectAllRows)=\\\"selectAllRows.emit()\\\"\\r\\n></tr>\\r\\n\\r\\n<tr angular2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\r\\n    class=\\\"angular2-smart-filters\\\"\\r\\n    [grid]=\\\"grid\\\"\\r\\n    [source]=\\\"source\\\"\\r\\n    (create)=\\\"create.emit($event)\\\"\\r\\n></tr>\\r\\n\\r\\n<tr angular2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\r\\n    [grid]=\\\"grid\\\"\\r\\n    [createConfirm]=\\\"createConfirm\\\"\\r\\n    [createCancel]=\\\"createCancel\\\"\\r\\n></tr>\\r\\n\", styles: [\":host ::ng-deep angular2-st-actions a:first-child{margin-right:.25rem}\\n\"], components: [{ type: TheadTitlesRowComponent, selector: \"[angular2-st-thead-titles-row]\", inputs: [\"grid\", \"isAllSelected\", \"source\"], outputs: [\"hide\", \"selectAllRows\"] }, { type: TheadFitlersRowComponent, selector: \"[angular2-st-thead-filters-row]\", inputs: [\"grid\", \"source\"], outputs: [\"create\"] }, { type: TheadFormRowComponent, selector: \"[angular2-st-thead-form-row]\", inputs: [\"grid\", \"row\", \"createConfirm\", \"createCancel\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NgxSmartTableTheadComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: '[angular2-st-thead]', template: \"<tr angular2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\r\\n    class=\\\"angular2-smart-titles\\\"\\r\\n    [grid]=\\\"grid\\\"\\r\\n    [isAllSelected]=\\\"isAllSelected\\\"\\r\\n    [source]=\\\"source\\\"\\r\\n    (hide)=\\\"hide.emit($event)\\\"\\r\\n    (selectAllRows)=\\\"selectAllRows.emit()\\\"\\r\\n></tr>\\r\\n\\r\\n<tr angular2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\r\\n    class=\\\"angular2-smart-filters\\\"\\r\\n    [grid]=\\\"grid\\\"\\r\\n    [source]=\\\"source\\\"\\r\\n    (create)=\\\"create.emit($event)\\\"\\r\\n></tr>\\r\\n\\r\\n<tr angular2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\r\\n    [grid]=\\\"grid\\\"\\r\\n    [createConfirm]=\\\"createConfirm\\\"\\r\\n    [createCancel]=\\\"createCancel\\\"\\r\\n></tr>\\r\\n\", styles: [\":host ::ng-deep angular2-st-actions a:first-child{margin-right:.25rem}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: TableService }]; }, propDecorators: { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], isAllSelected: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], createCancel: [{\r\n                type: Input\r\n            }], hide: [{\r\n                type: Output\r\n            }], selectAllRows: [{\r\n                type: Output\r\n            }], create: [{\r\n                type: Output\r\n            }], mouseMove: [{\r\n                type: HostListener,\r\n                args: ['mousemove', ['$event']]\r\n            }] } });\n\nclass TbodyCustomItemComponent {\r\n    ngOnInit() {\r\n        this.customComponent = this.dynamicTarget.createComponent(this.action.renderComponent);\r\n        Object.assign(this.customComponent.instance, this.getPatch());\r\n    }\r\n    ngOnDestroy() {\r\n        this.customComponent.destroy();\r\n    }\r\n    getPatch() {\r\n        return {\r\n            action: this.action,\r\n            rowData: this.row.getData(),\r\n        };\r\n    }\r\n}\r\nTbodyCustomItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyCustomItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTbodyCustomItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TbodyCustomItemComponent, selector: \"angular2-st-tbody-custom-item\", inputs: { action: \"action\", row: \"row\" }, viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyCustomItemComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'angular2-st-tbody-custom-item',\r\n                    template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { action: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] } });\n\nclass TbodyCustomComponent {\r\n    constructor() {\r\n        this.custom = new EventEmitter();\r\n    }\r\n    get customActions() {\r\n        return this.grid.getSetting('actions.custom') ?? [];\r\n    }\r\n    onCustom(action, event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.custom.emit({\r\n            action: action.name,\r\n            row: this.row,\r\n            data: this.row.getData(),\r\n            source: this.source,\r\n        });\r\n    }\r\n}\r\nTbodyCustomComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyCustomComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTbodyCustomComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TbodyCustomComponent, selector: \"angular2-st-tbody-custom\", inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, ngImport: i0, template: `\r\n    <ng-container *ngFor=\"let action of customActions\">\r\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\r\n         *ngIf=\"!action.renderComponent\"\r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\r\n         *ngIf=\"action.renderComponent\"\r\n         (click)=\"onCustom(action, $event)\">\r\n        <angular2-st-tbody-custom-item class=\"angular2-smart-action angular2-smart-action-custom-custom\"\r\n                                  [action]=\"action\"\r\n                                  [row]=\"row\"></angular2-st-tbody-custom-item>\r\n      </a>\r\n\r\n    </ng-container>\r\n  `, isInline: true, components: [{ type: TbodyCustomItemComponent, selector: \"angular2-st-tbody-custom-item\", inputs: [\"action\", \"row\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyCustomComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'angular2-st-tbody-custom',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n    <ng-container *ngFor=\"let action of customActions\">\r\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\r\n         *ngIf=\"!action.renderComponent\"\r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\r\n         *ngIf=\"action.renderComponent\"\r\n         (click)=\"onCustom(action, $event)\">\r\n        <angular2-st-tbody-custom-item class=\"angular2-smart-action angular2-smart-action-custom-custom\"\r\n                                  [action]=\"action\"\r\n                                  [row]=\"row\"></angular2-st-tbody-custom-item>\r\n      </a>\r\n\r\n    </ng-container>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], custom: [{\r\n                type: Output\r\n            }] } });\n\nclass TbodyExpandRowComponent {\r\n    constructor() {\r\n        this.onExpandRow = new EventEmitter();\r\n        this.bypassSecurityTrust = 'none';\r\n        this.hiddenWhenFunction = (_) => false;\r\n        this.disabledWhenFunction = (_) => false;\r\n    }\r\n    get visible() {\r\n        return !this.hiddenWhenFunction(this.row);\r\n    }\r\n    get disabled() {\r\n        return this.disabledWhenFunction(this.row);\r\n    }\r\n    onExpand(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!this.disabled) {\r\n            this.onExpandRow.emit(this.row);\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        this.buttonContent = this.grid.settings.expand?.buttonContent ?? this.grid.settings.expand?.expandRowButtonContent ?? 'Expand';\r\n        this.bypassSecurityTrust = this.grid.settings.expand?.sanitizer?.bypassHtml ? 'html' : 'none';\r\n        this.hiddenWhenFunction = this.grid.settings.expand?.hiddenWhen ?? this.hiddenWhenFunction;\r\n        this.disabledWhenFunction = this.grid.settings.expand?.disabledWhen ?? this.disabledWhenFunction;\r\n    }\r\n}\r\nTbodyExpandRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyExpandRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTbodyExpandRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TbodyExpandRowComponent, selector: \"angular2-st-tbody-expand\", inputs: { grid: \"grid\", row: \"row\" }, outputs: { onExpandRow: \"onExpandRow\" }, usesOnChanges: true, ngImport: i0, template: `\r\n      <a *ngIf=\"visible\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-expand-expand\"\r\n         [ngClass]=\"{'not-allowed': disabled}\"\r\n         [innerHTML]=\"buttonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onExpand($event)\"></a>\r\n    `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"bypassSecurityTrust\": BypassSecurityTrustPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyExpandRowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'angular2-st-tbody-expand',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n      <a *ngIf=\"visible\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-expand-expand\"\r\n         [ngClass]=\"{'not-allowed': disabled}\"\r\n         [innerHTML]=\"buttonContent | bypassSecurityTrust: bypassSecurityTrust\" (click)=\"onExpand($event)\"></a>\r\n    `,\r\n                }]\r\n        }], ctorParameters: function () { return []; }, propDecorators: { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], onExpandRow: [{\r\n                type: Output\r\n            }] } });\n\nclass TbodyEditDeleteComponent {\r\n    constructor() {\r\n        this.edit = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.editRowSelect = new EventEmitter();\r\n        this.editButtonBypassSecurityTrust = 'none';\r\n        this.editHiddenWhenFunction = (_) => false;\r\n        this.editDisabledWhenFunction = (_) => false;\r\n        this.deleteHiddenWhenFunction = (_) => false;\r\n        this.deleteDisabledWhenFunction = (_) => false;\r\n        this.deleteButtonBypassSecurityTrust = 'none';\r\n    }\r\n    onEdit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.editDisabled)\r\n            return;\r\n        this.editRowSelect.emit(this.row);\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.edit.emit({\r\n                row: this.row,\r\n                data: this.row.getData(),\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.edit(this.row);\r\n        }\r\n    }\r\n    onDelete(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.deleteDisabled)\r\n            return;\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.delete.emit({\r\n                row: this.row,\r\n                data: this.row.getData(),\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.delete(this.row, this.deleteConfirm);\r\n        }\r\n    }\r\n    get editVisible() {\r\n        return !this.editHiddenWhenFunction(this.row);\r\n    }\r\n    get editDisabled() {\r\n        return this.editDisabledWhenFunction(this.row);\r\n    }\r\n    get deleteVisible() {\r\n        return !this.deleteHiddenWhenFunction(this.row);\r\n    }\r\n    get deleteDisabled() {\r\n        return this.deleteDisabledWhenFunction(this.row);\r\n    }\r\n    ngOnChanges() {\r\n        const actions = this.grid.settings.actions;\r\n        if (actions === false || actions === undefined) {\r\n            // handle the \"flexibility\" of this property....\r\n            this.editHiddenWhenFunction = (_) => (actions === false);\r\n            this.deleteHiddenWhenFunction = (_) => (actions === false);\r\n            return;\r\n        }\r\n        this.editRowButtonContent = this.grid.settings.edit?.editButtonContent ?? 'Edit';\r\n        this.editButtonBypassSecurityTrust = this.grid.settings.edit?.sanitizer?.bypassHtml ? 'html' : 'none';\r\n        this.editHiddenWhenFunction = this.grid.settings.edit?.hiddenWhen ?? ((_) => (actions.edit === false));\r\n        this.editDisabledWhenFunction = this.grid.settings.edit?.disabledWhen ?? this.editDisabledWhenFunction;\r\n        this.deleteRowButtonContent = this.grid.settings.delete?.deleteButtonContent ?? 'Delete';\r\n        this.deleteButtonBypassSecurityTrust = this.grid.settings.delete?.sanitizer?.bypassHtml ? 'html' : 'none';\r\n        this.deleteHiddenWhenFunction = this.grid.settings.delete?.hiddenWhen ?? ((_) => (actions.delete === false));\r\n        this.deleteDisabledWhenFunction = this.grid.settings.delete?.disabledWhen ?? this.deleteDisabledWhenFunction;\r\n    }\r\n}\r\nTbodyEditDeleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyEditDeleteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTbodyEditDeleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TbodyEditDeleteComponent, selector: \"angular2-st-tbody-edit-delete\", inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <a href=\"#\" *ngIf=\"editVisible\" class=\"angular2-smart-action angular2-smart-action-edit-edit\"\r\n       [ngClass]=\"{'not-allowed': editDisabled}\"\r\n       [innerHTML]=\"editRowButtonContent | bypassSecurityTrust: editButtonBypassSecurityTrust\"\r\n       (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"deleteVisible\" class=\"angular2-smart-action angular2-smart-action-delete-delete\"\r\n       [ngClass]=\"{'not-allowed': deleteDisabled}\"\r\n       [innerHTML]=\"deleteRowButtonContent | bypassSecurityTrust: deleteButtonBypassSecurityTrust\" (click)=\"onDelete($event)\"></a>\r\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"bypassSecurityTrust\": BypassSecurityTrustPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodyEditDeleteComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'angular2-st-tbody-edit-delete',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n    <a href=\"#\" *ngIf=\"editVisible\" class=\"angular2-smart-action angular2-smart-action-edit-edit\"\r\n       [ngClass]=\"{'not-allowed': editDisabled}\"\r\n       [innerHTML]=\"editRowButtonContent | bypassSecurityTrust: editButtonBypassSecurityTrust\"\r\n       (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"deleteVisible\" class=\"angular2-smart-action angular2-smart-action-delete-delete\"\r\n       [ngClass]=\"{'not-allowed': deleteDisabled}\"\r\n       [innerHTML]=\"deleteRowButtonContent | bypassSecurityTrust: deleteButtonBypassSecurityTrust\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], deleteConfirm: [{\r\n                type: Input\r\n            }], edit: [{\r\n                type: Output\r\n            }], delete: [{\r\n                type: Output\r\n            }], editRowSelect: [{\r\n                type: Output\r\n            }] } });\n\nclass TbodySaveCancelComponent {\r\n    constructor() {\r\n        this.bypassSecurityTrust = 'none';\r\n    }\r\n    onSave(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.grid.save(this.row, this.editConfirm);\r\n    }\r\n    onCancelEdit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.row.isInEditing = false;\r\n        this.editCancel.emit({\r\n            data: this.row.getData(),\r\n            discardedData: this.row.getNewData(),\r\n            source: this.grid.source,\r\n        });\r\n    }\r\n    ngOnChanges() {\r\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\r\n        this.bypassSecurityTrust = this.grid.settings.edit?.sanitizer?.bypassHtml ? 'html' : 'none';\r\n    }\r\n}\r\nTbodySaveCancelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodySaveCancelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nTbodySaveCancelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: TbodySaveCancelComponent, selector: \"angular2-st-tbody-create-cancel\", inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", editCancel: \"editCancel\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TbodySaveCancelComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    // TODO: @breaking-change rename the selector to angular2-st-tbody-save-cancel in the next major version\r\n                    selector: 'angular2-st-tbody-create-cancel',\r\n                    template: `\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n                }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }], editCancel: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxSmartTableTbodyComponent {\r\n    constructor() {\r\n        this.edit = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.custom = new EventEmitter();\r\n        this.userSelectRow = new EventEmitter();\r\n        this.editRowSelect = new EventEmitter();\r\n        this.multipleSelectRow = new EventEmitter();\r\n        this.rowHover = new EventEmitter();\r\n        this.onExpandRow = new EventEmitter();\r\n        this.hasChildComponent = false;\r\n    }\r\n    ngAfterViewInit() {\r\n        let cmp = this.getExpandedRowComponentFromSettings();\r\n        if (cmp && !this.expandedRowComponent) {\r\n            this.expandedRowChild.forEach(c => c.clear());\r\n            this.hasChildComponent = true;\r\n            this.createCustomComponent();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.expandedRowComponent)\r\n            this.expandedRowComponent.destroy();\r\n    }\r\n    getExpandedRowComponentFromSettings() {\r\n        return this.grid.settings.expand?.component ?? this.grid.settings.expandedRowComponent;\r\n    }\r\n    createCustomComponent() {\r\n        let cmp = this.getExpandedRowComponentFromSettings();\r\n        if (cmp) {\r\n            this.expandedRowChild.changes\r\n                .pipe(delay(0))\r\n                .subscribe((list) => {\r\n                if (list.length) {\r\n                    this.expandedRowComponent = list.first.createComponent(cmp);\r\n                    Object.assign(this.expandedRowComponent.instance, this.grid.dataSet.expandRow, {\r\n                        rowData: this.grid.dataSet.getExpandedRow().getData(),\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    get tableColumnsCount() {\r\n        const actionColumn = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n        const selectColumn = this.isMultiSelectVisible ? 1 : 0;\r\n        return this.grid.getColumns().length + actionColumn + selectColumn;\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.mode = this.grid.getSetting('mode');\r\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.isActionAdd = this.grid.getSetting('actions.add');\r\n        this.isActionEdit = this.grid.getSetting('actions.edit');\r\n        this.isActionDelete = this.grid.getSetting('actions.delete');\r\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n    }\r\n    getVisibleCells(cells) {\r\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\r\n    }\r\n    onExpandRowClick(row) {\r\n        this.onExpandRow.emit(row);\r\n    }\r\n}\r\nNgxSmartTableTbodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NgxSmartTableTbodyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nNgxSmartTableTbodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: NgxSmartTableTbodyComponent, selector: \"[angular2-st-tbody]\", inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", editCancel: \"editCancel\", rowClassFunction: \"rowClassFunction\" }, outputs: { edit: \"edit\", delete: \"delete\", custom: \"custom\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\", onExpandRow: \"onExpandRow\" }, viewQueries: [{ propertyName: \"expandedRowChild\", predicate: [\"expandedRowChild\"], descendants: true, read: ViewContainerRef }], usesOnChanges: true, ngImport: i0, template: \"<ng-container  *ngFor=\\\"let row of grid.getRows()\\\">\\r\\n  <tr (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"angular2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\r\\n    <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"angular2-smart-actions angular2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [ngModel]=\\\"row.isSelected\\\">\\r\\n    </td>\\r\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"angular2-smart-actions\\\">\\r\\n\\r\\n      <angular2-st-tbody-custom\\r\\n        [grid]=\\\"grid\\\"\\r\\n        (custom)=\\\"custom.emit($event)\\\"\\r\\n        [row]=\\\"row\\\"\\r\\n        [source]=\\\"source\\\">\\r\\n      </angular2-st-tbody-custom>\\r\\n\\r\\n      <angular2-st-tbody-expand\\r\\n          *ngIf=\\\"hasChildComponent\\\"\\r\\n          [grid]=\\\"grid\\\"\\r\\n          [row]=\\\"row\\\"\\r\\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\r\\n      </angular2-st-tbody-expand>\\r\\n\\r\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                                (edit)=\\\"edit.emit($event)\\\"\\r\\n                                (delete)=\\\"delete.emit($event)\\\"\\r\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\r\\n                                [row]=\\\"row\\\"\\r\\n                                [source]=\\\"source\\\">\\r\\n      </angular2-st-tbody-edit-delete>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"angular2-smart-actions\\\">\\r\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\" [editCancel]=\\\"editCancel\\\"></angular2-st-tbody-create-cancel>\\r\\n    </td>\\r\\n    <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\r\\n      <angular2-smart-table-cell [cell]=\\\"cell\\\"\\r\\n                            [grid]=\\\"grid\\\"\\r\\n                            [row]=\\\"row\\\"\\r\\n                            [isNew]=\\\"false\\\"\\r\\n                            [mode]=\\\"mode\\\"\\r\\n                            [editConfirm]=\\\"editConfirm\\\"\\r\\n                            [editCancel]=\\\"editCancel\\\"\\r\\n                            [inputClass]=\\\"editInputClass\\\"\\r\\n                            [isInEditing]=\\\"row.isInEditing\\\">\\r\\n      </angular2-smart-table-cell>\\r\\n    </td>\\r\\n\\r\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"angular2-smart-actions\\\">\\r\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\" [editCancel]=\\\"editCancel\\\"></angular2-st-tbody-create-cancel>\\r\\n    </td>\\r\\n\\r\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"angular2-smart-actions\\\">\\r\\n      <angular2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></angular2-st-tbody-custom>\\r\\n\\r\\n      <angular2-st-tbody-expand\\r\\n          *ngIf=\\\"hasChildComponent\\\"\\r\\n          [grid]=\\\"grid\\\"\\r\\n          [row]=\\\"row\\\"\\r\\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\r\\n      </angular2-st-tbody-expand>\\r\\n\\r\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                                [row]=\\\"row\\\"\\r\\n                                [source]=\\\"source\\\"\\r\\n                                (edit)=\\\"edit.emit($event)\\\"\\r\\n                                (delete)=\\\"delete.emit($event)\\\"\\r\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\r\\n      </angular2-st-tbody-edit-delete>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr class=\\\"angular2-smart-row angular2-smart-row-detail\\\" *ngIf=\\\"row.isExpanded\\\">\\r\\n    <td [attr.colspan]=\\\"tableColumnsCount\\\" class=\\\"angular2-smart-column-expandedDetail\\\">\\r\\n      <ng-template #expandedRowChild ></ng-template>\\r\\n    </td>\\r\\n  </tr>\\r\\n</ng-container>\\r\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\r\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\r\\n    {{ noDataMessage }}\\r\\n  </td>\\r\\n</tr>\\r\\n\", styles: [\":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-st-tbody-expand a:first-child{margin-right:.25rem}\\n\"], components: [{ type: TbodyCustomComponent, selector: \"angular2-st-tbody-custom\", inputs: [\"grid\", \"row\", \"source\"], outputs: [\"custom\"] }, { type: TbodyExpandRowComponent, selector: \"angular2-st-tbody-expand\", inputs: [\"grid\", \"row\"], outputs: [\"onExpandRow\"] }, { type: TbodyEditDeleteComponent, selector: \"angular2-st-tbody-edit-delete\", inputs: [\"grid\", \"row\", \"source\", \"deleteConfirm\"], outputs: [\"edit\", \"delete\", \"editRowSelect\"] }, { type: TbodySaveCancelComponent, selector: \"angular2-st-tbody-create-cancel\", inputs: [\"grid\", \"row\", \"editConfirm\", \"editCancel\"] }, { type: CellComponent, selector: \"angular2-smart-table-cell\", inputs: [\"grid\", \"row\", \"cell\", \"inputClass\", \"mode\", \"isInEditing\", \"isNew\", \"editConfirm\", \"editCancel\", \"createConfirm\", \"createCancel\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: NgxSmartTableTbodyComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: '[angular2-st-tbody]', template: \"<ng-container  *ngFor=\\\"let row of grid.getRows()\\\">\\r\\n  <tr (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"angular2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\r\\n    <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"angular2-smart-actions angular2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [ngModel]=\\\"row.isSelected\\\">\\r\\n    </td>\\r\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"angular2-smart-actions\\\">\\r\\n\\r\\n      <angular2-st-tbody-custom\\r\\n        [grid]=\\\"grid\\\"\\r\\n        (custom)=\\\"custom.emit($event)\\\"\\r\\n        [row]=\\\"row\\\"\\r\\n        [source]=\\\"source\\\">\\r\\n      </angular2-st-tbody-custom>\\r\\n\\r\\n      <angular2-st-tbody-expand\\r\\n          *ngIf=\\\"hasChildComponent\\\"\\r\\n          [grid]=\\\"grid\\\"\\r\\n          [row]=\\\"row\\\"\\r\\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\r\\n      </angular2-st-tbody-expand>\\r\\n\\r\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                                (edit)=\\\"edit.emit($event)\\\"\\r\\n                                (delete)=\\\"delete.emit($event)\\\"\\r\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\r\\n                                [row]=\\\"row\\\"\\r\\n                                [source]=\\\"source\\\">\\r\\n      </angular2-st-tbody-edit-delete>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"angular2-smart-actions\\\">\\r\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\" [editCancel]=\\\"editCancel\\\"></angular2-st-tbody-create-cancel>\\r\\n    </td>\\r\\n    <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\r\\n      <angular2-smart-table-cell [cell]=\\\"cell\\\"\\r\\n                            [grid]=\\\"grid\\\"\\r\\n                            [row]=\\\"row\\\"\\r\\n                            [isNew]=\\\"false\\\"\\r\\n                            [mode]=\\\"mode\\\"\\r\\n                            [editConfirm]=\\\"editConfirm\\\"\\r\\n                            [editCancel]=\\\"editCancel\\\"\\r\\n                            [inputClass]=\\\"editInputClass\\\"\\r\\n                            [isInEditing]=\\\"row.isInEditing\\\">\\r\\n      </angular2-smart-table-cell>\\r\\n    </td>\\r\\n\\r\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"angular2-smart-actions\\\">\\r\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\" [editCancel]=\\\"editCancel\\\"></angular2-st-tbody-create-cancel>\\r\\n    </td>\\r\\n\\r\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"angular2-smart-actions\\\">\\r\\n      <angular2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></angular2-st-tbody-custom>\\r\\n\\r\\n      <angular2-st-tbody-expand\\r\\n          *ngIf=\\\"hasChildComponent\\\"\\r\\n          [grid]=\\\"grid\\\"\\r\\n          [row]=\\\"row\\\"\\r\\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\r\\n      </angular2-st-tbody-expand>\\r\\n\\r\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                                [row]=\\\"row\\\"\\r\\n                                [source]=\\\"source\\\"\\r\\n                                (edit)=\\\"edit.emit($event)\\\"\\r\\n                                (delete)=\\\"delete.emit($event)\\\"\\r\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\r\\n      </angular2-st-tbody-edit-delete>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr class=\\\"angular2-smart-row angular2-smart-row-detail\\\" *ngIf=\\\"row.isExpanded\\\">\\r\\n    <td [attr.colspan]=\\\"tableColumnsCount\\\" class=\\\"angular2-smart-column-expandedDetail\\\">\\r\\n      <ng-template #expandedRowChild ></ng-template>\\r\\n    </td>\\r\\n  </tr>\\r\\n</ng-container>\\r\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\r\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\r\\n    {{ noDataMessage }}\\r\\n  </td>\\r\\n</tr>\\r\\n\", styles: [\":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-st-tbody-expand a:first-child{margin-right:.25rem}\\n\"] }]\r\n        }], propDecorators: { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], deleteConfirm: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }], editCancel: [{\r\n                type: Input\r\n            }], rowClassFunction: [{\r\n                type: Input\r\n            }], edit: [{\r\n                type: Output\r\n            }], delete: [{\r\n                type: Output\r\n            }], custom: [{\r\n                type: Output\r\n            }], userSelectRow: [{\r\n                type: Output\r\n            }], editRowSelect: [{\r\n                type: Output\r\n            }], multipleSelectRow: [{\r\n                type: Output\r\n            }], rowHover: [{\r\n                type: Output\r\n            }], onExpandRow: [{\r\n                type: Output\r\n            }], expandedRowChild: [{\r\n                type: ViewChildren,\r\n                args: ['expandedRowChild', { read: ViewContainerRef }]\r\n            }] } });\n\nclass PagerComponent {\r\n    constructor() {\r\n        this.count = 0;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                this.page = this.source.getPaging().page;\r\n                this.perPage = this.source.getPaging().perPage;\r\n                this.currentPerPage = this.perPage;\r\n                this.count = this.source.count();\r\n                if (this.isPageOutOfBounce()) {\r\n                    this.source.setPage(--this.page);\r\n                }\r\n                this.processPageChange(dataChanges);\r\n                this.initPages();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * We change the page here depending on the action performed against data source\r\n     * if a new element was added to the end of the table - then change the page to the last\r\n     * if a new element was added to the beginning of the table - then to the first page\r\n     * @param changes\r\n     */\r\n    processPageChange(changes) {\r\n        if (changes.action === 'prepend') {\r\n            this.source.setPage(1);\r\n        }\r\n        if (changes.action === 'append') {\r\n            this.source.setPage(this.getLast());\r\n        }\r\n    }\r\n    shouldShow() {\r\n        return this.source.count() > this.perPage;\r\n    }\r\n    paginate(page) {\r\n        this.source.setPage(page);\r\n        this.page = page;\r\n        return false;\r\n    }\r\n    next() {\r\n        return this.paginate(this.getPage() + 1);\r\n    }\r\n    prev() {\r\n        return this.paginate(this.getPage() - 1);\r\n    }\r\n    getPage() {\r\n        return this.page;\r\n    }\r\n    getPages() {\r\n        return this.pages;\r\n    }\r\n    getLast() {\r\n        return Math.ceil(this.count / this.perPage);\r\n    }\r\n    isPageOutOfBounce() {\r\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n    }\r\n    initPages() {\r\n        const pagesCount = this.getLast();\r\n        let showPagesCount = 4;\r\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n        this.pages = [];\r\n        if (this.shouldShow()) {\r\n            let middleOne = Math.ceil(showPagesCount / 2);\r\n            middleOne = this.page >= middleOne ? this.page : middleOne;\r\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n            const firstOne = lastOne - showPagesCount + 1;\r\n            for (let i = firstOne; i <= lastOne; i++) {\r\n                this.pages.push(i);\r\n            }\r\n        }\r\n    }\r\n    onChangePerPage(event) {\r\n        if (this.currentPerPage) {\r\n            this.source.getPaging().perPage = this.currentPerPage * 1;\r\n            this.source.refresh();\r\n            this.initPages();\r\n        }\r\n    }\r\n}\r\nPagerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PagerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nPagerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: PagerComponent, selector: \"angular2-smart-table-pager\", inputs: { source: \"source\", perPageSelect: \"perPageSelect\", perPageSelectLabel: \"perPageSelectLabel\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"angular2-smart-pagination-nav\">\r\n      <ul class=\"angular2-smart-pagination pagination\">\r\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"angular2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"angular2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"angular2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"angular2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"angular2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"angular2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div *ngIf=\"!shouldShow()\"><!-- placeholder to consume the space of the page selection --></div>\r\n\r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"angular2-smart-pagination-per-page\">\r\n      <label for=\"per-page\" *ngIf=\"perPageSelectLabel\">{{perPageSelectLabel}}</label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `, isInline: true, styles: [\".angular2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination .angular2-smart-page-item{display:inline}.angular2-smart-pagination .page-link-next,.angular2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host ul{margin:1rem 0}:host select{margin:1rem 0}:host label{margin:1rem 1rem 1rem 0;line-height:2.5rem}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PagerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'angular2-smart-table-pager', template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"angular2-smart-pagination-nav\">\r\n      <ul class=\"angular2-smart-pagination pagination\">\r\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"angular2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"angular2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"angular2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"angular2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"angular2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"angular2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div *ngIf=\"!shouldShow()\"><!-- placeholder to consume the space of the page selection --></div>\r\n\r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"angular2-smart-pagination-per-page\">\r\n      <label for=\"per-page\" *ngIf=\"perPageSelectLabel\">{{perPageSelectLabel}}</label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `, styles: [\".angular2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination .angular2-smart-page-item{display:inline}.angular2-smart-pagination .page-link-next,.angular2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host ul{margin:1rem 0}:host select{margin:1rem 0}:host label{margin:1rem 1rem 1rem 0;line-height:2.5rem}\\n\"] }]\r\n        }], propDecorators: { source: [{\r\n                type: Input\r\n            }], perPageSelect: [{\r\n                type: Input\r\n            }], perPageSelectLabel: [{\r\n                type: Input\r\n            }] } });\n\nclass Angular2SmartTableComponent {\r\n    constructor() {\r\n        this.settings = {};\r\n        this.rowSelect = new EventEmitter();\r\n        this.userRowSelect = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.create = new EventEmitter();\r\n        this.custom = new EventEmitter();\r\n        this.deleteConfirm = new EventEmitter();\r\n        this.editConfirm = new EventEmitter();\r\n        this.editCancel = new EventEmitter();\r\n        this.createConfirm = new EventEmitter();\r\n        this.createCancel = new EventEmitter();\r\n        this.rowHover = new EventEmitter();\r\n        this.afterGridInit = new EventEmitter();\r\n        this.perPageSelect = [];\r\n        this.perPageSelectLabel = 'Per Page:';\r\n        this.defaultSettings = {\r\n            mode: 'inline',\r\n            selectMode: 'single',\r\n            /**\r\n             * Points to an element in all data\r\n             *\r\n             * when < 0 all lines must be deselected\r\n             */\r\n            selectedRowIndex: 0,\r\n            switchPageToSelectedRowPage: false,\r\n            hideHeader: false,\r\n            hideSubHeader: false,\r\n            resizable: false,\r\n            hideable: false,\r\n            actions: {\r\n                columnTitle: 'Actions',\r\n                add: true,\r\n                edit: true,\r\n                delete: true,\r\n                custom: [],\r\n                position: 'left', // left|right\r\n            },\r\n            filter: {\r\n                inputClass: '',\r\n            },\r\n            edit: {\r\n                inputClass: '',\r\n                editButtonContent: 'Edit',\r\n                saveButtonContent: 'Update',\r\n                cancelButtonContent: 'Cancel',\r\n                confirmSave: false,\r\n            },\r\n            add: {\r\n                inputClass: '',\r\n                addButtonContent: 'Add New',\r\n                createButtonContent: 'Create',\r\n                cancelButtonContent: 'Cancel',\r\n                confirmCreate: false,\r\n            },\r\n            delete: {\r\n                deleteButtonContent: 'Delete',\r\n                confirmDelete: false,\r\n            },\r\n            expand: {\r\n                buttonContent: 'Expand'\r\n            },\r\n            attr: {\r\n                id: '',\r\n                class: '',\r\n            },\r\n            noDataMessage: 'No data found',\r\n            columns: {},\r\n            pager: {\r\n                display: true,\r\n                page: 1,\r\n                perPage: 10,\r\n            },\r\n            rowClassFunction: () => '',\r\n        };\r\n        this.isAllSelected = false;\r\n        this.destroyed$ = new Subject();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.grid) {\r\n            if (changes['settings']) {\r\n                this.grid.setSettings(this.prepareSettings());\r\n            }\r\n            if (changes['source']) {\r\n                this.source = this.prepareSource();\r\n                this.grid.setSource(this.source);\r\n            }\r\n        }\r\n        else {\r\n            this.initGrid();\r\n        }\r\n        this.tableId = this.grid.getSetting('attr.id');\r\n        this.tableClass = this.grid.getSetting('attr.class');\r\n        this.isHideHeader = this.grid.getSetting('hideHeader');\r\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect', this.perPageSelect);\r\n        this.perPageSelectLabel = this.grid.getSetting('pager.perPageSelectLabel', this.perPageSelectLabel);\r\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed$.next();\r\n    }\r\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\r\n        if (!this.grid) {\r\n            return;\r\n        }\r\n        this.grid.settings.selectedRowIndex = index;\r\n        if (this.isIndexOutOfRange(index)) {\r\n            // we need to deselect all rows if we got an incorrect index\r\n            this.grid.dataSet.deselectAll();\r\n            this.emitSelectRow(null);\r\n            return;\r\n        }\r\n        if (switchPageToSelectedRowPage) {\r\n            const source = this.source;\r\n            const paging = source.getPaging();\r\n            const page = getPageForRowIndex(index, paging.perPage);\r\n            index = index % paging.perPage;\r\n            this.grid.settings.selectedRowIndex = index;\r\n            if (page !== paging.page) {\r\n                source.setPage(page);\r\n                return;\r\n            }\r\n        }\r\n        const row = this.grid.getRows()[index];\r\n        if (row) {\r\n            this.grid.selectRow(row);\r\n            this.emitSelectRow(row);\r\n        }\r\n    }\r\n    onEditRowSelect(row) {\r\n        if (this.grid.getSetting('selectMode') === 'single') {\r\n            this.grid.selectRow(row);\r\n            this.emitSelectRow(row);\r\n        }\r\n    }\r\n    onUserSelectRow(row) {\r\n        if (this.grid.getSetting('selectMode') === 'single') {\r\n            this.grid.selectRow(row);\r\n            this.emitUserSelectRow(row);\r\n        }\r\n    }\r\n    onRowHover(row) {\r\n        this.rowHover.emit(row);\r\n    }\r\n    onMultipleSelectRow(row) {\r\n        this.grid.multipleSelectRow(row);\r\n        // TODO: currently we make our life easy and just deselect the \"select all\" checkbox when needed\r\n        //       but we do not check it, when we determine that the user has selected everything\r\n        if (!row.isSelected)\r\n            this.isAllSelected = false;\r\n        this.emitUserSelectRow(row);\r\n    }\r\n    async onSelectAllRows() {\r\n        this.isAllSelected = !this.isAllSelected;\r\n        await this.grid.selectAllRows(this.isAllSelected);\r\n        this.emitUserSelectRow(null);\r\n    }\r\n    onExpandRow(row) {\r\n        this.grid.expandRow(row);\r\n    }\r\n    initGrid() {\r\n        this.source = this.prepareSource();\r\n        this.grid = new Grid(this.source, this.prepareSettings());\r\n        this.subscribeToOnSelectRow();\r\n        /** Delay a bit the grid init event trigger to prevent empty rows */\r\n        setTimeout(() => {\r\n            this.afterGridInit.emit(this.grid.dataSet);\r\n        }, 10);\r\n    }\r\n    prepareSource() {\r\n        let source;\r\n        if (this.source instanceof DataSource) {\r\n            source = this.source;\r\n        }\r\n        else if (this.source instanceof Array) {\r\n            source = new LocalDataSource(this.source);\r\n        }\r\n        else {\r\n            source = new LocalDataSource();\r\n        }\r\n        // we have to hook up a listener to update some variables when the data source changes\r\n        if (this.dataChangeSubscription)\r\n            this.dataChangeSubscription.unsubscribe();\r\n        this.dataChangeSubscription = source.onChanged().subscribe((changes) => this.processDataChange(changes));\r\n        return source;\r\n    }\r\n    processDataChange(changes) {\r\n        // here we can already assume that the source has been lifted to an instance of DataSource\r\n        const source = this.source;\r\n        this.isAllSelected = source.isEveryElementSelected(this.grid.getSetting('selectMode') === 'multi_filtered');\r\n    }\r\n    prepareSettings() {\r\n        return deepExtend({}, this.defaultSettings, this.settings);\r\n    }\r\n    getNotVisibleColumns() {\r\n        return (this.grid?.getColumns() ?? []).filter((column) => column.hide);\r\n    }\r\n    onShowHeader(columnId) {\r\n        this.settings.columns[columnId].hide = false;\r\n        this.grid.setSettings(this.prepareSettings());\r\n    }\r\n    onHideHeader(columnId) {\r\n        this.settings.columns[columnId].hide = true;\r\n        this.grid.setSettings(this.prepareSettings());\r\n    }\r\n    createRowSelectionEvent(row) {\r\n        return {\r\n            row: row,\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n            selected: this.grid.getSelectedItems(),\r\n        };\r\n    }\r\n    emitUserSelectRow(row) {\r\n        this.userRowSelect.emit(this.createRowSelectionEvent(row));\r\n        // always also emit the general event\r\n        this.emitSelectRow(row);\r\n    }\r\n    emitSelectRow(row) {\r\n        this.rowSelect.emit(this.createRowSelectionEvent(row));\r\n    }\r\n    isIndexOutOfRange(index) {\r\n        const dataAmount = this.source?.count();\r\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\r\n    }\r\n    subscribeToOnSelectRow() {\r\n        if (this.onSelectRowSubscription) {\r\n            this.onSelectRowSubscription.unsubscribe();\r\n        }\r\n        this.onSelectRowSubscription = this.grid.onSelectRow()\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((row) => {\r\n            this.emitSelectRow(row);\r\n        });\r\n    }\r\n}\r\nAngular2SmartTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Angular2SmartTableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nAngular2SmartTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: Angular2SmartTableComponent, selector: \"angular2-smart-table\", inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", editCancel: \"editCancel\", createConfirm: \"createConfirm\", createCancel: \"createCancel\", rowHover: \"rowHover\", afterGridInit: \"afterGridInit\" }, usesOnChanges: true, ngImport: i0, template: \"<angular2-smart-table-tags-list\\r\\n  [tags]=\\\"getNotVisibleColumns()\\\" (close)=\\\"onShowHeader($event)\\\"\\r\\n></angular2-smart-table-tags-list>\\r\\n\\r\\n<div style=\\\"overflow-x: auto; -webkit-overflow-scrolling: touch\\\">\\r\\n  <table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\r\\n    <thead\\r\\n      angular2-st-thead\\r\\n      *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\r\\n      [grid]=\\\"grid\\\"\\r\\n      [isAllSelected]=\\\"isAllSelected\\\"\\r\\n      [source]=\\\"source\\\"\\r\\n      [createConfirm]=\\\"createConfirm\\\"\\r\\n      [createCancel]=\\\"createCancel\\\"\\r\\n      (create)=\\\"create.emit($event)\\\"\\r\\n      (selectAllRows)=\\\"onSelectAllRows()\\\"\\r\\n      (hide)=\\\"onHideHeader($event)\\\"\\r\\n    ></thead>\\r\\n\\r\\n    <tbody\\r\\n      angular2-st-tbody\\r\\n      [grid]=\\\"grid\\\"\\r\\n      [source]=\\\"source\\\"\\r\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n      [editConfirm]=\\\"editConfirm\\\"\\r\\n      [editCancel]=\\\"editCancel\\\"\\r\\n      [rowClassFunction]=\\\"rowClassFunction\\\"\\r\\n      (edit)=\\\"edit.emit($event)\\\"\\r\\n      (delete)=\\\"delete.emit($event)\\\"\\r\\n      (custom)=\\\"custom.emit($event)\\\"\\r\\n      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\r\\n      (editRowSelect)=\\\"onEditRowSelect($event)\\\"\\r\\n      (multipleSelectRow)=\\\"onMultipleSelectRow($event)\\\"\\r\\n      (onExpandRow)=\\\"onExpandRow($event)\\\"\\r\\n      (rowHover)=\\\"onRowHover($event)\\\"\\r\\n    ></tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<angular2-smart-table-pager\\r\\n  *ngIf=\\\"isPagerDisplay\\\"\\r\\n  [source]=\\\"source\\\"\\r\\n  [perPageSelect]=\\\"perPageSelect\\\"\\r\\n  [perPageSelectLabel]=\\\"perPageSelectLabel\\\"\\r\\n>\\r\\n</angular2-smart-table-pager>\\r\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700;position:relative}:host ::ng-deep table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}:host ::ng-deep .not-allowed{cursor:not-allowed}\\n\"], components: [{ type: TagsListComponent, selector: \"angular2-smart-table-tags-list\", inputs: [\"tags\"], outputs: [\"close\"] }, { type: NgxSmartTableTheadComponent, selector: \"[angular2-st-thead]\", inputs: [\"grid\", \"source\", \"isAllSelected\", \"createConfirm\", \"createCancel\"], outputs: [\"hide\", \"selectAllRows\", \"create\"] }, { type: NgxSmartTableTbodyComponent, selector: \"[angular2-st-tbody]\", inputs: [\"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"editCancel\", \"rowClassFunction\"], outputs: [\"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\", \"onExpandRow\"] }, { type: PagerComponent, selector: \"angular2-smart-table-pager\", inputs: [\"source\", \"perPageSelect\", \"perPageSelectLabel\"] }], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Angular2SmartTableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'angular2-smart-table', template: \"<angular2-smart-table-tags-list\\r\\n  [tags]=\\\"getNotVisibleColumns()\\\" (close)=\\\"onShowHeader($event)\\\"\\r\\n></angular2-smart-table-tags-list>\\r\\n\\r\\n<div style=\\\"overflow-x: auto; -webkit-overflow-scrolling: touch\\\">\\r\\n  <table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\r\\n    <thead\\r\\n      angular2-st-thead\\r\\n      *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\r\\n      [grid]=\\\"grid\\\"\\r\\n      [isAllSelected]=\\\"isAllSelected\\\"\\r\\n      [source]=\\\"source\\\"\\r\\n      [createConfirm]=\\\"createConfirm\\\"\\r\\n      [createCancel]=\\\"createCancel\\\"\\r\\n      (create)=\\\"create.emit($event)\\\"\\r\\n      (selectAllRows)=\\\"onSelectAllRows()\\\"\\r\\n      (hide)=\\\"onHideHeader($event)\\\"\\r\\n    ></thead>\\r\\n\\r\\n    <tbody\\r\\n      angular2-st-tbody\\r\\n      [grid]=\\\"grid\\\"\\r\\n      [source]=\\\"source\\\"\\r\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n      [editConfirm]=\\\"editConfirm\\\"\\r\\n      [editCancel]=\\\"editCancel\\\"\\r\\n      [rowClassFunction]=\\\"rowClassFunction\\\"\\r\\n      (edit)=\\\"edit.emit($event)\\\"\\r\\n      (delete)=\\\"delete.emit($event)\\\"\\r\\n      (custom)=\\\"custom.emit($event)\\\"\\r\\n      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\r\\n      (editRowSelect)=\\\"onEditRowSelect($event)\\\"\\r\\n      (multipleSelectRow)=\\\"onMultipleSelectRow($event)\\\"\\r\\n      (onExpandRow)=\\\"onExpandRow($event)\\\"\\r\\n      (rowHover)=\\\"onRowHover($event)\\\"\\r\\n    ></tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<angular2-smart-table-pager\\r\\n  *ngIf=\\\"isPagerDisplay\\\"\\r\\n  [source]=\\\"source\\\"\\r\\n  [perPageSelect]=\\\"perPageSelect\\\"\\r\\n  [perPageSelectLabel]=\\\"perPageSelectLabel\\\"\\r\\n>\\r\\n</angular2-smart-table-pager>\\r\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700;position:relative}:host ::ng-deep table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}:host ::ng-deep .not-allowed{cursor:not-allowed}\\n\"] }]\r\n        }], propDecorators: { source: [{\r\n                type: Input\r\n            }], settings: [{\r\n                type: Input\r\n            }], rowSelect: [{\r\n                type: Output\r\n            }], userRowSelect: [{\r\n                type: Output\r\n            }], delete: [{\r\n                type: Output\r\n            }], edit: [{\r\n                type: Output\r\n            }], create: [{\r\n                type: Output\r\n            }], custom: [{\r\n                type: Output\r\n            }], deleteConfirm: [{\r\n                type: Output\r\n            }], editConfirm: [{\r\n                type: Output\r\n            }], editCancel: [{\r\n                type: Output\r\n            }], createConfirm: [{\r\n                type: Output\r\n            }], createCancel: [{\r\n                type: Output\r\n            }], rowHover: [{\r\n                type: Output\r\n            }], afterGridInit: [{\r\n                type: Output\r\n            }] } });\n\nconst PIPES = [\r\n    BypassSecurityTrustPipe,\r\n];\r\nclass PipesModule {\r\n}\r\nPipesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nPipesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PipesModule, declarations: [BypassSecurityTrustPipe], exports: [BypassSecurityTrustPipe] });\r\nPipesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PipesModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PipesModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [...PIPES],\r\n                    exports: [...PIPES],\r\n                }]\r\n        }] });\n\nconst CELL_COMPONENTS = [\r\n    CellComponent,\r\n    EditCellDefault,\r\n    DefaultEditor,\r\n    CustomEditComponent,\r\n    DefaultEditComponent,\r\n    EditCellComponent,\r\n    CheckboxEditorComponent,\r\n    CompleterEditorComponent,\r\n    InputEditorComponent,\r\n    SelectEditorComponent,\r\n    TextareaEditorComponent,\r\n    CustomViewComponent,\r\n    ViewCellComponent,\r\n];\r\nclass CellModule {\r\n}\r\nCellModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CellModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCellModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CellModule, declarations: [CellComponent,\r\n        EditCellDefault,\r\n        DefaultEditor,\r\n        CustomEditComponent,\r\n        DefaultEditComponent,\r\n        EditCellComponent,\r\n        CheckboxEditorComponent,\r\n        CompleterEditorComponent,\r\n        InputEditorComponent,\r\n        SelectEditorComponent,\r\n        TextareaEditorComponent,\r\n        CustomViewComponent,\r\n        ViewCellComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        Ng2CompleterModule,\r\n        PipesModule], exports: [CellComponent,\r\n        EditCellDefault,\r\n        DefaultEditor,\r\n        CustomEditComponent,\r\n        DefaultEditComponent,\r\n        EditCellComponent,\r\n        CheckboxEditorComponent,\r\n        CompleterEditorComponent,\r\n        InputEditorComponent,\r\n        SelectEditorComponent,\r\n        TextareaEditorComponent,\r\n        CustomViewComponent,\r\n        ViewCellComponent] });\r\nCellModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CellModule, imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            Ng2CompleterModule,\r\n            PipesModule,\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CellModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        Ng2CompleterModule,\r\n                        PipesModule,\r\n                    ],\r\n                    declarations: [\r\n                        ...CELL_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...CELL_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }] });\n\nconst FILTER_COMPONENTS = [\r\n    FilterDefault,\r\n    DefaultFilter,\r\n    FilterComponent,\r\n    DateFilterComponent,\r\n    DefaultFilterComponent,\r\n    CustomFilterComponent,\r\n    CheckboxFilterComponent,\r\n    CompleterFilterComponent,\r\n    InputFilterComponent,\r\n    SelectFilterComponent,\r\n    MselectFilterComponent\r\n];\r\nclass FilterModule {\r\n}\r\nFilterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nFilterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterModule, declarations: [FilterDefault,\r\n        DefaultFilter,\r\n        FilterComponent,\r\n        DateFilterComponent,\r\n        DefaultFilterComponent,\r\n        CustomFilterComponent,\r\n        CheckboxFilterComponent,\r\n        CompleterFilterComponent,\r\n        InputFilterComponent,\r\n        SelectFilterComponent,\r\n        MselectFilterComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        Ng2CompleterModule,\r\n        AngularMultiSelectModule], exports: [FilterDefault,\r\n        DefaultFilter,\r\n        FilterComponent,\r\n        DateFilterComponent,\r\n        DefaultFilterComponent,\r\n        CustomFilterComponent,\r\n        CheckboxFilterComponent,\r\n        CompleterFilterComponent,\r\n        InputFilterComponent,\r\n        SelectFilterComponent,\r\n        MselectFilterComponent] });\r\nFilterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterModule, imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            Ng2CompleterModule,\r\n            AngularMultiSelectModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FilterModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        Ng2CompleterModule,\r\n                        AngularMultiSelectModule\r\n                    ],\r\n                    declarations: [\r\n                        ...FILTER_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...FILTER_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass PagerModule {\r\n}\r\nPagerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PagerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nPagerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PagerModule, declarations: [PagerComponent], imports: [CommonModule,\r\n        FormsModule], exports: [PagerComponent] });\r\nPagerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PagerModule, imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: PagerModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                    ],\r\n                    declarations: [\r\n                        PagerComponent,\r\n                    ],\r\n                    exports: [\r\n                        PagerComponent,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass TabsModule {\r\n}\r\nTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TabsModule, declarations: [TagComponent,\r\n        TagsListComponent], imports: [CommonModule], exports: [TagComponent,\r\n        TagsListComponent] });\r\nTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TabsModule, imports: [[\r\n            CommonModule,\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TabsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        TagComponent,\r\n                        TagsListComponent\r\n                    ],\r\n                    exports: [\r\n                        TagComponent,\r\n                        TagsListComponent\r\n                    ],\r\n                }]\r\n        }] });\n\nconst TBODY_COMPONENTS = [\r\n    TbodySaveCancelComponent,\r\n    TbodyEditDeleteComponent,\r\n    TbodyCustomComponent,\r\n    TbodyExpandRowComponent,\r\n    TbodyCustomItemComponent,\r\n    NgxSmartTableTbodyComponent\r\n];\r\nclass TBodyModule {\r\n}\r\nTBodyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TBodyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nTBodyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TBodyModule, declarations: [TbodySaveCancelComponent,\r\n        TbodyEditDeleteComponent,\r\n        TbodyCustomComponent,\r\n        TbodyExpandRowComponent,\r\n        TbodyCustomItemComponent,\r\n        NgxSmartTableTbodyComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        CellModule,\r\n        PipesModule], exports: [TbodySaveCancelComponent,\r\n        TbodyEditDeleteComponent,\r\n        TbodyCustomComponent,\r\n        TbodyExpandRowComponent,\r\n        TbodyCustomItemComponent,\r\n        NgxSmartTableTbodyComponent] });\r\nTBodyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TBodyModule, imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            CellModule,\r\n            PipesModule,\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: TBodyModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        CellModule,\r\n                        PipesModule,\r\n                    ],\r\n                    declarations: [\r\n                        ...TBODY_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...TBODY_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }] });\n\nconst DIRECTIVES = [\r\n    NgxResizerDirective\r\n];\r\nclass DirectivesModule {\r\n}\r\nDirectivesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DirectivesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nDirectivesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DirectivesModule, declarations: [NgxResizerDirective], imports: [CommonModule], exports: [NgxResizerDirective] });\r\nDirectivesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DirectivesModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DirectivesModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        ...DIRECTIVES,\r\n                    ],\r\n                    exports: [\r\n                        ...DIRECTIVES,\r\n                    ],\r\n                }]\r\n        }] });\n\nconst THEAD_COMPONENTS = [\r\n    TheadCreateCancelComponent,\r\n    ActionsTitleComponent,\r\n    AddButtonComponent,\r\n    ColumnTitleComponent,\r\n    TitleComponent,\r\n    TheadFitlersRowComponent,\r\n    TheadFormRowComponent,\r\n    TheadTitlesRowComponent,\r\n    NgxSmartTableTheadComponent\r\n];\r\nclass THeadModule {\r\n}\r\nTHeadModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: THeadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nTHeadModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: THeadModule, declarations: [TheadCreateCancelComponent,\r\n        ActionsTitleComponent,\r\n        AddButtonComponent,\r\n        ColumnTitleComponent,\r\n        TitleComponent,\r\n        TheadFitlersRowComponent,\r\n        TheadFormRowComponent,\r\n        TheadTitlesRowComponent,\r\n        NgxSmartTableTheadComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        FilterModule,\r\n        CellModule,\r\n        DirectivesModule,\r\n        PipesModule], exports: [TheadCreateCancelComponent,\r\n        ActionsTitleComponent,\r\n        AddButtonComponent,\r\n        ColumnTitleComponent,\r\n        TitleComponent,\r\n        TheadFitlersRowComponent,\r\n        TheadFormRowComponent,\r\n        TheadTitlesRowComponent,\r\n        NgxSmartTableTheadComponent] });\r\nTHeadModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: THeadModule, imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            FilterModule,\r\n            CellModule,\r\n            DirectivesModule,\r\n            PipesModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: THeadModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        FilterModule,\r\n                        CellModule,\r\n                        DirectivesModule,\r\n                        PipesModule\r\n                    ],\r\n                    declarations: [\r\n                        ...THEAD_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...THEAD_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass Angular2SmartTableModule {\r\n}\r\nAngular2SmartTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Angular2SmartTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAngular2SmartTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Angular2SmartTableModule, declarations: [Angular2SmartTableComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CellModule,\r\n        FilterModule,\r\n        PagerModule,\r\n        TBodyModule,\r\n        THeadModule,\r\n        TabsModule], exports: [Angular2SmartTableComponent] });\r\nAngular2SmartTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Angular2SmartTableModule, imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            CellModule,\r\n            FilterModule,\r\n            PagerModule,\r\n            TBodyModule,\r\n            THeadModule,\r\n            TabsModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: Angular2SmartTableModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        Angular2SmartTableComponent\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        CellModule,\r\n                        FilterModule,\r\n                        PagerModule,\r\n                        TBodyModule,\r\n                        THeadModule,\r\n                        TabsModule\r\n                    ],\r\n                    exports: [\r\n                        Angular2SmartTableComponent\r\n                    ]\r\n                }]\r\n        }] });\n\nclass ServerSourceConf {\r\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n        this.endPoint = endPoint ? endPoint : '';\r\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n    }\r\n}\r\nServerSourceConf.SORT_FIELD_KEY = '_sort';\r\nServerSourceConf.SORT_DIR_KEY = '_order';\r\nServerSourceConf.PAGER_PAGE_KEY = '_page';\r\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\r\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\r\nServerSourceConf.TOTAL_KEY = 'x-total-count';\r\nServerSourceConf.DATA_KEY = '';\n\nclass ServerDataSource extends LocalDataSource {\r\n    constructor(http, conf = {}) {\r\n        super();\r\n        this.http = http;\r\n        this.lastRequestCount = 0;\r\n        this.conf = new ServerSourceConf(conf);\r\n        if (!this.conf.endPoint) {\r\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n        }\r\n    }\r\n    count() {\r\n        return this.lastRequestCount;\r\n    }\r\n    getAll() {\r\n        return this.loadData(false, false, false);\r\n    }\r\n    getElements() {\r\n        return this.loadData(true, true, true);\r\n    }\r\n    getFilteredAndSorted() {\r\n        return this.loadData(true, true, false);\r\n    }\r\n    loadData(filtered, sorted, paginated) {\r\n        return lastValueFrom(this.requestElements(filtered, sorted, paginated)\r\n            .pipe(map(res => {\r\n            this.lastRequestCount = this.extractTotalFromResponse(res);\r\n            // TODO: the following two lines are obviously incorrect\r\n            //       but whoever hacked this ServerDataSource into the project did not think about compatibility to the interface\r\n            this.data = this.extractDataFromResponse(res);\r\n            this.filteredAndSorted = this.data;\r\n            return this.data;\r\n        })));\r\n    }\r\n    /**\r\n     * Extracts array of data from server response\r\n     * @param res\r\n     * @returns {any}\r\n     */\r\n    extractDataFromResponse(res) {\r\n        const rawData = res.body;\r\n        const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n        if (data instanceof Array) {\r\n            return data;\r\n        }\r\n        throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n    }\r\n    /**\r\n     * Extracts total rows count from the server response\r\n     * Looks for the count in the heders first, then in the response body\r\n     * @param res\r\n     * @returns {any}\r\n     */\r\n    extractTotalFromResponse(res) {\r\n        if (res.headers.has(this.conf.totalKey)) {\r\n            return +res.headers.get(this.conf.totalKey);\r\n        }\r\n        else {\r\n            const rawData = res.body;\r\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n        }\r\n    }\r\n    requestElements(filtered, sorted, paginated) {\r\n        let httpParams = new HttpParams();\r\n        if (filtered)\r\n            httpParams = this.addFilterRequestParams(httpParams);\r\n        if (sorted)\r\n            httpParams = this.addSortRequestParams(httpParams);\r\n        if (paginated)\r\n            httpParams = this.addPagerRequestParams(httpParams);\r\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n    }\r\n    addSortRequestParams(httpParams) {\r\n        if (this.sortConf) {\r\n            let fields = [];\r\n            let directions = [];\r\n            this.sortConf.forEach((fieldConf) => {\r\n                if (fieldConf.direction !== null) {\r\n                    fields.push(fieldConf.field);\r\n                    directions.push(fieldConf.direction.toUpperCase());\r\n                }\r\n            });\r\n            httpParams = httpParams.set(this.conf.sortFieldKey, fields.join(','));\r\n            httpParams = httpParams.set(this.conf.sortDirKey, directions.join(','));\r\n        }\r\n        return httpParams;\r\n    }\r\n    addFilterRequestParams(httpParams) {\r\n        if (this.filterConf.filters) {\r\n            this.filterConf.filters.forEach((fieldConf) => {\r\n                if (fieldConf['search']) {\r\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n                }\r\n            });\r\n        }\r\n        return httpParams;\r\n    }\r\n    addPagerRequestParams(httpParams) {\r\n        httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\r\n        httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\r\n        return httpParams;\r\n    }\r\n}\n\n/*\r\n * Public API Surface of angular2-smart-table\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Angular2SmartTableComponent, Angular2SmartTableModule, Cell, DataSet, DataSource, DefaultEditor, DefaultFilter, IColumnType, LocalDataSource, Row, SelectModeOptions, ServerDataSource };\n","import { EmptyError } from './util/EmptyError';\nexport function lastValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        let _hasValue = false;\n        let _value;\n        source.subscribe({\n            next: (value) => {\n                _value = value;\n                _hasValue = true;\n            },\n            error: reject,\n            complete: () => {\n                if (_hasValue) {\n                    resolve(_value);\n                }\n                else if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n    });\n}\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293]}