{"version":3,"file":"253.6b692063af491156.js","mappings":"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","names":["i0","LoginComponent","NbLoginComponent","constructor","service","options","cd","router","super","this","ngOnInit","isAuthenticated","subscribe","b","navigate","finally","core","NB_AUTH_OPTIONS","selectors","ctx","AuthComponent","NbAuthComponent","document","configService","auth","location","config","siteUrl","protocol","host","split","length","href","replace","name","DOCUMENT","LogoutComponent","NbLogoutComponent","t","routes","path","component","children","ForgotComponent","NbRequestPasswordComponent","user","dashboard","ResetComponent","NbResetPasswordComponent","route","paramMap","param","token","get","AuthRoutingModule","RouterModule","AuthModule","ThemeModule","NbAuthModule"],"sourceRoot":"webpack:///","sources":["./dashboard/app/auth/login/login.component.html","./dashboard/app/auth/login/login.component.ts","./dashboard/app/auth/auth.component.ts","./dashboard/app/auth/logout/logout.component.ts","./dashboard/app/auth/forgot/forgot.component.ts","./dashboard/app/auth/reset/reset.component.html","./dashboard/app/auth/auth-routing.module.ts","./dashboard/app/auth/reset/reset.component.ts","./dashboard/app/auth/auth.module.ts"],"sourcesContent":["<h1 id=\"title\" class=\"title\">\n  登录\n</h1>\n<p class=\"sub-title\">嗨! 使用您的电子邮箱登录吧.</p>\n\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\n  <ul class=\"alert-message-list\">\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\n  </ul>\n</nb-alert>\n\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\n  <p class=\"alert-title\"><b>Hooray!</b></p>\n  <ul class=\"alert-message-list\">\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\n  </ul>\n</nb-alert>\n\n<form (ngSubmit)=\"login()\" #form=\"ngForm\" aria-labelledby=\"title\">\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-email\">邮箱:</label>\n    <input nbInput\n           fullWidth\n           [(ngModel)]=\"user.email\"\n           #email=\"ngModel\"\n           name=\"email\"\n           id=\"input-email\"\n           pattern=\".+@.+\\..+\"\n           placeholder=\"输入邮箱地址\"\n           fieldSize=\"large\"\n           autofocus\n           [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\n           [required]=\"getConfigValue('forms.validation.email.required')\"\n           [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\n    <ng-container *ngIf=\"email.invalid && email.touched\">\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\n        邮箱必填!\n      </p>\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\n        邮箱格式不正确!\n      </p>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <span class=\"label-with-link\">\n      <label class=\"label\" for=\"input-password\">密码:</label>\n      <a class=\"forgot-password caption-2\" routerLink=\"../forgot\">忘记密码?</a>\n    </span>\n    <input nbInput\n           fullWidth\n           [(ngModel)]=\"user.password\"\n           #password=\"ngModel\"\n           name=\"password\"\n           type=\"password\"\n           id=\"input-password\"\n           placeholder=\"输入密码\"\n           fieldSize=\"large\"\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\n           [required]=\"getConfigValue('forms.validation.password.required')\"\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\n    <ng-container *ngIf=\"password.invalid && password.touched \">\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\n        密码必填!\n      </p>\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\n        密码长度 {{ getConfigValue('forms.validation.password.minLength') }} 到 {{ getConfigValue('forms.validation.password.maxLength') }} 字符!\n      </p>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group accept-group\">\n    <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\" *ngIf=\"rememberMe\">记住我</nb-checkbox>\n  </div>\n\n  <button nbButton\n          fullWidth\n          status=\"primary\"\n          size=\"large\"\n          [disabled]=\"submitted || !form.valid\"\n          [class.btn-pulse]=\"submitted\">\n    登录\n  </button>\n</form>\n\n<section *ngIf=\"socialLinks && socialLinks.length > 0\" class=\"links\" aria-label=\"Social sign in\">\n  or enter with:\n  <div class=\"socials\">\n    <ng-container *ngFor=\"let socialLink of socialLinks\">\n      <a *ngIf=\"socialLink.link\"\n         [routerLink]=\"socialLink.link\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">\n        <nb-icon *ngIf=\"socialLink.icon; else title\" [icon]=\"socialLink.icon\"></nb-icon>\n        <ng-template #title>{{ socialLink.title }}</ng-template>\n      </a>\n      <a *ngIf=\"socialLink.url\"\n         [attr.href]=\"socialLink.url\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">\n        <nb-icon *ngIf=\"socialLink.icon; else title\" [icon]=\"socialLink.icon\"></nb-icon>\n        <ng-template #title>{{ socialLink.title }}</ng-template>\n      </a>\n    </ng-container>\n  </div>\n</section>\n\n<section class=\"another-action\" aria-label=\"Register\">\n  没有账户? <a class=\"text-link\" routerLink=\"../register\">注册</a>\n</section>\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {NB_AUTH_OPTIONS, NbAuthService, NbLoginComponent} from \"@nebular/auth\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent extends NbLoginComponent implements OnInit {\n  constructor(protected override service: NbAuthService,\n              @Inject(NB_AUTH_OPTIONS) protected override options = {},\n              protected override cd: ChangeDetectorRef,\n              protected override router: Router) {\n    super(service, options, cd, router);\n  }\n\n  ngOnInit(): void {\n    this.service.isAuthenticated().subscribe(b => {\n      b && this.router.navigate(['/app']).finally();\n    });\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {NbAuthComponent, NbAuthService} from \"@nebular/auth\";\nimport {DOCUMENT, Location} from '@angular/common';\nimport {ConfigurationService} from \"../@core/services/configuration.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n  selector: 'app-auth',\n  template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <nav class=\"navigation d-flex align-items-center\">\n              <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n              </a>\n              <h1 class=\"py-0 my-0 flex-fill text-center\" style=\"padding-right:32px;\">{{name}}</h1>\n            </nav>\n          </nb-card-header>\n          <nb-card-body>\n            <nb-auth-block>\n              <router-outlet></router-outlet>\n            </nb-auth-block>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `,\n  styleUrls: [\n    '../../../node_modules/@nebular/auth/components/auth.component.scss'\n  ]\n})\nexport class AuthComponent extends NbAuthComponent implements OnInit {\n\n  name: string = \"\";\n\n  constructor(@Inject(DOCUMENT) private document: Document,\n              protected configService: ConfigurationService,\n              protected override auth: NbAuthService,\n              protected override location: Location) {\n    super(auth, location);\n  }\n\n  ngOnInit(): void {\n    if (!this.configService.config.siteUrl) {\n      const protocol = this.document.location.protocol;\n      const host = this.document.location.host;\n      const split = host.split(\".\");\n      if (split.length < 3) {\n        this.document.location.href = protocol + \"//\" + host.replace(\"4200\", \"8080\") + '/install';\n        return ;\n      }\n      this.document.location.href = protocol + \"//\" + split[split.length - 2] + \".\" + split[split.length-1] + \"/install\";\n      return ;\n    }\n    this.name = this.configService.config.name;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NbLogoutComponent} from \"@nebular/auth\";\n\n@Component({\n  selector: 'app-logout',\n  template: `\n    <div>正在退出账号, 请稍后...</div>\n  `\n})\nexport class LogoutComponent extends NbLogoutComponent {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NbRequestPasswordComponent} from \"@nebular/auth\";\n\n@Component({\n  selector: 'app-forgot',\n  template: `\n    <h1 id=\"title\" class=\"title\">忘记密码</h1>\n    <p class=\"sub-title\">输入您的电子邮件地址，我们将发送一个链接来重置您的密码</p>\n\n    <nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\n      <p class=\"alert-title\"><b>Oh snap!</b></p>\n      <ul class=\"alert-message-list\">\n        <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\n      </ul>\n    </nb-alert>\n\n    <nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\n      <p class=\"alert-title\"><b>Hooray!</b></p>\n      <ul class=\"alert-message-list\">\n        <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\n      </ul>\n    </nb-alert>\n\n    <form (ngSubmit)=\"requestPass()\" #requestPassForm=\"ngForm\" aria-labelledby=\"title\">\n\n      <div class=\"form-control-group\">\n        <label class=\"label\" for=\"input-email\">邮箱地址:</label>\n        <input nbInput\n               [(ngModel)]=\"user.email\"\n               #email=\"ngModel\"\n               id=\"input-email\"\n               name=\"email\"\n               pattern=\".+@.+\\\\..+\"\n               placeholder=\"邮箱地址\"\n               autofocus\n               fullWidth\n               fieldSize=\"large\"\n               [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\n               [required]=\"getConfigValue('forms.validation.email.required')\"\n               [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\n        <ng-container *ngIf=\"email.invalid && email.touched\">\n          <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\n            电子邮箱是必需的!\n          </p>\n          <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\n            电子邮箱应该是真实的!\n          </p>\n        </ng-container>\n      </div>\n\n      <button nbButton\n              fullWidth\n              status=\"primary\"\n              size=\"large\"\n              [disabled]=\"submitted || !requestPassForm.valid\"\n              [class.btn-pulse]=\"submitted\">发送邮件</button>\n    </form>\n\n    <section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\n      <p><a class=\"text-link\" routerLink=\"../login\">返回登录</a></p>\n      <p><a routerLink=\"../register\" class=\"text-link\">注册</a></p>\n    </section>\n  `\n})\nexport class ForgotComponent extends NbRequestPasswordComponent implements OnInit {\n  ngOnInit(): void {\n    this.user.dashboard = 1;\n  }\n}\n","<h1 id=\"title\" class=\"title\">重置密码</h1>\n<p class=\"sub-title\">请输入您的新密码</p>\n\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\n  <ul class=\"alert-message-list\">\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\n  </ul>\n</nb-alert>\n\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\n  <p class=\"alert-title\"><b>Hooray!</b></p>\n  <ul class=\"alert-message-list\">\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\n  </ul>\n</nb-alert>\n\n<form (ngSubmit)=\"resetPass()\" #resetPassForm=\"ngForm\" aria-labelledby=\"title\">\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-password\">新密码:</label>\n    <input nbInput\n           [(ngModel)]=\"user.password\"\n           #password=\"ngModel\"\n           type=\"password\"\n           id=\"input-password\"\n           name=\"password\"\n           class=\"first\"\n           placeholder=\"输入新密码\"\n           autofocus\n           fullWidth\n           fieldSize=\"large\"\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\n           [required]=\"getConfigValue('forms.validation.password.required')\"\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\n    <ng-container *ngIf=\"password.invalid && password.touched\">\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\n        密码是必需的!\n      </p>\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\n        密码长度从 {{getConfigValue('forms.validation.password.minLength')}} 到 {{getConfigValue('forms.validation.password.maxLength')}} 个字符!\n      </p>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-re-password\">确认密码:</label>\n    <input nbInput\n           [(ngModel)]=\"user.confirmPassword\"\n           #rePass=\"ngModel\"\n           id=\"input-re-password\"\n           name=\"rePass\"\n           type=\"password\"\n           class=\"last\"\n           placeholder=\"输入确认密码\"\n           fullWidth\n           fieldSize=\"large\"\n           [status]=\"rePass.touched\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\n               : 'basic'\"\n           [required]=\"getConfigValue('forms.validation.password.required')\"\n           [attr.aria-invalid]=\"rePass.invalid && rePass.touched ? true : null\">\n    <ng-container *ngIf=\"rePass.touched\">\n      <p class=\"caption status-danger\" *ngIf=\"rePass.invalid && rePass.errors?.required\">\n        Password confirmation is required!\n        确认密码是必需的!\n      </p>\n      <p class=\"caption status-danger\" *ngIf=\"password.value != rePass.value && !rePass.errors?.required\">\n        密码与确认密码不匹配!\n      </p>\n    </ng-container>\n  </div>\n\n  <button nbButton\n          status=\"primary\"\n          fullWidth\n          size=\"large\"\n          [disabled]=\"submitted || !resetPassForm.valid || user.password != user.confirmPassword\"\n          [class.btn-pulse]=\"submitted\">确认重置</button>\n</form>\n\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\n  <p><a class=\"text-link\" routerLink=\"../login\">返回登录</a></p>\n  <p><a class=\"text-link\" routerLink=\"../register\">注册</a></p>\n</section>\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from \"./auth.component\";\nimport { LogoutComponent } from './logout/logout.component';\nimport {ForgotComponent} from \"./forgot/forgot.component\";\nimport {NbResetPasswordComponent} from \"@nebular/auth\";\nimport {ResetComponent} from \"./reset/reset.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'forgot',\n        component: ForgotComponent,\n      },\n      {\n        path: 'logout',\n        component: LogoutComponent,\n      },\n      {\n        path: 'reset-password/:token',\n        component: ResetComponent,\n      },\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule{ }\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {NB_AUTH_OPTIONS, NbAuthService, NbResetPasswordComponent} from \"@nebular/auth\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html'\n})\nexport class ResetComponent extends NbResetPasswordComponent implements OnInit {\n\n  constructor(protected override service: NbAuthService,\n              @Inject(NB_AUTH_OPTIONS) protected override options = {},\n              protected override cd: ChangeDetectorRef,\n              protected override router: Router,\n              protected route: ActivatedRoute\n  ) {\n    super(service, options, cd, router);\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(param => {\n      this.user.token = param.get('token')\n    });\n\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {LoginComponent } from './login/login.component';\nimport {AuthRoutingModule} from \"./auth-routing.module\";\nimport {ThemeModule} from \"../@theme/theme.module\";\nimport {NbAuthModule} from \"@nebular/auth\";\nimport {AuthComponent} from \"./auth.component\";\nimport { LogoutComponent } from './logout/logout.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport {ResetComponent} from \"./reset/reset.component\";\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    LogoutComponent,\n    ForgotComponent,\n    ResetComponent,\n  ],\n  imports: [\n    ThemeModule,\n    NbAuthModule,\n    AuthRoutingModule\n  ],\n})\nexport class AuthModule {\n\n}\n"],"x_google_ignoreList":[]}