{"version":3,"file":"326.055373437bfba1f8.js","mappings":"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","names":["i0","OptionComponent","constructor","http","windowService","this","t","n","FormGroup","name","FormControl","Validators","type","value1","value2","FormArray","value3","key","value","value4","value5","createRow","i","j","formGroup","controls","push","deleteRow","removeAt","ngOnInit","settings","buildSettings","source","ServerDataSource","endPoint","dataKey","totalKey","pagerPageKey","pagerLimitKey","filterFieldKey","onSubmit","create","tpl","reset","enable","optionWindow","edit","row","bindFormControl","data","selectMode","actions","position","add","delete","columnTitle","pager","perPage","mode","rowClassFunction","columns","title","IColumnType","valuePrepareFunction","isArray","isObject","JSON","stringify","undefined","filter","obj","Array","Object","option","disable","setValue","forEach","val","index","formControl","at","keys","item","formArray","open","windowClass","context","initialState","NbWindowState","hasBackdrop","core","selectors","Mode","TreeViewComponent","ReplaySubject","Subject","textField","childrenField","valueField","collapsed","checked","defaultOptions","EventEmitter","$options","subscribe","options","assign","$items","items","rebuildItem","ngOnChanges","changes","filterItems","next","currentValue","prevChildren","rebuildChildren","children","hasOwnProperty","length","child","onChildCheckedChange","$event","selection","getSelection","selectedChange","emit","checkedItems","uncheckedItems","concatSelection","unchecked","TreeViewItemComponent","ngAfterViewInit","ngDoCheck","ngOnDestroy","onCollapseExpand","onCheckedChange","setCheckedRecursive","checkedChange","itemChecked","childItem","indeterminate","styles","RoleComponent","sharedService","id","capabilities","onSpinner","spinner","get","MENUS","res","menus","capabilitySelected","selected","role","confirm","body","getRawValue","post","HttpContext","set","SPINNER","map","includes","path","editButtonContent","saveButtonContent","cancelButtonContent","deleteButtonContent","confirmDelete","ctx","GeneralComponent","submitted","timezone","filteredOptions$","of","action","filterValue","toLowerCase","optionValue","getFilteredOptions","pipe","filterString","onChange","_a","input","nativeElement","onSelectionChange","MediaComponent","thumbnailCrop","thumbnail_crop","TreeViewModule","CommonModule","ThemeModule","ContentComponent","alias","example","CATEGORIES","categories","records","defaultCommentStatus","default_comment_status","commentModeration","comment_moderation","pageComment","page_comments","routes","component","SettingComponent","icon","route","redirectTo","pathMatch","SystemModule","RouterModule","Angular2SmartTableModule","NbToggleModule","ControlModule"],"sourceRoot":"webpack:///","sources":["./dashboard/app/pages/system/option.component.html","./dashboard/app/pages/system/option.component.ts","./dashboard/app/@core/definition/system/api.ts","./dashboard/app/shared/treeview/tree-view.ts","./dashboard/app/shared/treeview/tree-view.component.html","./dashboard/app/shared/treeview/tree-item.component.html","./dashboard/app/shared/treeview/tree-view.component.ts","./dashboard/app/pages/system/role.component.html","./dashboard/app/pages/system/role.component.ts","./dashboard/app/pages/system/setting/general/general.component.html","./dashboard/app/pages/system/setting/general/general.component.ts","./dashboard/app/pages/system/setting/media/media.component.ts","./dashboard/app/pages/system/setting/media/media.component.html","./dashboard/app/shared/treeview/tree-view.module.ts","./dashboard/app/pages/system/setting/content/content.component.html","./dashboard/app/pages/system/setting/content/content.component.ts","./dashboard/app/pages/system/system.module.ts","./dashboard/app/pages/system/setting.component.ts"],"sourcesContent":["<nb-card>\n  <nb-card-header class=\"border-0\">\n  </nb-card-header>\n  <nb-card-body class=\" border-0\">\n    <angular2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\">\n    </angular2-smart-table>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #createTpl>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"formGroup\">\n    <div class=\"mb-3 row\">\n      <label for=\"inputName\" class=\"label col-lg-2 col-form-label\">名称</label>\n      <div class=\"col-lg-6\">\n        <input id=\"inputName\" type=\"text\" nbInput fullWidth\n               formControlName=\"name\">\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label for=\"inputType\" class=\"label col-lg-2 col-form-label\">值类型</label>\n      <div class=\"col-lg-3\">\n        <nb-select class=\"col-lg-1 px-0\" status=\"primary\" name=\"dataType\" placeholder=\"--请选择--\"\n                   formControlName=\"type\" id=\"inputType\">\n          <nb-option *ngFor=\"let typeItem of dataType\" [value]=\"typeItem.t\">{{ typeItem.n }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n    <ng-container [ngSwitch]=\"formGroup.controls.type.value\">\n      <ng-container *ngSwitchCase=\"1\" [ngTemplateOutlet]=\"templateRef1\"></ng-container>\n      <ng-container *ngSwitchCase=\"2\" [ngTemplateOutlet]=\"templateRef2\"></ng-container>\n      <ng-container *ngSwitchCase=\"3\" [ngTemplateOutlet]=\"templateRef3\"></ng-container>\n      <ng-container *ngSwitchCase=\"4\" [ngTemplateOutlet]=\"templateRef4\"></ng-container>\n      <ng-container *ngSwitchCase=\"5\" [ngTemplateOutlet]=\"templateRef5\"></ng-container>\n      <ng-container *ngSwitchCase=\"6\" [ngTemplateOutlet]=\"templateRef6\"></ng-container>\n    </ng-container>\n    <div class=\"mb-3\">\n      <button type=\"submit\" status=\"primary\" [disabled]=\"formGroup.invalid\" nbButton>保存</button>\n    </div>\n  </form>\n</ng-template>\n\n\n<ng-template #templateRef1>\n  <div class=\"mb-3 row\" [formGroup]=\"formGroup\">\n    <label for=\"inputValue\" class=\"label col-lg-2 col-form-label\">值</label>\n    <div class=\"col-lg-6\">\n      <nb-toggle id=\"inputValue\" formControlName=\"value1\" status=\"primary\"></nb-toggle>\n    </div>\n  </div>\n</ng-template>\n<ng-template #templateRef2>\n  <div [formGroup]=\"formGroup\">\n    <ng-container formArrayName=\"value2\">\n      <ng-container *ngFor=\"let control of value2.controls; let i = index;\">\n        <div class=\"mb-3 row\">\n          <label for=\"inputValue\" class=\"label col-lg-2 col-form-label\">{{ i > 0 ? '' : '值'}}</label>\n          <div class=\"col-lg-8\">\n            <input type=\"text\" nbInput fullWidth [formControlName]=\"i\">\n          </div>\n          <div class=\"col-lg-2\">\n            <ng-container [ngTemplateOutlet]=\"i==0 ? createRowTpl : closeRowTpl\"\n                          [ngTemplateOutletContext]=\"{i:i, j: -1}\">\n            </ng-container>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n<ng-template #templateRef3>\n  <div [formGroup]=\"formGroup\">\n    <ng-container formArrayName=\"value3\">\n      <ng-container *ngFor=\"let fg of value3.controls; let i = index;\">\n        <div class=\"mb-3 row\" [formGroup]=\"fg\">\n          <label for=\"inputValue\" class=\"label col-lg-2 col-form-label\">{{ i > 0 ? '' : '值'}}</label>\n          <div class=\"col-lg-4\">\n            <input type=\"text\" nbInput fullWidth formControlName=\"key\">\n          </div>\n          <div class=\"col-lg-4\">\n            <input type=\"text\" nbInput fullWidth formControlName=\"value\">\n          </div>\n          <div class=\"col-lg-2\">\n            <ng-container\n              [ngTemplateOutlet]=\"i==0 ? createRowTpl : closeRowTpl\"\n              [ngTemplateOutletContext]=\"{i:i, j: -1}\">\n            </ng-container>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n<ng-template #templateRef4>\n  <div [formGroup]=\"formGroup\">\n    <ng-container formArrayName=\"value4\">\n      <ng-container *ngFor=\"let formArray of value4.controls; let i = index;\">\n        <ng-container *ngFor=\"let fg of formArray.controls; let j = index;\">\n          <div class=\"mb-3 row\" [formGroup]=\"fg\">\n            <label for=\"inputValue\" class=\"label col-lg-2 col-form-label\">{{ j > 0 ? '' : '键值'}}</label>\n            <div class=\"col-lg-4\">\n              <input type=\"text\" nbInput fullWidth formControlName=\"key\">\n            </div>\n            <div class=\"col-lg-4\">\n              <input type=\"text\" nbInput fullWidth formControlName=\"value\">\n            </div>\n            <div class=\"col-lg-2\">\n              <ng-container\n                [ngTemplateOutlet]=\"j==0 ? createRowTpl : closeRowTpl\"\n                [ngTemplateOutletContext]=\"{i:i, j:j}\"></ng-container>\n            </div>\n          </div>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n\n\n<ng-template #templateRef5>\n  <div class=\"mb-3 row\" [formGroup]=\"formGroup\">\n    <label for=\"inputValue\" class=\"label col-lg-2 col-form-label\">值</label>\n    <div class=\"col-lg-6\">\n      <input type=\"text\" id=\"inputValue\" nbInput fullWidth formControlName=\"value5\" />\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #templateRef6>\n  <div class=\"mb-3 row\" [formGroup]=\"formGroup\">\n    <label for=\"inputTextValue\" class=\"label col-lg-2 col-form-label\">值</label>\n    <div class=\"col-lg-6\">\n      <textarea rows=\"5\" nbInput fullWidth shape=\"round\" id=\"inputTextValue\"\n                formControlName=\"value5\"></textarea>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #createRowTpl let-i=\"i\" let-j=\"j\">\n  <button nbButton type=\"button\" status=\"success\" size=\"tiny\" (click)=\"createRow(i, j)\">\n    <nb-icon icon=\"plus-outline\"></nb-icon>\n  </button>\n  <button class=\"ml-1\" type=\"button\" nbButton status=\"success\" *ngIf=\"i == 0 && j == 0\" size=\"small\"\n          (click)=\"createRow(i, -1)\">\n    <nb-icon icon=\"plus-outline\"></nb-icon>\n  </button>\n  <button class=\"ml-1\" type=\"button\" nbButton status=\"danger\" *ngIf=\"i > 0 && j == 0\" size=\"small\"\n          (click)=\"deleteRow(i, -1)\">\n    <nb-icon icon=\"close-outline\"></nb-icon>\n  </button>\n</ng-template>\n<ng-template #closeRowTpl let-i=\"i\" let-j=\"j\">\n  <button nbButton type=\"button\" status=\"danger\" size=\"tiny\" (click)=\"deleteRow(i, j)\">\n    <nb-icon icon=\"close-outline\"></nb-icon>\n  </button>\n</ng-template>\n\n\n","import {Component, OnInit, TemplateRef} from '@angular/core';\nimport {OPTION_STORE, OPTION_UPDATE, OPTIONS} from \"../../@core/definition/system/api\";\nimport {Option} from \"../../@core/definition/system/type\";\nimport {IColumnType, ServerDataSource} from \"angular2-smart-table\";\nimport {Settings} from \"angular2-smart-table/lib/lib/settings\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {NbWindowService, NbWindowState} from \"@nebular/theme\";\nimport {EditEvent} from \"angular2-smart-table/lib/lib/events\";\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n})\nexport class OptionComponent implements OnInit {\n\n  settings = {};\n  source: ServerDataSource | undefined;\n  dataType = [\n    {t: 1, n: '开关类型'},\n    {t: 2, n: '数组类型'},\n    {t: 3, n: '键值类型'},\n    {t: 4, n: '数组键值类型'},\n    {t: 5, n: '值类型'},\n    {t: 6, n: '多行值类型'},\n  ];\n  constructor(protected http: HttpClient,\n              protected windowService: NbWindowService) {\n  }\n\n  editable = false;\n  formGroup = new FormGroup({\n    'name': new FormControl<string>('', [Validators.required]),\n    'type': new FormControl<number>(0,),\n    'value1': new FormControl<boolean>(false),\n    'value2': new FormArray<FormControl>([\n      new FormControl<string>('')\n    ]),\n    'value3': new FormArray<FormGroup>([\n      new FormGroup({\n        key: new FormControl(''),\n        value:new FormControl(''),\n      })\n    ]),\n    'value4': new FormArray<FormArray>([\n      new FormArray<FormGroup>([\n        new FormGroup({\n          key: new FormControl(''),\n          value:new FormControl(''),\n        })\n      ])\n    ]),\n    'value5': new FormControl<string>(''),\n  });\n\n\n  createRow(i: number, j: number) {\n    let type = this.formGroup.controls['type'].value;\n    switch (type) {\n      case 2:\n        this.value2.push(new FormControl<string>(''));\n        break;\n      case 3:\n        this.value3.push(\n          new FormGroup({\n            key: new FormControl(''),\n            value:new FormControl(''),\n          })\n        )\n        break;\n      case 4:\n        if (j === -1) {\n          this.value4.push(\n            new FormArray<FormGroup>([\n              new FormGroup({\n                key: new FormControl(''),\n                value:new FormControl(''),\n              })\n            ])\n          );\n        } else {\n          this.value4.controls[i].controls.push(\n            new FormGroup({\n              key: new FormControl(''),\n              value:new FormControl(''),\n            })\n          );\n        }\n        break;\n    }\n  }\n\n  deleteRow(i: number, j: number) {\n    let type = this.formGroup.controls['type'].value;\n    switch (type) {\n      case 2:\n        this.value2.removeAt(i);\n        break;\n      case 3:\n        this.value3.removeAt(i);\n        break;\n      case 4:\n        if (i > -1  &&  j < 0) {\n          this.value4.removeAt(i);\n        }\n        if (i > -1  && j > -1) {\n          this.value4.controls[i].removeAt(j);\n        }\n        break;\n    }\n  }\n\n  ngOnInit(): void {\n    this.settings = this.buildSettings()\n    this.source = new ServerDataSource(this.http, {\n      endPoint: OPTIONS,\n      dataKey: 'records',\n      totalKey: 'total',\n      pagerPageKey: 'page',\n      pagerLimitKey: 'limit',\n      filterFieldKey: '#field#',\n    });\n  }\n\n  onSubmit() {\n\n  }\n\n  create(tpl: TemplateRef<any>) {\n    this.formGroup.reset();\n    this.formGroup.controls['name'].enable()\n    this.formGroup.controls['type'].enable()\n    this.optionWindow(tpl);\n  }\n\n  edit(row: EditEvent, tpl: TemplateRef<any>) {\n    let option: Option = row.data;\n    this.bindFormControl(option);\n    this.optionWindow(tpl);\n  }\n\n  get value2() {\n    return this.formGroup.controls.value2 as FormArray<FormControl>;\n  }\n\n  get value3() {\n    return this.formGroup.controls.value3 as FormArray<FormGroup>;\n  }\n\n  get value4() {\n    return this.formGroup.controls.value4 as FormArray<FormArray<FormGroup>>;\n  }\n\n\n  private buildSettings(): Settings {\n    return {\n      selectMode: 'single',\n      actions: {\n        position: 'right',\n        add: false,\n        edit: false,\n        delete: false,\n        columnTitle: '操作',\n      },\n      pager: {\n        perPage: 30,\n      },\n      mode: 'external',\n      rowClassFunction: () => {\n        return 'text-break';\n      },\n      columns: {\n        name: {\n          title: '名称',\n        },\n        value: {\n          title: '值',\n          type: IColumnType.Html,\n          valuePrepareFunction: (value: any) => {\n            if (this.isArray(value)) {\n              return `<pre>` + JSON.stringify(value, undefined, 2) + `</pre>`;\n            }\n            if (this.isObject(value)) {\n              return `<pre>` + JSON.stringify(value, undefined, 2) + `</pre>`;\n            }\n            return value;\n          },\n          filter: false,\n        }\n      }\n    }\n  }\n\n\n  private isArray(obj: any) {\n    return Array.isArray(obj);\n  }\n\n  private isObject(obj: any) {\n    return obj instanceof Object;\n  }\n\n  private bindFormControl(option: Option) {\n    this.formGroup.controls['name'].disable()\n    this.formGroup.controls['type'].disable()\n    this.formGroup.controls['name'].setValue(option.name);\n    this.formGroup.controls['type'].setValue(option.type);\n    switch (option.type) {\n      case 1:\n        this.formGroup.controls[\"value1\"].setValue(option.value == 'on' ? true : false);\n        break;\n      case 2:\n        if (this.isArray(option.value)) {\n          option.value.forEach((val: string, index: number) => {\n            let formControl = this.value2.at(index);\n            if (formControl) {\n              formControl.setValue(val);\n            } else {\n              this.value2.push(new FormControl(val));\n            }\n          });\n        }\n        break;\n      case 3:\n        if (this.isObject(option.value)) {\n          const keys = Object.keys(option.value);\n          keys.forEach((key, index) => {\n            let formGroup = this.value3.at(index);\n            if (formGroup) {\n              formGroup.setValue({\n                key: key, value: option.value[key] || '',\n              });\n            } else {\n              this.value3.push(new FormGroup({\n                key: new FormControl(key),\n                value:new FormControl(option.value[key] || ''),\n              }));\n            }\n          });\n        }\n        break;\n      case 4:\n        if (this.isArray(option.value)) {\n          option.value.forEach((item: any, index: number) => {\n            if (!this.isObject(item)) {\n              return ;\n            }\n            let formArray = this.value4.at(index);\n            if (!formArray) {\n              formArray = new FormArray<FormGroup>([]);\n              this.value4.push(formArray);\n            }\n            const keys = Object.keys(item);\n            keys.forEach((key, index) => {\n              let formGroup = formArray.at(index);\n              if (formGroup) {\n                formGroup.setValue({\n                  key: key, value: item[key] || '',\n                });\n              } else {\n                formArray.push(new FormGroup({\n                  key: new FormControl(key),\n                  value:new FormControl(item[key] || ''),\n                }));\n              }\n            });\n          });\n        }\n        break;\n      case 5:\n      case 6:\n        this.formGroup.controls.value5.setValue(option.value);\n        break;\n    }\n  }\n\n  private optionWindow(tpl: TemplateRef<any>) {\n    this.windowService.open(tpl, {\n      title: \"\",\n      windowClass: 'col-lg-6',\n      context: {},\n      initialState: NbWindowState.FULL_SCREEN,\n      hasBackdrop: true,\n    })\n  }\n}\n","export const OPTIONS: string = '/option';\nexport const OPTION_STORE: string = '/option/store';\nexport const OPTION_UPDATE: string = '/option/{id}/update';\n\n\nexport const ROLES: string = '/role';\nexport const ROLE_STORE: string = '/role/store';\nexport const ROLE_UPDATE: string = '/role/{id}/update';\nexport const ROLE_DELETE: string = '/role/{id}/delete';\n\n\nexport const SITE_BASIC: string = '/site/basic';\nexport const SITE_BASIC_SAVE: string = '/site/basic/save';\nexport const SITE_MEDIA: string = '/site/media';\nexport const SITE_MEDIA_SAVE: string = '/site/media/save';\n\nexport const SITE_CONTENT: string = '/site/content';\nexport const SITE_CONTENT_SAVE: string = '/site/content/save';\n\n\n\n","export interface TreeViewOptions {\n  textField?: string;\n  childrenField?: string;\n  valueField?: string;\n  mode?: Mode;\n  collapsed?: boolean;\n  checked?: boolean;\n}\n\nexport interface TreeViewItem {\n  value: any;\n  name: string;\n  children: TreeViewItem[];\n  collapsed: boolean;\n  checked: boolean;\n}\n\nexport enum Mode {\n  Normal,\n  Checkbox,\n  File\n}\n","<ng-container *ngFor=\"let item of filterItems\">\n  <app-tree-item [item]=\"item\" [options]=\"options\" (checkedChange)=\"onChildCheckedChange(item, $event)\"></app-tree-item>\n</ng-container>\n","<div *ngIf=\"item\" class=\"tree-view-item\">\n  <div class=\"form-inline d-flex\">\n    <nb-icon\n      [class.disabled]=\"!item[options.childrenField!] || item[options.childrenField!].length < 1\"\n      [icon]=\"item.collapsed ? 'arrow-right' : 'arrow-down'\"\n      (click)=\"onCollapseExpand()\">\n    </nb-icon>\n    <div class=\"\">\n      <ng-container [ngSwitch]=\"options.mode\">\n        <div *ngSwitchCase=\"0\">\n          <span>{{ item[options.textField!] }}</span>\n        </div>\n        <div *ngSwitchCase=\"1\">\n          <nb-checkbox [indeterminate]=\"indeterminate\" [(checked)]=\"item.checked\" (checkedChange)=\"onCheckedChange($event)\">{{ item[options.textField!] }}</nb-checkbox>\n        </div>\n        <div *ngSwitchCase=\"2\">\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  <div *ngIf=\"!item.collapsed\">\n    <app-tree-item\n      (checkedChange)=\"onChildCheckedChange(child, $event)\"\n      *ngFor=\"let child of item[options.childrenField!]\"\n      [item]=\"child\"\n      [options]=\"options\">\n    </app-tree-item>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {Mode, TreeViewItem, TreeViewOptions} from './tree-view';\nimport {ReplaySubject, Subject} from \"rxjs\";\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree-view.component.html',\n})\nexport class TreeViewComponent implements OnInit, OnChanges {\n\n  protected $options: ReplaySubject<TreeViewOptions> = new ReplaySubject<TreeViewOptions>()\n  protected $items: Subject<any[]> = new Subject<any[]>()\n\n  constructor() { }\n\n  @Input() items: any[] = [];\n\n  filterItems: TreeViewItem[] = [];\n\n  private defaultOptions: TreeViewOptions = {\n    textField: 'name',\n    childrenField: 'children',\n    valueField: 'path',\n    mode: Mode.Checkbox,\n    collapsed: true,\n    checked: false,\n  };\n\n  @Input() options: TreeViewOptions = this.defaultOptions;\n\n  @Output() selectedChange = new EventEmitter<any[]>();\n\n  ngOnInit() {\n    this.$options.subscribe(options => {\n      this.options = Object.assign(this.defaultOptions, options);\n    });\n    this.$items.subscribe(items => {\n      items.forEach(item => {\n        this.rebuildItem(item, null);\n      })\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.filterItems = [];\n    const items = changes['items']\n    const options = changes['options'];\n    if (options) {\n      this.$options.next(options.currentValue);\n    }\n    if (items) {\n      this.$items.next(items.currentValue);\n    }\n  }\n\n  private rebuildItem(item: any, prevChildren: any) {\n    const rebuildChildren: TreeViewItem[] = [];\n    const rebuildItem: TreeViewItem = {\n      name: item[this.options.textField!],\n      value: item[this.options.valueField!],\n      children: rebuildChildren,\n      collapsed: typeof item.collapsed == \"boolean\"  ? item.collapsed : this.options.collapsed,\n      checked: typeof item.checked == \"boolean\"\n        ? item.checked\n        : item.hasOwnProperty('checked') && item.checked === undefined ? undefined : this.options.checked,\n    };\n    const children = item[this.options.childrenField!];\n    if (children && Array.isArray(children) && children.length > 0) {\n      children.forEach((child: any) => {\n        this.rebuildItem(child, rebuildChildren);\n      });\n    }\n    if (prevChildren !== null) {\n      prevChildren.push(rebuildItem);\n    } else {\n      this.filterItems.push(rebuildItem);\n    }\n  }\n\n  onChildCheckedChange(item: TreeViewItem, $event: boolean) {\n    const selection = this.getSelection();\n    this.selectedChange.emit(selection.checkedItems);\n  }\n\n  private getSelection() {\n    let checkedItems: TreeViewItem[] = [];\n    let uncheckedItems: TreeViewItem[] = [];\n    if (this.filterItems.length > 0) {\n      const selection = this.concatSelection(this.filterItems, checkedItems, uncheckedItems);\n      checkedItems = selection['checked'];\n      uncheckedItems = selection['unchecked'];\n    }\n    return {\n      checkedItems: checkedItems,\n      uncheckedItems: uncheckedItems\n    };\n  }\n  private concatSelection(items: TreeViewItem[], checked: TreeViewItem[], unchecked: TreeViewItem[]): { [k: string]: TreeViewItem[] } {\n    for (const item of items) {\n      if (item.checked || item.checked === undefined) {\n        checked.push(item.value);\n      } else {\n        unchecked.push(item.value);\n      }\n      if (item.children.length > 0) {\n        this.concatSelection(item.children, checked, unchecked);\n      }\n    }\n    return {\n      checked: checked,\n      unchecked: unchecked\n    };\n  }\n}\n\n@Component({\n  selector: 'app-tree-item',\n  templateUrl: './tree-item.component.html',\n  styleUrls: ['./tree-item.component.scss']\n})\nexport class TreeViewItemComponent implements DoCheck, AfterViewInit, OnDestroy {\n\n  @Input() item!: TreeViewItem | any;\n\n  @Input() options!: TreeViewOptions;\n\n  @Output() checkedChange = new EventEmitter<boolean>();\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngDoCheck(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  onCollapseExpand() {\n    const children = this.item[this.options.childrenField!];\n    if (Array.isArray(children) && children.length > 0) {\n      this.item.collapsed = !this.item.collapsed;\n    }\n\n  }\n\n  onCheckedChange(checked: boolean) {\n    this.item.children.forEach((child: any) => {\n      this.setCheckedRecursive(child, checked);\n    });\n    this.checkedChange.emit(checked);\n  }\n\n\n  onChildCheckedChange(child: any, checked: boolean) {\n    let itemChecked: undefined | boolean | null = null;\n    const children = this.item[this.options.childrenField!];\n    if (Array.isArray(children) && children.length > 0) {\n      for (const childItem of children) {\n        if (itemChecked === null) {\n          itemChecked = childItem.checked;\n        } else if (itemChecked !== childItem.checked) {\n          itemChecked = undefined;\n          break;\n        }\n      }\n      if (itemChecked === null) {\n        itemChecked = false;\n      }\n      if (this.item.checked !== itemChecked) {\n        this.item.checked = itemChecked;\n      }\n    }\n    this.checkedChange.emit(checked);\n  }\n\n  get indeterminate(): boolean {\n    return this.item!.checked === undefined;\n  }\n\n  private setCheckedRecursive(item: TreeViewItem, checked: boolean) {\n    item.checked = checked;\n    if (item.children.length > 0) {\n      item.children.forEach((child) => {\n        this.setCheckedRecursive(child, checked);\n      });\n    }\n  }\n}\n\n","<div class=\"row\">\n  <div class=\"col col-md-4 col-sm-6\">\n    <nb-card>\n      <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n        <span>\n        {{formGroup.controls['id'].value! > 0 ? '编辑角色' : '添加新角色'}}\n        </span>\n        <button status=\"primary\" size=\"small\" (click)=\"reset()\" nbButton *ngIf=\"formGroup.controls['id'].value!\"><nb-icon icon=\"plus-outline\"></nb-icon></button>\n      </nb-card-header>\n      <nb-card-body>\n        <form (ngSubmit)=\"onSubmit($event)\" [formGroup]=\"formGroup\">\n          <div class=\"mb-3\">\n            <label for=\"inputName\" class=\"label col-form-label\">名称</label>\n            <div>\n              <input nbInput id=\"inputName\" fullWidth status=\"primary\" formControlName=\"name\" />\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"inputPermission\" class=\"label col-form-label\">权限</label>\n            <div class=\"\">\n              <app-tree formControlName=\"capabilities\"\n                        id=\"inputPermission\"\n                        [items]=\"menus\"\n                        (selectedChange)=\"capabilitySelected($event)\"></app-tree>\n            </div>\n          </div>\n          <div class=\"my-3  d-flex justify-content-between\">\n            <label class=\"label col-form-label\"></label>\n            <button\n              type=\"submit\"\n              status=\"primary\"\n              size=\"small\"\n              [disabled]=\"formGroup.invalid || spinner\"\n              [nbSpinner]=\"spinner\"\n              nbButton>保存</button>\n          </div>\n        </form>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col col-md-8 col-sm-6\">\n    <nb-card>\n      <nb-card-body>\n        <angular2-smart-table\n          [settings]=\"settings\"\n          [source]=\"source\"\n          (edit)=\"edit($event)\"\n          (delete)=\"delete($event)\">\n        </angular2-smart-table>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ROLE_DELETE, ROLE_STORE, ROLE_UPDATE, ROLES} from \"../../@core/definition/system/api\";\nimport {MENUS} from \"../../@core/definition/open/api\";\nimport {Role} from \"../../@core/definition/system/type\";\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {SessionUser, OnSpinner, ResponseBody} from \"../../@core/definition/common\";\nimport {Capability} from \"../../@core/definition/open/type\";\nimport {SharedService} from \"../../@core/services/shared.service\";\nimport {ServerDataSource} from \"angular2-smart-table\";\nimport {Settings} from \"angular2-smart-table/lib/lib/settings\";\nimport {DeleteEvent, EditEvent} from \"angular2-smart-table/lib/lib/events\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {SPINNER} from \"../../@core/interceptor/authorization\";\n\ntype ResponseMenus = {menus: Capability[]} & ResponseBody;\n\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n})\nexport class RoleComponent implements OnInit, OnSpinner {\n  settings = {};\n  source: ServerDataSource | undefined;\n  menus: Capability[] = [];\n  formGroup = new FormGroup({\n    'id': new FormControl<number>(0),\n    'name': new FormControl<string>('', Validators.required),\n    'capabilities': new FormControl<string[]>([]),\n  });\n  spinner: boolean = false;\n  constructor(private http: HttpClient, private sharedService: SharedService) {\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n\n  ngOnInit(): void {\n    this.http.get<ResponseMenus>(MENUS).subscribe(res => {\n      this.menus = res.menus;\n    });\n    this.settings = this.buildSettings()\n    this.source = new ServerDataSource(this.http, {\n      endPoint: ROLES,\n      dataKey: 'records',\n      totalKey: 'total',\n      pagerPageKey: 'page',\n      pagerLimitKey: 'limit',\n      filterFieldKey: '#field#',\n    });\n  }\n\n\n\n  capabilitySelected(capabilities: any[]) {\n    this.formGroup.controls['capabilities'].setValue(capabilities)\n  }\n\n  edit($event: EditEvent) {\n    let role: Role = $event.data;\n    this.selected(role);\n  }\n\n  delete($event: DeleteEvent) {\n    let role: Role = $event.data;\n    if (confirm(\"确定删除角色: \" + role.name)) {\n      this.http.delete(ROLE_DELETE, {body: role}).subscribe();\n    }\n  }\n\n  onSubmit($event: any) {\n    const data: any = this.formGroup.getRawValue();\n    let url = data.id > 0 ? ROLE_UPDATE : ROLE_STORE;\n    this.http.post(url, data, {context:new HttpContext().set(SPINNER, this)}).subscribe();\n  }\n\n  reset() {\n    this.formGroup.reset();\n    this.selected({id: 0, name: '', capabilities: []});\n  }\n\n  private selected(role: Role) {\n    this.menus = this.menus.map(item => {\n      this.selection(item, role.capabilities);\n      return item;\n    });\n    this.formGroup.setValue({\n      'id': role.id,\n      'name': role.name,\n      'capabilities': role.capabilities,\n    });\n  }\n\n  private selection(item: any, capabilities: string[]) {\n    item.checked = capabilities.includes(item.path)\n    if (Array.isArray(item.children) && item.children.length >  0) {\n      let checked = null;\n      for (const child of item.children) {\n        if (checked === null) {\n          checked = capabilities.includes(child.path);\n        } else if (checked !== capabilities.includes(child.path)) {\n          checked = undefined;\n        }\n      }\n      if (checked === null) {\n        item.checked = false;\n      }\n      if (item.checked !== checked) {\n        item.checked = checked;\n      }\n      for (const child of item.children) {\n        this.selection(child, capabilities);\n      }\n    }\n  }\n  private buildSettings(): Settings {\n    return {\n      selectMode: 'single',\n      actions: {\n        position: 'right',\n        add: false,\n        edit: true,\n        delete: true,\n        columnTitle: '操作',\n      },\n      edit: {\n        editButtonContent: '<i class=\"nb-edit\"></i>',\n        saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n        cancelButtonContent: '<i class=\"nb-close\"></i>',\n      },\n      delete: {\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\n        confirmDelete: true,\n      },\n      pager: {\n        perPage: 30,\n      },\n      mode: 'external',\n      columns: {\n        name: {\n          title: '名称',\n          filter: true,\n        }\n      }\n    }\n  }\n}\n","<div class=\"card-body py-4\">\n\n  <form #ngForm=\"ngForm\" (ngSubmit)=\"action($event)\">\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"title\">站点标题</label>\n      <div class=\"col-8\">\n        <input\n          id=\"title\"\n          name=\"name\"\n          #name=\"ngModel\"\n          [(ngModel)]=\"option.site_title\"\n          [status]=\"name.dirty ? (name.invalid  ? 'danger' : 'success') : 'primary'\"\n          status=\"primary\" nbInput/>\n        <label class=\"label col-form-label d-block\">取个名子好难呀。</label>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"append_title\">副标题</label>\n      <div class=\"col-8\">\n        <input nbInput id=\"append_title\" name=\"append_title\" [(ngModel)]=\"option.site_subtitle\" status=\"primary\"/>\n        <label class=\"label col-form-label d-block\">取个口号好难呀。</label>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"siteurl\">站点地址</label>\n      <div class=\"col-10\">\n        <input nbInput id=\"siteurl\" name=\"siteurl\" [(ngModel)]=\"option.site_url\" status=\"primary\"/>\n        <label class=\"label col-form-label d-block\">网站域名(http://example.com)。</label>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"site_static_url\">静态地址</label>\n      <div class=\"col-10\">\n        <input nbInput id=\"site_static_url\" name=\"staic_url\" [(ngModel)]=\"option.site_static_url\" status=\"primary\"/>\n        <label class=\"label col-form-label d-block\">静态资源文件地址(http://static.example.com)。</label>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"site_keyword\">Keyword</label>\n      <div class=\"col-8\">\n        <input nbInput id=\"site_keyword\" name=\"site_keyword\" [(ngModel)]=\"option.site_keyword\" fullWidth\n               status=\"primary\"/>\n        <label class=\"label col-form-label d-block\">让更多的人搜索到你的站，你可以使用\",\"分隔多个关键字</label>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"site_description\">Description</label>\n      <div class=\"col-8\">\n        <input nbInput id=\"site_description\" name=\"site_description\" [(ngModel)]=\"option.site_description\" fullWidth\n               status=\"primary\"/>\n        <label class=\"label col-form-label d-block\">介绍下你的站。</label>\n      </div>\n    </div>\n\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\" for=\"timezone\">时区</label>\n      <div class=\"col-8\">\n        <input #autoInput\n               id=\"timezone\"\n               nbInput\n               name=\"timezone\"\n               [(ngModel)]=\"option.timezone\"\n               type=\"text\"\n               (input)=\"onChange()\"\n               placeholder=\"选择时区\"\n               status=\"primary\"\n               [nbAutocomplete]=\"auto\"/>\n        <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n          <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n            {{ option }}\n          </nb-option>\n        </nb-autocomplete>\n        <label class=\"label col-form-label d-block\">选择与您在同一时区的城市或一个UTC。</label>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\"></label>\n      <div class=\"col-10\">\n        <button status=\"primary\" size=\"small\" [disabled]=\"submitted || !ngForm.valid\" [nbSpinner]=\"submitted\" nbButton>\n          保存更改\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {OnSpinner, SiteOption} from \"../../../../@core/definition/common\";\nimport {map} from \"rxjs/operators\";\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {SITE_BASIC_SAVE, SITE_BASIC} from \"../../../../@core/definition/system/api\";\nimport {SPINNER} from \"../../../../@core/interceptor/authorization\";\n\n@Component({\n  selector: 'app-site-general',\n  templateUrl: './general.component.html',\n})\nexport class GeneralComponent implements OnInit, OnSpinner {\n\n  option: Record<string, any> = {};\n  timezone: string[] = [];\n  filteredOptions$: Observable<string[]> | undefined;\n  @ViewChild('autoInput') input: ElementRef | undefined;\n  submitted: boolean = false;\n  constructor(private readonly http: HttpClient,) { }\n\n  onSpinner(spinner: boolean): void {\n    this.submitted = spinner;\n  }\n\n  ngOnInit(): void {\n    this.http.get<SiteOption>(SITE_BASIC).subscribe(res => {\n        this.timezone = res.timezone;\n        this.option = res.option;\n        this.filteredOptions$ = of(res.timezone)\n    });\n  }\n  action($event: any) {\n    this.http.post(SITE_BASIC_SAVE, this.option, {context: new HttpContext().set(SPINNER, this) }).subscribe();\n  }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.timezone.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n  getFilteredOptions(value: string): Observable<string[]> {\n    return of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    );\n  }\n\n  onChange() {\n    this.filteredOptions$ = this.getFilteredOptions(this.input?.nativeElement.value);\n  }\n\n  onSelectionChange($event: any) {\n    this.filteredOptions$ = this.getFilteredOptions($event);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {OnSpinner, SiteAdOption} from \"../../../../@core/definition/common\";\nimport {SITE_MEDIA_SAVE, SITE_MEDIA} from \"../../../../@core/definition/system/api\";\nimport {SPINNER} from \"../../../../@core/interceptor/authorization\";\n\n@Component({\n  selector: 'app-site-media',\n  templateUrl: './media.component.html',\n})\nexport class MediaComponent implements OnInit, OnSpinner {\n  option: Record<string, any> = {};\n  submitted: boolean = false;\n  constructor(private readonly http:HttpClient,) { }\n  ngOnInit(): void {\n    this.http.get<SiteAdOption>(SITE_MEDIA).subscribe(res => {\n      this.option = res.option;\n    });\n  }\n  action($event: any) {\n    this.http.post(SITE_MEDIA_SAVE, this.option, {context: new HttpContext().set(SPINNER, this) }).subscribe();\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.submitted = spinner;\n  }\n\n  thumbnailCrop($event: boolean) {\n    this.option.thumbnail_crop = $event ? 1 : 0;\n  }\n}\n","<div class=\"card-body py-4\">\n  <form #ngForm=\"ngForm\" (ngSubmit)=\"action($event)\">\n    <div class=\"header\">\n      <div>\n        <h6>图片大小</h6>\n        <div class=\"my-3\">下面列出来的尺寸决定插入媒体库内的图片之最大尺寸。以像素为单位。</div>\n      </div>\n    </div>\n    <div class=\"my-4 row align-items-center\">\n      <label class=\"label col-form-label col-2\" >缩略图大小</label>\n      <div class=\"col-10\">\n        <div class=\"d-flex flex-column\">\n          <div class=\"mb-3\">\n            <label class=\"label col-form-label\" for=\"thumbnail_size_w\">宽度</label>\n            <input nbInput id=\"thumbnail_size_w\" type=\"number\" class=\"ms-0 ms-sm-4\" name=\"thumbnail_w\" [(ngModel)]=\"option.thumbnail_size_w\">\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"label col-form-label\" for=\"thumbnail_size_h\">高度</label>\n            <input nbInput id=\"thumbnail_size_h\" type=\"number\" class=\"ms-0 ms-sm-4\" name=\"thumbnail_h\" [(ngModel)]=\"option.thumbnail_size_h\">\n          </div>\n          <div>\n            <nb-checkbox [checked]=\"option.thumbnail_crop == 1\" (checkedChange)=\"thumbnailCrop($event)\">总是裁剪缩略图到这个尺寸（一般情况下，缩略图应保持原始比例）</nb-checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"mb-4 row align-items-center\">\n      <label class=\"label col-form-label col-2\" >中等大小</label>\n      <div class=\"col-10\">\n        <div class=\"d-flex flex-column\">\n          <div class=\"mb-3\">\n            <label class=\"label col-form-label\" for=\"medium_size_w\">最大宽度</label>\n            <input nbInput id=\"medium_size_w\" class=\"ms-0 ms-sm-4\" type=\"number\" name=\"medium_w\" [(ngModel)]=\"option.medium_size_w\">\n          </div>\n          <div>\n            <label class=\"label col-form-label\" for=\"medium_size_h\">最大高度</label>\n            <input nbInput id=\"medium_size_h\" class=\"ms-0 ms-sm-4\" type=\"number\" name=\"medium_h\" [(ngModel)]=\"option.medium_size_h\">\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"mb-4 row align-items-center\">\n      <label class=\"label col-form-label col-2\" >大尺寸</label>\n      <div class=\"col-10\">\n        <div class=\"d-flex flex-column\">\n          <div class=\"mb-3\">\n            <label class=\"label col-form-label\" for=\"large_size_w\">最大宽度</label>\n            <input nbInput id=\"large_size_w\" class=\"ms-0 ms-sm-4\" name=\"large_w\" type=\"number\" [(ngModel)]=\"option.large_size_w\">\n          </div>\n          <div>\n            <label class=\"label col-form-label\" for=\"large_size_h\">最大高度</label>\n            <input nbInput id=\"large_size_h\" class=\"ms-0 ms-sm-4\" name=\"large_h\" type=\"number\" [(ngModel)]=\"option.large_size_h\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\"></label>\n      <div class=\"col-10\">\n        <button status=\"primary\" size=\"small\" [disabled]=\"submitted || !ngForm.valid\" nbButton>保存更改</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n","import { NgModule } from \"@angular/core\";\nimport {TreeViewComponent, TreeViewItemComponent} from \"./tree-view.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {ThemeModule} from \"../../@theme/theme.module\";\n\n@NgModule({\n  declarations: [\n    TreeViewComponent,\n    TreeViewItemComponent,\n  ],\n  exports: [\n    TreeViewComponent,\n  ],\n  imports: [\n    CommonModule,\n    ThemeModule,\n  ]\n})\nexport class TreeViewModule{ }\n","<div class=\"card-body py-4\">\n  <form #ngForm=\"ngForm\" (ngSubmit)=\"action($event)\">\n    <div class=\"header\"><div><h6>文章</h6></div></div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"default_category\">默认文章分类</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-select id=\"default_category\" name=\"default_category\" [(ngModel)]=\"option.default_category\">\n          <nb-option [value]=\"cate.id\" *ngFor=\"let cate of categories\">{{cate.name}}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"default_post_format\">默认文章形式</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-select id=\"default_post_format\" name=\"default_post_format\" [(ngModel)]=\"option.default_post_format\">\n          <nb-option [value]=\"f.alias\" *ngFor=\"let f of formats\">{{ f.name }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"posts_per_page\">默认文章每页显示</label>\n      <div class=\"col-12 col-md-10\">\n        <input id=\"posts_per_page\" name=\"posts_per_page\" min=\"1\" max=\"200\" status=\"primary\" type=\"number\" nbInput [(ngModel)]=\"option.posts_per_page\" />\n        条\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"permalink\">默认文章链接</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-radio-group id=\"permalink\" name=\"permalink\" [(ngModel)]=\"option.permalink_structure\">\n          <nb-radio class=\"d-flex justify-content-between\" [value]=\"permalink.alias\" *ngFor=\"let permalink of permalinks\">\n            {{permalink.name}}\n            <span class=\"ml-5\">{{option.site_url + permalink.example}}</span>\n          </nb-radio>\n        </nb-radio-group>\n      </div>\n    </div>\n    <div class=\"header\"><div><h6>评论</h6></div></div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"default_comment_status\">开启评论</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-toggle id=\"default_comment_status\" name=\"default_comment_status\" status=\"success\" [checked]=\"option.default_comment_status === 'open'\" (checkedChange)=\"defaultCommentStatus($event)\">\n          {{option.default_comment_status === 'on' ? '关闭' : '开启'}}\n        </nb-toggle>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"comment_moderation\">评论审核</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-toggle id=\"comment_moderation\" name=\"comment_moderation\" status=\"success\" [checked]=\"option.comment_moderation === 'on'\" (checkedChange)=\"commentModeration($event)\">\n          {{option.comment_moderation === 'on' ? '关闭' : '开启'}}\n        </nb-toggle>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"page_comments\">分页显示</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-toggle id=\"page_comments\" name=\"page_comments\" status=\"success\" [checked]=\"option.page_comments === 'on'\" (checkedChange)=\"pageComment($event)\">\n          {{option.page_comments === 'on' ? '关闭' : '开启'}}\n        </nb-toggle>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"comments_per_page\">每页显示</label>\n      <div class=\"col-12 col-md-10\">\n        <input id=\"comments_per_page\" name=\"comments_per_page\" min=\"1\" max=\"200\"  type=\"number\" status=\"primary\" nbInput [(ngModel)]=\"option.comments_per_page\" />条\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-12 col-md-2\" for=\"comment_order\">显示顺序</label>\n      <div class=\"col-12 col-md-10\">\n        <nb-select id=\"comment_order\" name=\"comment_order\" [(ngModel)]=\"option.comment_order\">\n          <nb-option [value]=\"'asc'\">旧的</nb-option>\n          <nb-option [value]=\"'desc'\">新的</nb-option>\n        </nb-select>\n      </div>\n    </div>\n    <div class=\"mb-3 row\">\n      <label class=\"label col-form-label col-2\"></label>\n      <div class=\"col-10\">\n        <button status=\"primary\" size=\"small\" [disabled]=\"submitted || !ngForm.valid\" type=\"submit\" nbButton>保存更改</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {OnSpinner, Records, SiteContentOption} from \"../../../../@core/definition/common\";\nimport {SITE_CONTENT_SAVE, SITE_CONTENT} from \"../../../../@core/definition/system/api\";\nimport {SPINNER} from \"../../../../@core/interceptor/authorization\";\nimport {CATEGORIES} from \"../../../../@core/definition/content/api\";\nimport {TermTaxonomy} from \"../../../../@core/definition/content/type\";\n\n@Component({\n  selector: 'app-site-content',\n  templateUrl: './content.component.html',\n})\nexport class ContentComponent implements OnInit, OnSpinner {\n  option: Record<string, any> = {};\n  categories: TermTaxonomy[] = [];\n  submitted: boolean = false;\n\n  formats = [\n    {alias: '', name: '标准'},\n    {alias: 'aside', name: '日志'},\n    {alias: 'chat', name: '聊天'},\n    {alias: 'gallery', name: '相册'},\n    {alias: 'link', name: '链接'},\n    {alias: 'image', name: '图片'},\n    {alias: 'quote', name: '引语'},\n    {alias: 'status', name: '状态'},\n    {alias: 'video', name: '视频'},\n    {alias: 'audio', name: '音频'},\n  ];\n\n  permalinks = [\n    {alias: 'post_permalink_normal', name: '朴素', example: '?p=123'},\n    {alias: 'post_permalink_number', name: '数字型', example: '/p/123'},\n    {alias: 'post_permalink_name', name: '文章名', example: '/sample-post'},\n    {alias: 'post_permalink_date', name: '年月份和名称型', example: '/2022/09/sample-post'},\n  ];\n\n  constructor(private readonly http:HttpClient,) { }\n  ngOnInit(): void {\n    this.http.get<Records<TermTaxonomy>>(CATEGORIES).subscribe(res => {\n      this.categories = res.records;\n    });\n    this.http.get<SiteContentOption>(SITE_CONTENT).subscribe(res => {\n      this.option = res.option;\n    });\n  }\n  action($event: any) {\n    this.http.post(SITE_CONTENT_SAVE, this.option, {context: new HttpContext().set(SPINNER, this) }).subscribe();\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.submitted = spinner;\n  }\n\n  defaultCommentStatus($event: boolean) {\n    this.option.default_comment_status = $event ? 'open' : '';\n  }\n\n  commentModeration($event: boolean) {\n    this.option.comment_moderation = $event ? 'on' : 'off';\n  }\n\n  pageComment($event: boolean) {\n    this.option.page_comments = $event ? 'on' : 'off';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {OptionComponent} from './option.component';\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {NbToggleModule} from '@nebular/theme';\nimport {RoleComponent} from './role.component';\nimport {GeneralComponent} from './setting/general/general.component';\nimport {MediaComponent} from './setting/media/media.component';\nimport {TreeViewModule} from \"../../shared/treeview/tree-view.module\";\nimport {ControlModule} from \"../../shared/control/control.module\";\nimport {ContentComponent} from \"./setting/content/content.component\";\nimport {Angular2SmartTableModule} from \"angular2-smart-table\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingComponent} from \"./setting.component\";\n\nconst routes: Routes = [\n    {\n      path: 'option',\n      title: '选项',\n      component: OptionComponent,\n    },\n    {\n      path: 'setting',\n      component: SettingComponent,\n      children: [\n        {\n          path: '',\n          redirectTo: 'general',\n          pathMatch: 'full',\n        },\n        {\n          path: 'general',\n          component: GeneralComponent,\n        },\n        {\n          path: 'content',\n          component: ContentComponent,\n        },\n        {\n          path: 'media',\n          component: MediaComponent\n        },\n      ]\n    },\n    {\n      path: 'role',\n      title: '角色',\n      component: RoleComponent,\n    },\n];\n\n@NgModule({\n  declarations: [\n    OptionComponent,\n    RoleComponent,\n    SettingComponent,\n    GeneralComponent,\n    MediaComponent,\n    ContentComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ThemeModule,\n    Angular2SmartTableModule,\n    NbToggleModule,\n    TreeViewModule,\n    ControlModule,\n  ],\n  providers: []\n})\nexport class SystemModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  template: `\n    <nb-card>\n      <nb-card-body>\n        <nb-route-tabset [tabs]=\"tabs\"></nb-route-tabset>\n      </nb-card-body>\n    </nb-card>\n  `\n})\nexport class SettingComponent implements OnInit {\n\n  tabs: any[] = [\n    {\n      title: '常规',\n      icon: 'settings',\n      route: './general',\n    },\n    {\n      title: '内容',\n      icon: 'file-text-outline',\n      route: './content',\n    },\n    {\n      title: \"媒体\",\n      icon: \"video-outline\",\n      route: \"./media\",\n    }\n  ];\n\n  ngOnInit(): void {\n\n  }\n}\n"],"x_google_ignoreList":[]}