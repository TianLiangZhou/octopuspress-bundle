{"version":3,"file":"290.4ffc1e65a22214c5.js","mappings":"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","names":["UploadService","constructor","http","upload","files","status","forEach","file","formData","FormData","append","name","req","HttpRequest","UPLOAD_FILE","responseType","reportProgress","progress","Subject","response","startTime","Date","getTime","this","request","subscribe","next","event","type","HttpEventType","percentDone","Math","round","loaded","total","HttpResponse","body","complete","error","asObservable","_angular_core__WEBPACK_IMPORTED_MODULE_3__","factory","i0","MemberComponent","activatedRoute","configService","label","value","route","snapshot","ngOnInit","roles","settings","buildSettings","source","ServerDataSource","endPoint","USER_MEMBER","dataKey","totalKey","pagerPageKey","pagerLimitKey","filterFieldKey","selectMode","actions","position","add","edit","delete","columnTitle","editButtonContent","saveButtonContent","cancelButtonContent","deleteButtonContent","confirmDelete","pager","perPage","mode","rowClassFunction","columns","account","title","IColumnType","filter","valuePrepareFunction","user","avatar","id","nickname","length","val","push","join","email","registeredAt","$event","data","window","confirm","deleteUser","post","USER_DELETE_MEMBER","_","_a","refresh","alert","batch","getSelectedItems","item","batchMode","resetEmail","context","HttpContext","set","SPINNER","USER_RESET_EMAIL","onSpinner","spinner","core","selectors","ctx","NewComponent","router","ckfinder","FormGroup","FormControl","Validators","url","password","meta","ngOnDestroy","subscription","unsubscribe","onChoose","formGroup","controls","setValue","metaGroup","addControl","paramMap","map","path","USER_SELF_PROFILE","has","userId","parseInt","get","isNaN","navigateByUrl","then","USER_MEMBER_PROFILE","buildEditorForm","onSubmit","getRawValue","USER_CREATE_MEMBER","USER_UPDATE_MEMBER","getInputType","showPassword","toggleShowPassword","removeValidators","disable","patchValue","getBtnName","replace","popup","resourceType","multi","routes","component","pathMatch","UserModule","CommonModule","ThemeModule","RouterModule","Angular2SmartTableModule","ControlModule","UploadModule","imports","NbButtonModule","NbProgressBarModule","NbListModule","NbCardModule","NbIconModule"],"sourceRoot":"webpack:///","sources":["./dashboard/app/@core/services/upload.service.ts","./dashboard/app/pages/user/member.component.html","./dashboard/app/pages/user/member.component.ts","./dashboard/app/pages/user/new.component.html","./dashboard/app/pages/user/new.component.ts","./dashboard/app/pages/user/user.module.ts","./dashboard/app/shared/upload/upload.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpRequest, HttpResponse, HttpEventType} from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport {UPLOAD_FILE} from \"../definition/open/api\";\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  // file from event.target.files[0]\n  upload(files: Set<File>): { [p: string]: { progress: Observable<number>, response: Observable<any> } } {\n\n    const status: { [key: string]: { progress: Observable<number>, response: Observable<any> } } = {};\n\n    files.forEach(file => {\n      // create a new multipart-form for every file\n      const formData: FormData = new FormData();\n      formData.append('file', file, file.name);\n\n      // create a http-post request and pass the form\n      // tell it to report the upload progress\n      const req = new HttpRequest('POST', UPLOAD_FILE, formData, {\n        responseType: 'json',\n        reportProgress: true\n      });\n\n      // create a new progress-subject for every file\n      const progress = new Subject<number>();\n      const response = new Subject<any>();\n\n      // send the http-request and subscribe for progress-updates\n\n      const startTime = new Date().getTime();\n      this.http.request(req).subscribe(\n      {\n          next(event) {\n            if (event.type === HttpEventType.UploadProgress) {\n              // calculate the progress percentage\n              const percentDone = Math.round((100 * event.loaded) / event.total!);\n              // pass the percentage into the progress-stream\n              progress.next(percentDone);\n            } else if (event instanceof HttpResponse) {\n              // Close the progress-stream if we get an answer form the API\n              // The upload is complete\n              response.next(event.body);\n              progress.complete();\n            }\n          },\n          error(error) {\n            response.next(error);\n            progress.complete();\n          }\n        }\n      );\n      // Save every progress-observable in a map of all observables\n      status[file.name] = {\n        response: response,\n        progress: progress.asObservable()\n      };\n    });\n\n    // return the map of progress.observables\n    return status;\n  }\n}\n","<nb-card>\n  <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n    <span>{{route.title}}</span>\n    <a routerLink=\"/app/user/new\" nbButton size=\"small\" status=\"primary\"><nb-icon icon=\"plus-outline\"></nb-icon></a>\n  </nb-card-header>\n  <nb-card-body>\n    <form (ngSubmit)=\"batch()\" class=\"mb-2\">\n      <div class=\"row\">\n        <nb-select class=\"col\" name=\"batchMode\" [(ngModel)]=\"batchMode\">\n          <nb-option [value]=\"option.value\" *ngFor=\"let option of batches\">{{option.label}}</nb-option>\n        </nb-select>\n        <div class=\"col-1 ms-2\">\n          <button nbButton status=\"primary\" [disabled]=\"!batchMode || spinner\" [nbSpinner]=\"spinner\" type=\"submit\">应用</button>\n        </div>\n      </div>\n    </form>\n    <angular2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (delete)=\"delete($event)\">\n    </angular2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import {Component, OnInit} from '@angular/core';\nimport {User} from \"../../@core/definition/user/type\";\nimport {USER_DELETE_MEMBER, USER_MEMBER, USER_RESET_EMAIL} from '../../@core/definition/user/api';\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {IColumnType, ServerDataSource} from \"angular2-smart-table\";\nimport {DeleteEvent} from \"angular2-smart-table/lib/lib/events\";\nimport {Settings} from \"angular2-smart-table/lib/lib/settings\";\nimport {ConfigurationService} from \"../../@core/services/configuration.service\";\nimport {ActivatedRoute, ActivatedRouteSnapshot} from \"@angular/router\";\nimport {OnSpinner} from \"../../@core/definition/common\";\nimport {SPINNER} from \"../../@core/interceptor/authorization\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './member.component.html',\n})\nexport class MemberComponent implements OnInit, OnSpinner {\n  settings = {};\n  source: ServerDataSource | undefined;\n  batches = [\n    {'label': '批量操作', 'value': ''},\n    {'label': '删除', 'value': 'delete'},\n    {'label': '发送密码重置邮件', 'value': 'reset'},\n  ];\n  batchMode: string = '';\n  private roles: {label: string}[] = [];\n  route: ActivatedRouteSnapshot;\n  spinner: boolean = false;\n\n  constructor(private http: HttpClient,\n              protected activatedRoute: ActivatedRoute,\n              protected configService: ConfigurationService) {\n\n    this.route = activatedRoute.snapshot;\n  }\n\n\n  ngOnInit(): void {\n    this.roles = this.configService.roles();\n    this.settings = this.buildSettings()\n    this.source = new ServerDataSource(this.http, {\n      endPoint: USER_MEMBER,\n      dataKey: 'records',\n      totalKey: 'total',\n      pagerPageKey: 'page',\n      pagerLimitKey: 'limit',\n      filterFieldKey: '#field#',\n    });\n  }\n\n\n  private buildSettings(): Settings {\n    return {\n      selectMode: 'multi',\n      actions: {\n        position: 'right',\n        add: false,\n        edit: false,\n        delete: true,\n        columnTitle: '操作',\n      },\n      edit: {\n        editButtonContent: '<i class=\"nb-edit\"></i>',\n        saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n        cancelButtonContent: '<i class=\"nb-close\"></i>',\n      },\n      delete: {\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\n        confirmDelete: true,\n      },\n      pager: {\n        perPage: 30,\n      },\n      mode: 'external',\n      rowClassFunction: () => {\n        return 'text-break';\n      },\n      columns: {\n        account: {\n          title: '用户名',\n          type: IColumnType.Html,\n          filter: true,\n          valuePrepareFunction: (account: string, user: User) => {\n            return `<img width=\"50\" alt=\"\" src=\"${user.avatar}\" />\n            <a href=\"#/app/user/${user.id}\">${account}</a>`\n          }\n        },\n        nickname: {\n          title: '显示名称',\n          type: IColumnType.Text,\n          filter: true,\n          valuePrepareFunction: (nickname: string, user: User) => {\n            return nickname == user.account ? '-' : nickname;\n          }\n        },\n        roles: {\n          title: '角色',\n          type: IColumnType.Text,\n          valuePrepareFunction: (roles: number[], user: User) => {\n            if (roles.length < 1) {\n              return '-';\n            }\n            let name: string[] = [];\n            roles.forEach(val => {\n              if (this.roles[val - 1]) {\n                name.push(this.roles[val - 1].label)\n              }\n            });\n            return name.join(',');\n          },\n        },\n        email: {\n          title: '邮箱',\n          type: IColumnType.Html,\n          filter: true,\n          valuePrepareFunction: (email: string, user: User) => {\n            return `<a href=\"mailto:${email}\">${email}</a>`\n          }\n        },\n        registeredAt: {\n          title: '加入时间',\n          type: IColumnType.Text,\n          filter: false,\n        },\n      }\n    }\n  }\n\n  delete($event: DeleteEvent) {\n    let user: User = $event.data;\n    if (user.id == 1) {\n      window.alert(\"此用户不能被删除!\");\n      return ;\n    }\n    if (window.confirm(\"确认删除用户: \" + user.account)) {\n      this.deleteUser([user.id]);\n      this.http.post(USER_DELETE_MEMBER, {id: user.id})\n        .subscribe(_ => {\n          this.source?.refresh();\n        });\n    }\n  }\n\n  batch() {\n    let id: number[] = [];\n    this.source?.getSelectedItems().forEach((item: User) => {\n      id.push(item.id);\n    });\n    switch (this.batchMode) {\n      case 'delete':\n        if (id.length > 0 && window.confirm(\"确认删除已选择的用户?\")) {\n          this.deleteUser(id);\n        }\n        break;\n      case 'reset':\n        if (id.length > 0 && window.confirm(\"确认给已选择的用户发送重置密码邮件?\")) {\n          this.resetEmail(id);\n        }\n        break;\n    }\n  }\n\n  private deleteUser(id: number[]) {\n    this.http.post(USER_DELETE_MEMBER, {id: id}, {context:new HttpContext().set(SPINNER, this)})\n      .subscribe(_ => {\n        this.source?.refresh();\n      });\n  }\n  private resetEmail(id: number[]) {\n    this.http.post(USER_RESET_EMAIL, {id: id}, {context:new HttpContext().set(SPINNER, this)}).subscribe();\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n}\n","<nb-card>\n  <nb-card-header>{{route.title}}</nb-card-header>\n  <nb-card-body>\n    <form (ngSubmit)=\"onSubmit($event)\" [formGroup]=\"formGroup\">\n      <div class=\"mb-3 row\">\n        <label for=\"inputName\" class=\"label col-form-label col-12 col-md-2\">用户名</label>\n        <div class=\"col-12 col-md-5\">\n          <input nbInput id=\"inputName\" fullWidth status=\"primary\" formControlName=\"account\" />\n        </div>\n        <label class=\"label offset-md-2 col-form-label\">用户名在站点登陆中使用，不可以修改。</label>\n      </div>\n\n      <div class=\"mb-3 row\">\n        <label for=\"inputEmail\" class=\"label col-form-label col-12 col-md-2\">邮箱</label>\n        <div class=\"col-12 col-md-5\">\n          <input nbInput id=\"inputEmail\" fullWidth status=\"primary\" type=\"email\" formControlName=\"email\" />\n        </div>\n        <label class=\"label offset-md-2 col-form-label\">在忘记密码的时候可以通过邮箱找回密码。</label>\n      </div>\n\n      <div class=\"mb-3 row\">\n        <label for=\"inputNickname\" class=\"label col-form-label col-12 col-md-2\">显示名称</label>\n        <div class=\"col-12 col-md-5\">\n          <input nbInput id=\"inputNickname\" fullWidth status=\"primary\" formControlName=\"nickname\" />\n        </div>\n        <label class=\"label offset-md-2 col-form-label\">显示在站点的任何地方。</label>\n      </div>\n\n      <div class=\"mb-3 row\">\n        <label for=\"inputUrl\" class=\"label col-form-label col-12 col-md-2\">网站地址</label>\n        <div class=\"col-12 col-md-5\">\n          <input nbInput id=\"inputUrl\" fullWidth status=\"primary\" type=\"url\" formControlName=\"url\" />\n        </div>\n        <label class=\"label offset-md-2 col-form-label\">个人网页地址。</label>\n      </div>\n\n      <div class=\"mb-3 row\">\n        <label for=\"inputPassword\" class=\"label col-form-label col-12 col-md-2\">密码</label>\n        <div class=\"col-12 col-md-5\">\n          <nb-form-field>\n            <input nbInput id=\"inputPassword\"   fullWidth status=\"primary\" [type]=\"getInputType()\" formControlName=\"password\" />\n            <button nbSuffix nbButton ghost type=\"button\" (click)=\"toggleShowPassword()\">\n              <nb-icon [icon]=\"showPassword ? 'eye-outline' : 'eye-off-2-outline'\"\n                       pack=\"eva\"\n                       [attr.aria-label]=\"showPassword ? 'hide password' : 'show password'\">\n              </nb-icon>\n            </button>\n          </nb-form-field>\n        </div>\n        <label class=\"label offset-md-2 col-form-label\">\n          必须是数字字母组合，不修改密码保持为空即可。\n        </label>\n      </div>\n      <div class=\"mb-3 row\">\n        <label class=\"label col-form-label col-12 col-md-2\">个性头像</label>\n        <div class=\"col-12 col-md-5\">\n          <div class=\" d-flex justify-content-between align-items-center\">\n            <img alt=\"头像\" [src]=\"formGroup.controls['avatar'].value\" width=\"128\" />\n            <button type=\"button\" size=\"medium\" nbButton (click)=\"avatar()\">选择头像</button>\n          </div>\n        </div>\n        <label class=\"label offset-md-2 col-form-label\">请使用相同比例正方形图片。</label>\n      </div>\n\n      <div class=\"mb-3 row\">\n        <label for=\"inputRole\" class=\"label col-form-label col-12 col-md-2\">角色</label>\n        <div class=\"col-12 col-md-5\">\n          <nb-select multiple id=\"inputRole\" fullWidth formControlName=\"roles\">\n            <nb-option *ngFor=\"let option of roles\" [value]=\"option.value\">{{option.label}}</nb-option>\n          </nb-select>\n        </div>\n      </div>\n\n      <nb-card class=\"px-0 border-0\">\n        <nb-card-header class=\"px-0\">其它设置</nb-card-header>\n      </nb-card>\n      <div class=\"mb-3 row\" [formGroup]=\"metaGroup\">\n        <label for=\"inputEditor\" class=\"label col-form-label col-12 col-md-2\">可视化编辑器</label>\n        <div class=\"col-12 col-md-5\">\n          <nb-checkbox id=\"inputEditor\" formControlName=\"rich_editing\">撰写文章时不使用可视化编辑器</nb-checkbox>\n        </div>\n      </div>\n\n\n      <div class=\"mb-3 row\" [formGroup]=\"metaGroup\">\n        <label for=\"inputDescription\" class=\"label col-form-label col-12 col-md-2\">个人说明</label>\n        <div class=\"col-12 col-md-5\">\n          <textarea id=\"inputDescription\" formControlName=\"description\" fullWidth rows=\"5\" nbInput></textarea>\n        </div>\n      </div>\n\n\n      <control-container [controls]=\"controls\" [form]=\"metaGroup\"></control-container>\n      <div class=\"mb-3 row\">\n        <label class=\"label col-form-label col-12 col-md-2\"></label>\n        <div class=\"col-12 col-md-5\">\n          <button nbButton status=\"primary\" [disabled]=\"formGroup.invalid || spinner\" [nbSpinner]=\"spinner\" type=\"submit\">\n            {{ getBtnName() }}\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import {ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {\n  USER_CREATE_MEMBER,\n  USER_MEMBER_PROFILE,\n  USER_SELF_PROFILE,\n  USER_UPDATE_MEMBER\n} from '../../@core/definition/user/api';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {OnSpinner} from \"../../@core/definition/common\";\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {ConfigurationService} from \"../../@core/services/configuration.service\";\nimport {ActivatedRoute, ActivatedRouteSnapshot, Router} from \"@angular/router\";\nimport {SPINNER} from \"../../@core/interceptor/authorization\";\nimport {User} from \"../../@core/definition/user/type\";\nimport {CKFinderService} from \"../../@core/services/ckfinder.service\";\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-user-new',\n  templateUrl: './new.component.html',\n})\nexport class NewComponent implements OnInit, OnSpinner, OnDestroy {\n  formGroup: FormGroup = new FormGroup<any>({\n    id: new FormControl<number>(0),\n    account: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    nickname: new FormControl(''),\n    url: new FormControl('', [Validators.pattern('')]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(32)]),\n    roles: new FormControl<number[]>([]),\n    avatar: new FormControl<string>(''),\n    meta: new FormGroup({}),\n  });\n  spinner: boolean = false;\n  roles: {value: string, label: string}[] = [\n    {value: '', label: '无'}\n  ];\n\n  controls = [];\n\n  showPassword = true;\n\n  route: ActivatedRouteSnapshot;\n  private subscription: Subscription | undefined;\n\n\n  constructor(private http: HttpClient,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private ckfinder: CKFinderService,\n              private configService: ConfigurationService) {\n      this.route = activatedRoute.snapshot;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.roles.push(...this.configService.roles());\n    this.subscription = this.ckfinder.onChoose().subscribe((files) => {\n      if (files.length < 1) {\n        return ;\n      }\n      this.formGroup.controls.avatar.setValue(files[0].url);\n    });\n    this.metaGroup.addControl('description', new FormControl(''));\n    this.metaGroup.addControl('rich_editing', new FormControl<boolean>(false));\n    this.activatedRoute.paramMap.subscribe(map => {\n      if (this.activatedRoute.snapshot.url[0].path !== 'new') {\n        let url = USER_SELF_PROFILE;\n        if (map.has('id')) {\n          let userId = parseInt(map.get('id') || '0', 10)\n          if (isNaN(userId) || userId < 1) {\n            this.router.navigateByUrl(\"/app/user\").then();\n            return;\n          }\n          url = USER_MEMBER_PROFILE.replace('{id}', userId + '');\n        }\n        this.http.get<User>(url).subscribe(response => {\n          this.buildEditorForm(response);\n        });\n      }\n    });\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n\n  onSubmit($event: any) {\n    const body = this.formGroup.getRawValue();\n    let url = USER_CREATE_MEMBER;\n    if (body.id > 0) {\n      url = USER_UPDATE_MEMBER;\n    }\n    this.http.post(url, body, {\n      context: new HttpContext().set(SPINNER, this)\n    }).subscribe(() => {\n      this.router.navigateByUrl(\"/app/user\").then();\n    });\n  }\n  getInputType() {\n    if (this.showPassword) {\n      return 'text';\n    }\n    return 'password';\n  }\n\n  toggleShowPassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  get metaGroup() {\n    return this.formGroup.controls['meta'] as FormGroup;\n  }\n\n  private buildEditorForm(user: User) {\n    this.formGroup.controls['password'].removeValidators(Validators.required);\n    this.formGroup.controls['account'].disable();\n    this.formGroup.patchValue({\n      id: user.id,\n      avatar: user.avatar,\n      account: user.account,\n      nickname: user.nickname,\n      email: user.email,\n      url: user.url,\n      password: user.password,\n      roles: user.roles,\n      meta: user.meta\n    });\n  }\n\n  getBtnName() {\n    return this.formGroup.controls['id'].value < 1\n          ? '添加新用户'\n          : '更新' + this.route.title?.replace('编辑', '');\n  }\n\n  avatar() {\n    this.ckfinder.popup({\n      resourceType: 'Images',\n      multi: false,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MemberComponent} from './member.component';\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {Angular2SmartTableModule} from \"angular2-smart-table\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NewComponent} from \"./new.component\";\nimport {ControlModule} from \"../../shared/control/control.module\";\nimport {UploadModule} from \"../../shared/upload/upload.module\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    title: '所有用户',\n    component: MemberComponent,\n  },\n  {\n    path: 'new',\n    title: '添加新用户',\n    pathMatch: 'full',\n    component: NewComponent,\n  },\n  {\n    path: 'profile',\n    title: '个人资料',\n    component: NewComponent,\n  },\n  {\n    path: ':id',\n    title: '编辑用户',\n    component: NewComponent,\n  },\n];\n\n\n\n@NgModule({\n  declarations: [\n    MemberComponent,\n    NewComponent,\n  ],\n  imports: [\n    CommonModule,\n    ThemeModule,\n    RouterModule.forChild(routes),\n    Angular2SmartTableModule,\n    ControlModule,\n    UploadModule,\n  ],\n})\nexport class UserModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {UploadComponent} from './upload.component';\nimport {DialogComponent} from './dialog/dialog.component';\nimport {NbButtonModule, NbCardModule, NbIconModule, NbListModule, NbProgressBarModule} from '@nebular/theme';\nimport {UploadService} from '../../@core/services/upload.service';\n\n\n\n@NgModule({\n  declarations: [UploadComponent, DialogComponent],\n  exports: [\n    UploadComponent\n  ],\n  imports: [\n    CommonModule,\n    NbButtonModule,\n    NbProgressBarModule,\n    NbListModule,\n    NbCardModule,\n    NbIconModule\n  ],\n  providers: [\n    UploadService\n  ]\n})\nexport class UploadModule { }\n"],"x_google_ignoreList":[]}