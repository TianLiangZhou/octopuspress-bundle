{"version":3,"file":"140.506e1de6183d0195.js","mappings":"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","names":["THEME_UPLOAD","i0","NavigationComponent","constructor","route","http","document","config","sidebar","this","link","title","page","post","custom","category","nodeId","type","children","id","name","nodes","defaultNode","themeNavigationLocation","FormGroup","ngAfterViewInit","timer","subscribe","val","toggle","onSpinner","spinner","submitted","ngOnInit","taxonomySettings","taxonomies","postTypeSettings","postTypes","accordionItems","key","visibility","showNavigation","push","label","typeName","defaultOptions","searchGroups","addControl","FormControl","accordionItem","searchGroupResult","controls","valueChanges","pipe","distinctUntilChanged","debounceTime","filter","value","switchMap","getObjects","get","res","dataSetKey","dataSet","forEach","item","themeNavigation","navigate","prepareDragDrop","nav","editor","params","navigation","length","alias","node","dropTargetIds","includes","nodeLookup","dragMoved","evt","of","event","e","elementFromPoint","pointerPosition","x","y","clearDragInfo","container","classList","contains","closest","dropActionTodo","targetId","_a","getAttribute","targetRect","getBoundingClientRect","oneThird","height","action","top","showDragInfo","drop","draggedItemId","data","parentItemId","previousContainer","targetListId","getParentNodeId","console","log","draggedItem","oldItemContainer","newContainer","i","findIndex","c","splice","targetIndex","isExpanded","nodesToSearch","parentId","ret","getElementById","add","dropped","undefined","querySelectorAll","element","remove","delete","window","confirm","_","create","save","context","HttpContext","set","SPINNER","saveLocation","location","addToNav","url","option","checked","selectedItem","searchResult","setValue","taxonomy","objectId","removeNode","indexOf","number","TAXONOMIES","size","map","response","records","POSTS","navigationLocation","displaySearch","selectSearchItem","$event","disabled","core","DOCUMENT","selectors","ctx","WidgetComponent","onToggle","leftSidebarCompact","compact","onExpand","widgetRequest","blockRequest","combineLatest","widgetResponse","blocks","widgets","categories","widget","slug","w","icon","widgetCategories","filterWidgetCategories","historyWidgets","slice","selectBlockIndex","block","blockWidgets","widgetData","find","sections","section","product","Object","assign","form","buildFormGroup","flat","attributes","emitEvent","toggleWidgetSidebar","hasHiddenWidgetSidebar","rollbackFilterWidgetCategories","hasHiddenSettingSidebar","toggleSettingSidebar","search","target","keywords","quickToggle","index","isShown","selectorBlock","selectorWidget","widgetItems","Id","selectedWidget","unselectWidget","relatedTarget","className","insertWidget","isQuick","pop","generateUUID","unshift","getBlockWidgets","body","widgetName","getRawValue","d","Date","getTime","performance","now","replace","r","Math","random","floor","toString","ElementRef","WidgetItemComponent","common","ds","render","subscribeChange","values","output","nativeElement","innerHTML","isMedia","ngOnDestroy","unsubscribe","ThemeComponent","toast","sanitizer","dialog","getThemes","themes","activate","upgrade","upload","files","danger","uri","openDownload","ref","test","close","CustomComponent","elements","formGroup","isChanged","hasOwnProperty","theme","customized","dataKey","routes","path","component","DecorationModule","CommonModule","ThemeModule","RouterModule","DragDropModule","UploadModule","ControlModule"],"sourceRoot":"webpack:///","sources":["./dashboard/app/@core/definition/decoration/api.ts","./dashboard/app/pages/decoration/navigation/navigation.component.html","./dashboard/app/pages/decoration/navigation/navigation.component.ts","./dashboard/app/pages/decoration/widget/widget.component.html","./dashboard/app/pages/decoration/widget/widget.component.ts","./dashboard/app/pages/decoration/theme/theme.component.html","./dashboard/app/pages/decoration/theme/theme.component.ts","./dashboard/app/pages/decoration/custom/custom.component.html","./dashboard/app/pages/decoration/custom/custom.component.ts","./dashboard/app/pages/decoration/decoration.module.ts"],"sourcesContent":["export const NAVIGATE_STRUCTURE: string = '/navigate/structure';\nexport const NAVIGATE: string = '/navigate/{id}';\nexport const NAVIGATE_DELETE: string =  \"/navigate/{id}/delete\"\nexport const NAVIGATE_SAVE: string =  \"/navigate/save\"\nexport const NAVIGATE_SAVE_LOCATION: string =  \"/navigate/save/location\"\n\n\nexport const THEMES: string = \"/theme\";\nexport const THEME_ACTIVATE: string = \"/theme/{name}/activate\";\nexport const THEME_UPGRADE: string = \"/theme/{name}/upgrade\";\nexport const THEME_DELETE: string = \"/theme/{name}/delete\";\nexport const THEME_UPLOAD: string = \"/theme/upload\";\n\n\nexport const THEME_CUSTOMIZE: string = \"/theme/customize\";\nexport const THEME_CUSTOMIZED: string = \"/theme/customized\";\n\n\nexport const WIDGETS: string = \"/widget/registered\";\nexport const BLOCKS: string = \"/widget/blocks\";\nexport const WIDGET_RENDERED: string = \"/widget/{name}/rendered\";\nexport const SAVE_BLOCK_WIDGET: string = \"/widget/saved\";\n\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <nb-card>\n      <nb-card-body>\n        <div class=\"d-flex align-items-center\">\n          <div *ngIf=\"navigate.length > 0\" class=\"d-flex align-items-center\">\n            <span>\n              选择要编辑的导航：\n            </span>\n            <nb-select [(ngModel)]=\"nav.id\">\n              <nb-option *ngFor=\"let m of navigate\" [value]=\"m.id\">{{m.name}}</nb-option>\n            </nb-select>\n            <button class=\"mx-2\" nbButton status=\"primary\" [disabled]=\"nav.id < 1\" (click)=\"editor()\">编辑</button>\n            <span>或</span>\n          </div>\n          <span><a href=\"javascript:\" (click)=\"create()\">创建新导航</a>&nbsp;&nbsp;<span>不要忘了保存您的修改!</span></span>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-5\">\n    <nb-card>\n      <nb-card-header>\n        添加导航项\n      </nb-card-header>\n      <nb-card-body>\n        <nb-accordion class=\"interface-complementary-area\" multi=\"true\">\n          <nb-accordion-item>\n            <nb-accordion-item-header>\n              自定义链接\n            </nb-accordion-item-header>\n            <nb-accordion-item-body>\n              <form #customForm=\"ngForm\">\n                <div class=\"mb-3 row\">\n                  <label for=\"custom_link\" class=\"label col-sm-3 col-form-label\">链接</label>\n                  <div class=\"col-sm-9\">\n                    <input id=\"custom_link\" required name=\"link\" [(ngModel)]=\"custom.link\" placeholder=\"https://\"  fullWidth status=\"primary\" nbInput>\n                  </div>\n                </div>\n                <div class=\"mb-3 row\">\n                  <label for=\"custom_link_name\" class=\"label col-sm-3 col-form-label\">链接名称</label>\n                  <div class=\"col-sm-9\">\n                    <input id=\"custom_link_name\" required name=\"link_name\" [(ngModel)]=\"custom.title\" fullWidth status=\"primary\" nbInput>\n                  </div>\n                </div>\n                <div class=\"mb-3 text-right\">\n                  <button nbButton status=\"primary\" [disabled]=\"!customForm.valid\" (click)=\"addToNav('custom')\">添加到导航</button>\n                </div>\n              </form>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n\n          <nb-accordion-item *ngFor=\"let item of accordionItems; index as i\">\n            <nb-accordion-item-header>\n              {{item.label}}\n            </nb-accordion-item-header>\n            <nb-accordion-item-body>\n              <form>\n                <div class=\"form-group\">\n                  <nb-tabset>\n                    <nb-tab class=\"px-0\" tabTitle=\"最近\">\n                      <div class=\"d-flex flex-column\">\n                        <nb-checkbox [(checked)]=\"p.checked\" *ngFor=\"let p of item.defaultOptions;\">\n                          {{item.type == 'post' ? p.title : p.name}}\n                        </nb-checkbox>\n                      </div>\n                    </nb-tab>\n                    <nb-tab class=\"px-0\" tabTitle=\"搜索\" [formGroup]=\"searchGroups\">\n                      <div>\n                        <label>\n                          <input [formControlName]=\"item.typeName\" nbInput status=\"primary\" [nbAutocomplete]=\"searchAuto\" fullWidth>\n                        </label>\n                        <nb-autocomplete #searchAuto [handleDisplayFn]=\"displaySearch\" (selectedChange)=\"selectSearchItem(item.typeName, $event)\">\n                          <nb-option *ngFor=\"let option of searchGroupResult[item.typeName] | async\" [value]=\"option\">\n                            {{ option.title||option.name }}\n                          </nb-option>\n                        </nb-autocomplete>\n                      </div>\n                    </nb-tab>\n                  </nb-tabset>\n                </div>\n                <div class=\"form-group text-right\">\n                  <button nbButton [disabled]=\"disabled(item.typeName)\" status=\"primary\" (click)=\"addToNav(item.typeName)\">添加到导航</button>\n                </div>\n              </form>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n        </nb-accordion>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-7\">\n    <form #navForm=\"ngForm\" (ngSubmit)=\"save()\">\n      <nb-card>\n      <nb-card-header>\n        导航结构\n      </nb-card-header>\n      <nb-card-body>\n          <div class=\"form-group row\">\n            <label for=\"nav_name\" class=\"label col-sm-2 col-form-label\">菜单名称</label>\n            <div class=\"col-sm-10\">\n              <input id=\"nav_name\"\n                     required=\"required\"\n                     name=\"navName\"\n                     [status]=\"navName.dirty ? (navName.invalid  ? 'danger' : 'success') : 'primary'\"\n                     [(ngModel)]=\"nav.name\"\n                     #navName=\"ngModel\"\n                     status=\"primary\"\n                     nbInput>\n              <ng-container *ngIf=\"navName.invalid && navName.touched\">\n                <p class=\"caption status-danger\" *ngIf=\"navName.errors?.required\">\n                  名称不能为空!\n                </p>\n              </ng-container>\n            </div>\n          </div>\n          <p class=\"pt-4 label\">拖放各个项目到您喜欢的顺序，点击右侧的箭头可进行更详细的设置。</p>\n          <div class=\"node_container\" cdkDropList [cdkDropListData]=\"nav.nodes\"\n               [id]=\"'main'\"\n               [cdkDropListConnectedTo]=\"dropTargetIds\"\n               (cdkDropListDropped)=\"drop($event)\"\n               [cdkDropListSortingDisabled]=\"true\">\n            <div *ngFor=\"let node of nav.nodes\" cdkDrag [cdkDragData]=\"node.nodeId\"\n                 (cdkDragMoved)=\"dragMoved($event)\">\n              <ng-container *ngTemplateOutlet=\"tmplNode,context:{node:node}\"></ng-container>\n            </div>\n          </div>\n      </nb-card-body>\n      <nb-card-footer>\n        <div style=\"font-size:15px;font-weight:bold;\" class=\"py-2\">菜单设置</div>\n        <div class=\"form-group row\">\n          <label for=\"nav_location\" class=\"label col-sm-2 col-form-label\">显示位置</label>\n          <div id=\"nav_location\" class=\"col-sm-10 d-flex flex-column\">\n            <nb-checkbox [(checked)]=\"nav.themeNavigationLocation![location.alias]\" *ngFor=\"let location of themeNavigation\">{{location.name}}</nb-checkbox>\n          </div>\n        </div>\n      </nb-card-footer>\n      <nb-card-footer>\n        <div class=\"d-flex justify-content-between\">\n          <button nbButton type=\"button\" status=\"danger\" [disabled]=\"nav.id < 1 || nav.name.length < 1\" (click)=\"delete()\">删除导航</button>\n          <button type=\"submit\" nbButton status=\"primary\" [disabled]=\"!navForm.valid || submitted\">保存导航</button>\n        </div>\n      </nb-card-footer>\n    </nb-card>\n    </form>\n\n\n    <form *ngIf=\"themeNavigation.length > 0\" (ngSubmit)=\"saveLocation()\">\n    <nb-card >\n      <nb-card-header>菜单位置</nb-card-header>\n      <nb-card-body>\n          <div class=\"row mb-3\">\n            <label class=\"label col-2 col-form-label\">主题菜单位置</label>\n            <label class=\"label col-10 col-form-label\">已指派的菜单</label>\n          </div>\n          <div class=\"row mb-3\" *ngFor=\"let location of themeNavigation; let i = index;\">\n            <label for=\"nav_location_{{i}}\" class=\"label col-2 col-form-label\">{{ location.name }}</label>\n            <div class=\"col-10\">\n              <nb-select name=\"nav_location_{{i}}\" [(ngModel)]=\"themeNavigationLocation[location.alias]\">\n                <nb-option *ngFor=\"let m of navigate\" [value]=\"m.id\">{{m.name}}</nb-option>\n              </nb-select>\n            </div>\n          </div>\n      </nb-card-body>\n      <nb-card-footer class=\"d-flex justify-content-end\">\n        <button nbButton status=\"primary\" type=\"submit\" [disabled]=\"submitted\">保存设置</button>\n      </nb-card-footer>\n    </nb-card>\n    </form>\n\n  </div>\n</div>\n\n<ng-template #tmplNode let-node=\"node\">\n  <div class=\"node-item\" [attr.data-id]=\"node.nodeId\" [attr.id]=\"'node-'+node.nodeId\">\n    <nb-accordion>\n      <nb-accordion-item>\n        <nb-accordion-item-header class=\"justify-content-between\">\n          <div>{{node.title}}</div>\n          <div class=\"mr-4\">{{typeMapName[node.type]}}</div>\n        </nb-accordion-item-header>\n        <nb-accordion-item-body>\n          <form ngForm>\n            <div class=\"mb-2\" *ngIf=\"node.type == 'link'\">\n              <label for=\"custom_link_id_{{node.nodeId}}\" class=\"label col-form-label\">URL</label>\n              <input id=\"custom_link_id_{{node.nodeId}}\" [name]=\"node.nodeId\" [(ngModel)]=\"node.url\"  nbInput fullWidth status=\"primary\" />\n            </div>\n            <div class=\"mb-2\">\n              <label for=\"custom_link_name_{{node.nodeId}}\" class=\"label col-form-label\">导航名称</label>\n              <input id=\"custom_link_name_{{node.nodeId}}\" [name]=\"node.nodeId\" [(ngModel)]=\"node.title\" nbInput fullWidth status=\"primary\" />\n            </div>\n            <div>\n              <button nbButton size=\"tiny\" status=\"danger\" (click)=\"remove(node.nodeId)\">移除</button>\n              &nbsp;|&nbsp;\n              <button nbButton size=\"tiny\" status=\"primary\">取消</button>\n            </div>\n          </form>\n        </nb-accordion-item-body>\n      </nb-accordion-item>\n    </nb-accordion>\n    <div *ngIf=\"node.children.length > 0\" class=\"node-children\"\n         cdkDropList [cdkDropListData]=\"node.children\"\n         [id]=\"node.nodeId\"\n         [cdkDropListConnectedTo]=\"dropTargetIds\"\n         (cdkDropListDropped)=\"drop($event)\"\n         [cdkDropListSortingDisabled]=\"true\">\n      <div *ngFor=\"let child of node.children\" cdkDrag [cdkDragData]=\"child.nodeId\"\n           (cdkDragMoved)=\"dragMoved($event)\">\n        <ng-container *ngTemplateOutlet=\"tmplNode,context:{node:child}\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import {AfterViewInit, Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {Observable, of, timer} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, filter, map, switchMap} from \"rxjs/operators\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {OnSpinner, Records, ResponseBody} from \"../../../@core/definition/common\";\nimport {POSTS, TAXONOMIES} from \"../../../@core/definition/content/api\";\nimport {\n  NAVIGATE,\n  NAVIGATE_DELETE,\n  NAVIGATE_SAVE,\n  NAVIGATE_SAVE_LOCATION,\n  NAVIGATE_STRUCTURE\n} from \"../../../@core/definition/decoration/api\";\nimport {Post, TermTaxonomy} from \"../../../@core/definition/content/type\";\nimport {SPINNER} from \"../../../@core/interceptor/authorization\";\nimport {ConfigurationService} from \"../../../@core/services/configuration.service\";\nimport {NbSidebarService} from \"@nebular/theme\";\n\ninterface TreeNode {\n  id?: number;\n  nodeId: string;\n  title: string;\n  objectId?: number;\n  url?: string\n  children: TreeNode[];\n  type: string,\n  isExpanded?: boolean;\n}\n\ntype CheckArticle = Post & { checked: boolean };\ntype CheckTermTaxonomy = TermTaxonomy & { checked: boolean };\n\ntype NavigateStructure = ResponseBody & {\n  dataSet: Record<string, CheckArticle[] | CheckTermTaxonomy[]>,\n  navigate: CheckTermTaxonomy[],\n  themeNavigation: { alias: string, name: string }[],\n  themeNavigationLocation: { [key: string]: number },\n}\n\ntype Navigation = {\n  id: number,\n  name: string,\n  nodes: TreeNode[],\n  themeNavigationLocation?: { [key: string]: boolean },\n};\n\ntype NavigationResponse = ResponseBody & {\n  navigation: Navigation\n};\n\ninterface DropInfo {\n  targetId: string;\n  action?: string;\n}\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NavigationComponent implements OnInit, OnSpinner, AfterViewInit {\n  private searchResult: Record<string, object|undefined> = {};\n  navigate: TermTaxonomy[] = [];\n  themeNavigation: { alias: string, name: string }[] = [];\n  themeNavigationLocation: { [key: string]: number } = {};\n\n  // ids for connected drop lists\n  dropTargetIds: string[] = [];\n  nodeLookup: { [key: string]: TreeNode } = {};\n  dropActionTodo: DropInfo | undefined;\n  submitted = false;\n\n  custom = {\n    link: \"\",\n    title: \"\",\n  }\n  typeMapName: any = {\n    'page': '页面',\n    'post': '文章',\n    'custom': '自定义链接',\n    'category': '分类',\n  };\n\n  private defaultNode: TreeNode = {\n    nodeId: 'demo',\n    title: '示例1',\n    type: 'custom',\n    children: []\n  };\n  nav: Navigation = {\n    id: 0,\n    name: \"\",\n    nodes: [\n      this.defaultNode\n    ],\n    themeNavigationLocation: {},\n  };\n  searchGroups = new FormGroup<any>({});\n  searchGroupResult: Record<string, Observable<Record<string, any>[]>> = {};\n  accordionItems: Record<string, any>[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    @Inject(DOCUMENT) private document: Document,\n    private config: ConfigurationService,\n    protected sidebar: NbSidebarService,\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    });\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.submitted = spinner;\n  }\n\n  ngOnInit(): void {\n    let taxonomySettings = this.config.taxonomies();\n    let postTypeSettings = this.config.postTypes();\n    let accordionItems = [];\n    for (let key in postTypeSettings) {\n      if (!postTypeSettings[key].visibility.showNavigation) {\n        continue;\n      }\n      accordionItems.push({\n        label: postTypeSettings[key].label,\n        type: 'post',\n        name: key,\n        typeName: 'post_' + key,\n        defaultOptions: [],\n      });\n      this.searchGroups.addControl('post_' + key, new FormControl<string>(''));\n    }\n    for (let key in taxonomySettings) {\n      if (!taxonomySettings[key].visibility.showNavigation) {\n        continue;\n      }\n      accordionItems.push({\n        label: taxonomySettings[key].label,\n        type: 'taxonomy',\n        name: key,\n        typeName: 'taxonomy_' + key,\n        defaultOptions: [],\n      });\n      this.searchGroups.addControl('taxonomy_' + key, new FormControl<string>(''));\n    }\n    for (let accordionItem of accordionItems) {\n      let control = this.searchGroups.controls[accordionItem.typeName];\n      this.searchGroupResult[accordionItem.typeName] = control.valueChanges.pipe(\n        distinctUntilChanged(),\n        debounceTime(500),\n        filter((value) => !!value),\n        switchMap(value => this.getObjects(value, accordionItem.name, accordionItem.type))\n      )\n    }\n    this.accordionItems = accordionItems;\n    this.http.get<NavigateStructure>(NAVIGATE_STRUCTURE).subscribe(res => {\n      for (let dataSetKey in res.dataSet) {\n        this.accordionItems.forEach(item => {\n          if (item.typeName === dataSetKey) {\n            item.defaultOptions = res.dataSet[dataSetKey];\n          }\n        });\n      }\n      this.themeNavigation = res.themeNavigation;\n      this.themeNavigationLocation = res.themeNavigationLocation;\n      this.navigate = res.navigate;\n    });\n    this.prepareDragDrop(this.nav.nodes);\n  }\n\n  editor() {\n    this.http.get<NavigationResponse>(NAVIGATE, {params: {id: this.nav.id}}).subscribe(res => {\n      this.nav = res.navigation;\n      if (this.nav.nodes.length < 1) {\n        this.nav.nodes.push(this.defaultNode);\n      }\n      this.nav.themeNavigationLocation = {};\n      this.themeNavigation.forEach(item => {\n        this.nav.themeNavigationLocation![item.alias] = this.themeNavigationLocation[item.alias] == this.nav.id;\n      });\n      this.prepareDragDrop(this.nav.nodes);\n    });\n  }\n\n  prepareDragDrop(nodes: TreeNode[]) {\n    nodes.forEach(node => {\n      if (!this.dropTargetIds.includes(node.nodeId)) {\n        this.dropTargetIds.push(node.nodeId);\n      }\n      this.nodeLookup[node.nodeId] = node;\n      this.prepareDragDrop(node.children);\n    });\n  }\n\n\n  // @debounce(50)\n  dragMoved(evt: any) {\n    of(evt).pipe(\n      debounceTime(50)\n    ).subscribe(event => {\n      let e = this.document.elementFromPoint(event.pointerPosition.x, event.pointerPosition.y);\n      if (!e) {\n        this.clearDragInfo();\n        return;\n      }\n      let container = e.classList.contains(\"node-item\") ? e : e.closest(\".node-item\");\n      if (!container) {\n        this.clearDragInfo();\n        return;\n      }\n      this.dropActionTodo = {\n        targetId: container.getAttribute(\"data-id\") ?? \"\"\n      };\n      const targetRect = container.getBoundingClientRect();\n      const oneThird = targetRect.height / 3;\n\n      if (event.pointerPosition.y - targetRect.top < oneThird) {\n        // before\n        this.dropActionTodo[\"action\"] = \"before\";\n      } else if (event.pointerPosition.y - targetRect.top > 2 * oneThird) {\n        // after\n        this.dropActionTodo[\"action\"] = \"after\";\n      } else {\n        // inside\n        this.dropActionTodo[\"action\"] = \"inside\";\n      }\n      this.showDragInfo();\n    });\n  }\n\n\n  drop(event: any) {\n    if (!this.dropActionTodo) return;\n    const draggedItemId = event.item.data;\n    const parentItemId = event.previousContainer.id;\n    const targetListId = this.getParentNodeId(this.dropActionTodo.targetId, this.nav.nodes, 'main');\n    console.log(\n      '\\nmoving\\n[' + draggedItemId + '] from list [' + parentItemId + ']',\n      '\\n[' + this.dropActionTodo.action + ']\\n[' + this.dropActionTodo.targetId + '] from list [' + targetListId + ']');\n\n    const draggedItem = this.nodeLookup[draggedItemId];\n\n    const oldItemContainer = parentItemId != 'main' ? this.nodeLookup[parentItemId].children : this.nav.nodes;\n    const newContainer = targetListId != 'main' ? this.nodeLookup[targetListId].children : this.nav.nodes;\n\n    let i = oldItemContainer.findIndex((c: TreeNode) => c.nodeId === draggedItemId);\n    oldItemContainer.splice(i, 1);\n\n    switch (this.dropActionTodo.action) {\n      case 'before':\n      case 'after':\n        const targetIndex = newContainer.findIndex((c: TreeNode) => c.nodeId === this.dropActionTodo?.targetId);\n        if (this.dropActionTodo.action == 'before') {\n          newContainer.splice(targetIndex, 0, draggedItem);\n        } else {\n          newContainer.splice(targetIndex + 1, 0, draggedItem);\n        }\n        break;\n\n      case 'inside':\n        this.nodeLookup[this.dropActionTodo.targetId].children.push(draggedItem)\n        this.nodeLookup[this.dropActionTodo.targetId].isExpanded = true;\n        break;\n    }\n\n    this.clearDragInfo(true)\n  }\n\n  getParentNodeId(id: string, nodesToSearch: TreeNode[], parentId: string): string {\n    for (let node of nodesToSearch) {\n      if (node.nodeId == id) return parentId;\n      let ret = this.getParentNodeId(id, node.children, node.nodeId);\n      if (ret) return ret;\n    }\n    return \"\";\n  }\n\n  showDragInfo() {\n    this.clearDragInfo();\n    if (this.dropActionTodo) {\n      document.getElementById(\"node-\" + this.dropActionTodo.targetId)?.classList.add(\"drop-\" + this.dropActionTodo.action);\n    }\n  }\n\n  clearDragInfo(dropped = false) {\n    if (dropped) {\n      this.dropActionTodo = undefined;\n    }\n    this.document\n      .querySelectorAll(\".drop-before\")\n      .forEach(element => element.classList.remove(\"drop-before\"));\n    this.document\n      .querySelectorAll(\".drop-after\")\n      .forEach(element => element.classList.remove(\"drop-after\"));\n    this.document\n      .querySelectorAll(\".drop-inside\")\n      .forEach(element => element.classList.remove(\"drop-inside\"));\n  }\n\n  delete() {\n    if (window.confirm(\"确认删除菜单 [\" + this.nav.name + \"]吗？\")) {\n      this.http.post(NAVIGATE_DELETE, this.nav)\n        .subscribe(_ => {\n          this.create();\n        });\n    }\n  }\n\n  save() {\n    this.http.post(NAVIGATE_SAVE, this.nav, {context: new HttpContext().set(SPINNER, this)}).subscribe(res => {\n    });\n  }\n\n  saveLocation() {\n    this.http.post(NAVIGATE_SAVE_LOCATION, {location: this.themeNavigationLocation}, {context: new HttpContext().set(SPINNER, this)}).subscribe(res => {\n    });\n  }\n\n  addToNav(type: string) {\n    if (type === 'custom') {\n      let id = \"custom-\" + this.custom.title;\n      let node = {\n        nodeId: id,\n        title: this.custom.title,\n        type: type,\n        url: this.custom.link,\n        children: [],\n      }\n      this.custom.title = \"\";\n      this.custom.link = \"\";\n      this.nav.nodes.push(node);\n      this.dropTargetIds.push(id);\n      this.nodeLookup[id] = node;\n    } else {\n      this.accordionItems.forEach(item => {\n        if (item.typeName != type) {\n          return ;\n        }\n        item.defaultOptions.forEach((option: any) => {\n          if (option.checked) {\n            this.selectedItem(option);\n            option.checked = false;\n          }\n        });\n      });\n      if (this.searchResult[type]) {\n        this.selectedItem(this.searchResult[type]);\n        this.searchResult[type] = undefined;\n        this.searchGroups.controls[type].setValue('');\n      }\n    }\n  }\n\n  private selectedItem(item: any) {\n    let type = item.type || item.taxonomy;\n    let nodeId = 'node-' + type + '-' + item.id;\n    if (this.nodeLookup[nodeId] == undefined) {\n      let node: TreeNode = {\n        nodeId: nodeId,\n        title: item.title || item.name,\n        type: type,\n        objectId: item.id,\n        children: [],\n      };\n      this.nav.nodes.push(node);\n      this.dropTargetIds.push(nodeId);\n      this.nodeLookup[nodeId] = node;\n    }\n  }\n\n  remove(id: any) {\n    this.removeNode(id, this.nav.nodes);\n    delete this.dropTargetIds[this.dropTargetIds.indexOf(id)];\n    delete this.nodeLookup[id];\n  }\n\n  private removeNode(nodeId: string, nodes: TreeNode[]) {\n    nodes.forEach((node, number) => {\n      if (node.nodeId == nodeId) {\n        nodes.splice(number, 1);\n      } else if (node.children.length > 0) {\n        this.removeNode(nodeId, node.children);\n      }\n    });\n  }\n\n  create() {\n    this.nav = {\n      id: 0,\n      name: \"\",\n      nodes: [\n        this.defaultNode,\n      ],\n      themeNavigationLocation: {},\n    };\n    this.dropTargetIds = [];\n    this.nodeLookup = {};\n    this.prepareDragDrop(this.nav.nodes);\n  }\n\n  private getObjects(value: string, name: string, type: string): Observable<Record<string, any>[]> {\n    switch (type) {\n      case 'taxonomy':\n        return this.http.get<Records<TermTaxonomy>>(TAXONOMIES, {\n          params: {\n            \"taxonomy\": name,\n            \"name\": value,\n            page: 1,\n            size: 50\n          }\n        }).pipe(\n          map(response => {\n            return response.records;\n          })\n        );\n      case 'post':\n        return this.http.get<Records<Post>>(POSTS, {params: {\"type\": name, \"title\": value, page: 1, size: 50}}).pipe(\n          map(response => {\n            return response.records;\n          })\n        );\n      default:\n        return of([]);\n    }\n  }\n\n  navigationLocation(alias: any) {\n    console.log(alias);\n  }\n\n\n  displaySearch(option: any): string {\n    if (typeof option === 'string') {\n      return option;\n    }\n    return option.title || option.name;\n  }\n\n  selectSearchItem(typeName: string, $event: any) {\n    this.searchResult[typeName] = $event;\n  }\n\n  disabled(typeName: any): boolean {\n    let disabled = true;\n    this.accordionItems.forEach(item => {\n      item.defaultOptions.forEach((option: any) => {\n        if (option.checked) {\n          disabled = false;\n        }\n      });\n    });\n    if (this.searchResult[typeName]) {\n      disabled = false;\n    }\n    return disabled;\n  }\n}\n","<div [class.sidebar-compact]=\"leftSidebarCompact\" [class.sidebar-expanded]=\"!leftSidebarCompact\"\n     class=\"component-skeleton\">\n  <div class=\"component-skeleton-body\">\n    <nb-card class=\"mb-0 position-relative\">\n      <nb-card-header class=\"d-flex border-0 justify-content-between align-items-center\">\n        <button nbButton id=\"widgetSidebarBtn\" [status]=\"!hasHiddenWidgetSidebar?'control': 'primary'\" #widgetSidebarBtn\n                (click)=\"toggleWidgetSidebar($event)\">\n          <nb-icon [class.sidebar-widget-toggle-animation]=\"!hasHiddenWidgetSidebar\" icon=\"plus-outline\"></nb-icon>\n        </button>\n        <div class=\"d-flex justify-content-end\">\n          <button nbButton status=\"danger\" (click)=\"save($event)\">更新</button>\n          <div class=\"mx-2\"></div>\n          <button nbButton status=\"primary\" type=\"button\" id=\"settingSidebarBtn\" (click)=\"toggleSettingSidebar($event)\">\n            <nb-icon icon=\"settings-2\"></nb-icon>\n          </button>\n        </div>\n      </nb-card-header>\n    </nb-card>\n    <div class=\"d-flex flex-grow-1 overflow-auto\" style=\"overscroll-behavior-y: none;\">\n      <div class=\"col-4 p-0 position-relative\" [hidden]=\"hasHiddenWidgetSidebar\">\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"h-100\">\n            <div class=\"position-relative overflow-hidden h-100\">\n              <nb-card class=\"h-100 mb-0 border-0 rounded-0 position-relative\">\n                <nb-card-header>\n                  <nb-form-field>\n                    <input nbInput fullWidth (keyup)=\"search($event)\"/>\n                    <nb-icon nbSuffix icon=\"search-outline\"></nb-icon>\n                  </nb-form-field>\n                </nb-card-header>\n                <nb-card-body class=\"d-flex flex-column flex-grow-1\">\n                  <ng-container *ngFor=\"let category of filterWidgetCategories | async\">\n                    <div *ngIf=\"category.widgets && category.widgets.length > 0\" class=\"sidebar-category\">\n                      <label class=\"label col-form-label py-4\" *ngIf=\"category.slug\">{{category.label}}</label>\n                      <div class=\"d-flex flex-row flex-wrap\">\n                        <div class=\"sidebar-widget-item\" (click)=\"insertWidget(widget.name)\"\n                             *ngFor=\"let widget of category.widgets\">\n                          <nb-icon [pack]=\"widget.icon.startsWith('fa-') ? 'fa': ''\" [icon]=\"widget.icon\"></nb-icon>\n                          <span class=\"py-4\">{{widget.label}}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </ng-container>\n                </nb-card-body>\n              </nb-card>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex flex-column flex-grow-1 overflow-hidden mx-auto\">\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"block-list h-100 position-relative\">\n            <nb-card class=\"p-0 rounded-0 border-0 bg-transparent h-100\">\n              <nb-card-body>\n                <div class=\"row\">\n                  <div class=\"col-8 mx-auto\">\n                    <nb-accordion tabindex=\"0\" class=\"mt-5\" (focus)=\"selectorBlock($event, i)\"\n                                  *ngFor=\"let block of blocks; index as i;\">\n                      <nb-accordion-item>\n                        <nb-accordion-item-header tabindex=\"0\"\n                                                  (focus)=\"selectorBlock($event, i)\">\n                          {{block.label}}\n                        </nb-accordion-item-header>\n                        <nb-accordion-item-body>\n                          <widget-item #widgetItemComponent\n                                       tabindex=\"0\"\n                                       [product]=\"product\"\n                                       (focus)=\"selectorWidget($event)\"\n                                       (blur)=\"unselectWidget($event)\"\n                                       *ngFor=\"let product of getBlockWidgets(block.name)\">\n                          </widget-item>\n                          <button tabindex=\"0\" nbButton fullWidth status=\"control\"\n                                  (nbPopoverShowStateChange)=\"quickToggle($event, i)\"\n                                  [nbPopover]=\"quickInsertWidgetDialog\"\n                                  nbPopoverTrigger=\"click\">\n                            <nb-icon icon=\"plus-outline\"></nb-icon>\n                          </button>\n                        </nb-accordion-item-body>\n                      </nb-accordion-item>\n                    </nb-accordion>\n                  </div>\n                </div>\n              </nb-card-body>\n            </nb-card>\n          </div>\n        </div>\n      </div>\n      <div tabindex=\"0\" (blur)=\"unselectWidget($event)\" class=\"col-3 p-0 position-relative sidebar-setting\"\n           [hidden]=\"hasHiddenSettingSidebar\">\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"h-100\">\n            <div class=\"position-relative h-100\">\n              <nb-card class=\"h-100 mb-0 border-0 rounded-0\">\n                <nb-card-body class=\"p-0 h-100 overflow-hidden\">\n                  <nb-tabset class=\"h-100\">\n                    <nb-tab class=\"p-0 h-100\" *ngIf=\"blocks.length > 0\"\n                            [tabTitle]=\"blocks[selectBlockIndex].label || ''\">\n                      <nb-list class=\"p-0 sidebar-setting-widgets-list\">\n                        <nb-list-item *ngFor=\"let product of getBlockWidgets(blocks[selectBlockIndex].name)\">\n                          <nb-icon [pack]=\"product.widget.icon.startsWith('fa-') ? 'fa': ''\" [icon]=\"product.widget.icon\"></nb-icon>\n                          <span>{{product.widget.label}}</span>\n                        </nb-list-item>\n                      </nb-list>\n                    </nb-tab>\n                    <nb-tab class=\"p-0 h-100 overflow-hidden\" tabTitle=\"挂件\">\n                      <nb-card class=\"p-0 h-100 d-flex border-0 flex-column\">\n                        <nb-card-header class=\"d-flex\" *ngIf=\"selectedWidget\">\n                          <nb-icon [pack]=\"selectedWidget.product.widget.icon.startsWith('fa-') ? 'fa': ''\" [icon]=\"selectedWidget.product.widget.icon\"></nb-icon>\n                          <div class=\"d-flex flex-column ps-3\">\n                            <span>{{selectedWidget.product.widget.label}}</span>\n                            <label class=\"label\">{{selectedWidget.product.widget.description}}</label>\n                          </div>\n                        </nb-card-header>\n                        <nb-card-body class=\"d-flex p-0 flex-column h-100 flex-grow-1\">\n                          <nb-accordion multi *ngIf=\"selectedWidget\">\n                            <nb-accordion-item *ngFor=\"let section of selectedWidget.product.widget.sections\">\n                              <nb-accordion-item-header>{{section.label}}</nb-accordion-item-header>\n                              <nb-accordion-item-body>\n                                <control-container class=\"control-container\" tabindex=\"0\" [form]=\"selectedWidget.product.form\"\n                                                   [controls]=\"section.controls\"></control-container>\n                              </nb-accordion-item-body>\n                            </nb-accordion-item>\n                          </nb-accordion>\n                        </nb-card-body>\n                      </nb-card>\n                    </nb-tab>\n                  </nb-tabset>\n                </nb-card-body>\n              </nb-card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #quickInsertWidgetDialog>\n  <nb-card class=\"border-0 mb-0\" style=\"width: 22rem;\">\n    <nb-card-header class=\"border-0\">\n      <nb-form-field>\n        <input nbInput fullWidth (keyup)=\"search($event)\"/>\n        <nb-icon nbSuffix icon=\"search-outline\"></nb-icon>\n      </nb-form-field>\n    </nb-card-header>\n    <nb-card-body class=\"p-0\">\n      <div class=\"d-flex flex-row flex-wrap\">\n          <div *ngFor=\"let widget of historyWidgets; index as i;\" class=\"sidebar-widget-item\"\n               (click)=\"insertWidget(widget.name, true)\">\n              <nb-icon [icon]=\"widget.icon\"></nb-icon>\n              <span class=\"py-4\">{{widget.label}}</span>\n          </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer class=\"border-0\">\n      <button class=\"rounded-0\" status=\"primary\" outline fullWidth nbButton\n              (click)=\"widgetSidebarBtnRef.nativeElement.click()\">浏览全部\n      </button>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef, HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit, QueryList,\n  ViewChild, ViewChildren\n} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BLOCKS, SAVE_BLOCK_WIDGET, WIDGET_RENDERED, WIDGETS} from \"../../../@core/definition/decoration/api\";\nimport {\n  Block,\n  RegisteredResponse,\n  RenderedResponse,\n  Widget,\n  WidgetCategory\n} from \"../../../@core/definition/decoration/type\";\nimport {NbSidebarService} from \"@nebular/theme\";\nimport {combineLatest, Observable, of, Subscription, timer} from \"rxjs\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\nimport {FormGroup} from \"@angular/forms\";\nimport {buildFormGroup} from \"../../../shared/control/type\";\n\ntype ProductWidget = {\n  id: string;\n  widget: Widget,\n  form: FormGroup,\n}\n\n\n@Component({\n  selector: 'app-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss'],\n})\nexport class WidgetComponent implements OnInit, AfterViewInit {\n  private widgets: Widget[] = [];\n  private widgetCategories: WidgetCategory[] = [];\n  leftSidebarCompact: boolean = false;\n\n  @ViewChild('widgetSidebarBtn', {read: ElementRef<HTMLButtonElement>}) widgetSidebarBtnRef!: ElementRef<HTMLButtonElement>;\n  @ViewChildren('widgetItemComponent') widgetItems!: QueryList<WidgetItemComponent>;\n\n  blocks: Block[] = [];\n  hasHiddenWidgetSidebar = true;\n  hasHiddenSettingSidebar = true;\n\n\n  filterWidgetCategories: Observable<WidgetCategory[]> = of([]);\n\n  private blockWidgets: Record<string, ProductWidget[]> = {};\n\n  historyWidgets: Widget[] = [];\n\n  selectBlockIndex = -1;\n\n  selectedWidget: WidgetItemComponent | undefined;\n\n\n  constructor(protected http: HttpClient,\n              protected sidebar: NbSidebarService,\n              @Inject(DOCUMENT) protected  document: Document\n  ) { }\n\n  ngOnInit(): void {\n    this.sidebar.onToggle().subscribe((event:any) => {\n      this.leftSidebarCompact = event.compact\n    });\n    this.sidebar.onExpand().subscribe(event => {\n      if (event) {\n        this.leftSidebarCompact = false;\n      }\n    });\n    const widgetRequest = this.http.get<RegisteredResponse>(WIDGETS);\n    const blockRequest = this.http.get<Block[]>(BLOCKS);\n    combineLatest([widgetRequest, blockRequest]).subscribe(([widgetResponse, blocks]) => {\n      this.widgets = widgetResponse.widgets;\n      widgetResponse.categories.forEach(item => {\n        item.widgets = this.widgets.filter(widget => widget.category == item.slug);\n        item.widgets.forEach(w => {\n          if (!w.icon) {\n            w.icon = item.icon;\n          }\n        });\n      });\n      this.widgetCategories = widgetResponse.categories;\n      this.filterWidgetCategories = of(this.widgetCategories);\n      this.historyWidgets = this.widgets.slice(0, 6);\n\n\n      this.blocks = blocks;\n      if (blocks.length > 0) {\n        this.selectBlockIndex = 0;\n      }\n      blocks.forEach((block) => {\n        this.blockWidgets[block.name] = [];\n        if (block.widgets.length > 0) {\n          block.widgets.forEach(widgetData => {\n            const widget = this.widgets.find(item => {\n              if (item.name == widgetData.name) {\n                return item;\n              }\n              return undefined;\n            });\n            if (!widget) {\n              return ;\n            }\n            let controls = widget.sections.map(section => section.controls);\n            let product = {\n              id: widgetData.id,\n              widget: Object.assign({}, widget),\n              form: buildFormGroup(controls.flat(1)),\n            };\n            for (const key in widgetData.attributes) {\n              if (product.form.contains(key)) {\n                product.form.controls[key].setValue(widgetData.attributes[key], {emitEvent: false});\n              }\n            }\n            this.blockWidgets[block.name].push(product);\n          });\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    })\n  }\n\n  toggleWidgetSidebar($event: Event|null) {\n    this.hasHiddenWidgetSidebar = !this.hasHiddenWidgetSidebar;\n    if (!this.hasHiddenWidgetSidebar) {\n      this.rollbackFilterWidgetCategories();\n    }\n    if (!this.hasHiddenWidgetSidebar) {\n      this.hasHiddenSettingSidebar = true;\n    }\n  }\n\n  toggleSettingSidebar($event: Event|null) {\n    this.hasHiddenSettingSidebar = !this.hasHiddenSettingSidebar;\n    if (!this.hasHiddenSettingSidebar) {\n      this.hasHiddenWidgetSidebar = true;\n    }\n  }\n\n\n  search($event: Event|null) {\n    let value = $event ? ($event.target as HTMLInputElement).value : \"\";\n    if (value == '') {\n      this.filterWidgetCategories = of(this.widgetCategories);\n      return ;\n    }\n    let widgets = this.widgets.filter(widget => {\n      return widget.label.includes(value) || widget.keywords.flat().includes(value)\n    });\n    this.filterWidgetCategories = of([{ slug: \"\", label: \"\", icon: \"\", widgets: widgets, }]);\n  }\n\n  quickToggle($event: {isShown: boolean}, index: number) {\n    if ($event.isShown) {\n      this.selectBlockIndex = index;\n      if (!this.hasHiddenWidgetSidebar) {\n        this.toggleWidgetSidebar(null)\n      }\n    } else {\n      this.rollbackFilterWidgetCategories();\n    }\n  }\n\n\n\n  selectorBlock($event: Event, index: number) {\n    this.selectBlockIndex = index;\n  }\n\n  selectorWidget($event: Event) {\n    let id = ($event.target as HTMLElement).id\n    for (let item of this.widgetItems) {\n      if (id != item.Id) {\n        continue;\n      }\n      if (this.selectedWidget && this.selectedWidget.Id == id) {\n        continue;\n      }\n      this.selectedWidget = item;\n    }\n  }\n  unselectWidget($event: FocusEvent) {\n    console.log($event);\n    if ($event.relatedTarget) {\n      let id = ($event.relatedTarget as HTMLElement).id;\n      if (id == \"settingSidebarBtn\") {\n        return ;\n      }\n      let className = ($event.relatedTarget as HTMLElement).className;\n      console.log(className);\n      if (className.includes(\"sidebar-setting\") ||\n        className.includes(\"tab-link\") ||\n        className.includes(\"accordion\") ||\n        className.includes(\"control-container\")\n      ) {\n        return ;\n      }\n    }\n    this.selectedWidget = undefined;\n  }\n\n\n  insertWidget(name: string, isQuick: boolean = false) {\n    let widget = this.widgets.filter(item => item.name === name).pop();\n    if (this.selectBlockIndex > -1 && widget) {\n      let controls = widget.sections.map(section => section.controls);\n      this.blockWidgets[this.blocks[this.selectBlockIndex].name].push({\n        id: this.generateUUID(),\n        widget: Object.assign({}, widget),\n        form: buildFormGroup(controls.flat(1)),\n      });\n      if (!isQuick) {\n        this.historyWidgets.unshift(widget);\n        if (this.historyWidgets.length > 6) {\n          this.historyWidgets.pop();\n        }\n      }\n    }\n  }\n\n  getBlockWidgets(name: string) {\n    return this.blockWidgets[name] ?? [];\n  }\n\n  save($event: Event) {\n    const body = {\n      blocks: <Record<string, string[]>>{},\n      widgets: <Record<string, any>>{},\n    };\n    let i = 1;\n    for (let name in this.blockWidgets) {\n      body.blocks[name] = [];\n      this.blockWidgets[name].forEach(item => {\n        const widgetName = 'widget-' + item.widget.name + '-' + i;\n        body.blocks[name].push(widgetName);\n        body.widgets[widgetName] = {\n          id: item.id,\n          name: item.widget.name,\n          attributes: item.form.getRawValue(),\n        };\n        i++;\n      });\n    }\n    this.http.post(SAVE_BLOCK_WIDGET, body).subscribe({\n    });\n  }\n\n  private rollbackFilterWidgetCategories() {\n    this.filterWidgetCategories.subscribe(c => {\n      if (c.length != this.widgetCategories.length) {\n        this.filterWidgetCategories = of(this.widgetCategories);\n      }\n    });\n  }\n\n  private generateUUID() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n      d += performance.now(); // 添加性能测量器的当前时间\n    }\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d/16);\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n}\n\n\n@Component({\n  selector: 'widget-item',\n  template: `\n    <div #container class=\"widget-container widget-{{product.widget.name}}\">\n      <nb-icon *ngIf=\"isMedia()\"\n               style=\"width: 100px; height: 100px\" [pack]=\"product.widget.icon.startsWith('fa-') ? 'fa': ''\"\n               [icon]=\"product.widget.icon\">\n      </nb-icon>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        width: 100%;\n        margin: 1.25rem 0;\n      }\n    `\n  ]\n})\nexport class WidgetItemComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input('product') product!: ProductWidget\n  private subscribeChange: Subscription | undefined;\n\n  @HostBinding('attr.id') get Id() {\n    return this.product.id\n  }\n  @ViewChild('container', {read: ElementRef<HTMLDivElement>}) container!: ElementRef<HTMLDivElement>;\n\n  constructor(protected http: HttpClient, protected ds: DomSanitizer) {\n  }\n\n  ngOnInit(): void {\n    this.render(this.product.form.getRawValue());\n    this.subscribeChange = this.product.form.valueChanges.subscribe(values => {\n      this.render(values)\n    });\n  }\n\n  private render(data: Record<string, any>) {\n    data.name = this.product.widget.name;\n    this.http.post<RenderedResponse>(WIDGET_RENDERED, data).subscribe(response => {\n      if (response.output) {\n        this.container.nativeElement.innerHTML = response.output\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n  }\n  isMedia() {\n    return ['image', 'file', 'video', 'audio', 'cover', 'gallery'].includes(this.product.widget.name);\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.subscribeChange) {\n      this.subscribeChange.unsubscribe();\n    }\n    this.subscribeChange = undefined;\n  }\n}\n","\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <nb-card>\n      <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n        <span>主题列表</span>\n        <div class=\"d-flex\">\n          <button nbButton class=\"me-2\" status=\"danger\" (click)=\"dialog.open(dialogTpl)\">在线下载</button>\n          <app-upload (finish)=\"upload($event)\" [suffix]=\"['zip']\" [status]=\"'primary'\"></app-upload>\n        </div>\n      </nb-card-header>\n    </nb-card>\n  </div>\n  <div class=\"col-12 col-md-6 col-lg-4 col-xxl-3\" *ngFor=\"let theme of themes\">\n    <nb-card>\n      <nb-card-header class=\"d-flex justify-content-between\">\n        <div>{{theme.name}}</div>\n        <button *ngIf=\"theme.isUpgrade\" nbButton status=\"warning\" [disabled]=\"!theme.isUpgrade || spinner\" (click)=\"upgrade(theme.alias)\">升级</button>\n      </nb-card-header>\n      <nb-card-body>\n        <img alt=\"{{theme.name}}\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(theme.image)\"  *ngIf=\"theme.image\" width=\"100%\"/>\n        <div class=\"description\" *ngIf=\"!theme.image\">\n          {{theme.description}}\n        </div>\n      </nb-card-body>\n      <nb-card-footer class=\"d-flex justify-content-between\">\n        <button nbButton status=\"danger\" [disabled]=\"theme.enabled || spinner\" [nbSpinner]=\"spinner\" (click)=\"delete(theme.alias)\">删除</button>\n        <button nbButton [status]=\"theme.enabled ? 'warning' : 'primary'\"\n                (click)=\"activate(theme.alias)\"\n                [nbSpinner]=\"spinner\"\n                [disabled]=\"spinner\">\n          {{ theme.enabled ? '重装' : '启用' }}\n        </button>\n      </nb-card-footer>\n    </nb-card>\n  </div>\n</div>\n<ng-template #dialogTpl let-data let-ref=\"dialogRef\">\n  <nb-card>\n    <nb-card-header>在线下载</nb-card-header>\n    <nb-card-body>\n      <input nbInput name=\"url\" type=\"url\" #url placeholder=\"下载地址\" />\n    </nb-card-body>\n    <nb-card-footer class=\"d-flex justify-content-between\">\n      <button nbButton status=\"basic\" (click)=\"ref.close()\">取消</button>\n      <button nbButton status=\"primary\" (click)=\"openDownload(url.value, ref)\">下载</button>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OnSpinner, Records, ResponseBody} from \"../../../@core/definition/common\";\nimport {\n  THEME_ACTIVATE,\n  THEME_DELETE,\n  THEME_UPGRADE,\n  THEME_UPLOAD,\n  THEMES\n} from \"../../../@core/definition/decoration/api\";\nimport {Theme} from \"../../../@core/definition/decoration/type\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {DialogRef} from \"@angular/cdk/dialog\";\nimport {NbDialogService, NbSidebarService, NbToastrService} from \"@nebular/theme\";\nimport {timer} from \"rxjs\";\n\n@Component({\n  selector: 'app-theme',\n  templateUrl: './theme.component.html',\n})\nexport class ThemeComponent implements OnInit, OnSpinner, AfterViewInit {\n\n  themes: Theme[] = [];\n\n  title: string = \"\";\n\n  spinner: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private toast: NbToastrService,\n    private route: ActivatedRoute,\n    public sanitizer: DomSanitizer,\n    public dialog: NbDialogService,\n    private sidebar: NbSidebarService,\n  ) {\n\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n\n  ngOnInit(): void {\n    this.getThemes();\n    this.route.data.subscribe((data) => {\n      this.title = data['title'];\n    });\n  }\n\n  private getThemes() {\n    this.http.get<Records<Theme>>(THEMES).subscribe(res => {\n      if (res.records.length > 0) {\n        this.themes = res.records\n      }\n    });\n  }\n\n  activate(name: string) {\n    this.http.post<ResponseBody>(THEME_ACTIVATE, {name: name}).subscribe(res => {\n      this.getThemes();\n    });\n  }\n\n  upgrade(name: string) {\n    this.http.post<ResponseBody>(THEME_UPGRADE, {name: name}).subscribe(res => {\n      this.getThemes();\n    });\n  }\n\n  upload(files: string[]) {\n    if (files.length < 1) {\n      this.toast.danger('上传的主题文件为空', '上传主题');\n      return ;\n    }\n    this.http.post<ResponseBody>(THEME_UPLOAD, {uri: files.pop()}).subscribe(res => {\n      this.getThemes()\n    });\n  }\n\n\n  openDownload(url: string, ref: DialogRef) {\n    let isMatch = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/.test(url);\n    if (!isMatch) {\n      this.toast.danger('不合法的url链接', '上传主题');\n      return\n    }\n    this.http.post<ResponseBody>(THEME_UPLOAD, {uri: url}).subscribe(res => {\n      ref.close();\n    });\n  }\n\n\n\n  delete(name: string) {\n    this.http.post<ResponseBody>(THEME_DELETE, {name: name}).subscribe(res => {\n      this.getThemes()\n    });\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    });\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    你正在自义 {{theme.stylesheet}}\n    <div class=\"float-end\">\n      <button size=\"small\" status=\"success\" [disabled]=\"spinner || !isChanged\" (click)=\"save($event)\" nbButton>保存发布</button>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-tabset>\n      <nb-tab [tabId]=\"section.id\" [lazyLoad]=\"false\" [active]=\"i == 0\" *ngFor=\"let section of sections; let i = index\"\n              [tabTitle]=\"section.label\" [tabIndex]=\"i\">\n        <div class=\"col-6 mx-auto\">\n          <control-container [controls]=\"section.controls\" [form]=\"formGroup!\"></control-container>\n        </div>\n      </nb-tab>\n    </nb-tabset>\n  </nb-card-body>\n</nb-card>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {THEME_CUSTOMIZE, THEME_CUSTOMIZED} from \"../../../@core/definition/decoration/api\";\nimport {CustomizeResponse, Section} from \"../../../@core/definition/decoration/type\";\nimport {OnSpinner} from \"../../../@core/definition/common\";\nimport {SPINNER} from \"../../../@core/interceptor/authorization\";\nimport {buildFormGroup, Control} from \"../../../shared/control/type\";\nimport {FormGroup} from \"@angular/forms\";\nimport {timer} from \"rxjs\";\nimport {NbSidebarService} from \"@nebular/theme\";\n\n@Component({\n  selector: 'app-theme-custom',\n  templateUrl: './custom.component.html',\n  styles: []\n})\nexport class CustomComponent implements OnInit, OnSpinner{\n\n  sections: Section[] = [];\n  spinner: boolean = false;\n  formGroup: FormGroup | undefined;\n  theme: Record<string, any> = {};\n\n  private data: Record<string, any> = {};\n  private values: Record<string, any> = {};\n\n  isChanged: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private sidebar: NbSidebarService,\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    });\n  }\n\n  ngOnInit(): void {\n    this.http.get<CustomizeResponse>(THEME_CUSTOMIZE).subscribe(res => {\n      const elements: Control[] = [];\n      res.sections.forEach((item) => {\n        elements.push(...item.controls);\n      });\n      this.formGroup = buildFormGroup(elements);\n      for (let key in this.formGroup.controls) {\n        this.values[key] = this.formGroup.controls[key].value;\n      }\n      this.formGroup.valueChanges.subscribe(values => {\n        let isChanged = false;\n        for (let key in values) {\n          if (values[key] != this.values[key]) {\n            this.data[key] = values[key] || null;\n            isChanged = true;\n          } else if (this.data.hasOwnProperty(key)) {\n            delete this.data[key];\n          }\n        }\n        this.isChanged = isChanged;\n      });\n      this.sections = res.sections;\n      this.theme = res.theme;\n    });\n\n  }\n\n  save($event: MouseEvent) {\n    if (this.isChanged) {\n      this.http.post(THEME_CUSTOMIZED, {'customized': this.data}, {context: new HttpContext().set(SPINNER, this)}).subscribe(() => {\n        this.isChanged = false;\n        for (const dataKey in this.data) {\n          this.values[dataKey] = this.data[dataKey];\n        }\n      });\n    }\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NavigationComponent} from './navigation/navigation.component';\nimport {WidgetComponent, WidgetItemComponent} from './widget/widget.component';\nimport {ThemeComponent} from './theme/theme.component';\nimport {ThemeModule} from \"../../@theme/theme.module\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {UploadModule} from \"../../shared/upload/upload.module\";\nimport {CustomComponent} from \"./custom/custom.component\";\nimport {ControlModule} from \"../../shared/control/control.module\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\n\nconst routes: Routes = [\n  {\n    path: \"navigation\",\n    title: '导航',\n    component: NavigationComponent,\n  },\n  {\n    path: \"widget\",\n    title: '挂件',\n    component: WidgetComponent,\n  },\n  {\n    path: \"theme\",\n    title: '主题',\n    component: ThemeComponent,\n  },\n  {\n    path: \"custom\",\n    title: '自定义',\n    component: CustomComponent,\n  },\n];\n\n\n@NgModule({\n  declarations: [\n    NavigationComponent,\n    WidgetComponent,\n    ThemeComponent,\n    CustomComponent,\n    WidgetItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    ThemeModule,\n    RouterModule.forChild(routes),\n    DragDropModule,\n    UploadModule,\n    ControlModule,\n  ]\n})\nexport class DecorationModule {\n}\n"],"x_google_ignoreList":[]}