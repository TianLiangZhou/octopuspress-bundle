{"version":3,"file":"140.9c5732f8e9bcbcff.js","mappings":"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","names":["UploadService","constructor","http","upload","files","status","forEach","file","formData","FormData","append","name","req","HttpRequest","UPLOAD_FILE","responseType","reportProgress","progress","Subject","response","startTime","Date","getTime","this","request","subscribe","next","event","type","HttpEventType","percentDone","Math","round","loaded","total","HttpResponse","body","complete","error","asObservable","_angular_core__WEBPACK_IMPORTED_MODULE_3__","factory","THEME_UPLOAD","i0","NavigationComponent","route","document","config","sidebar","link","title","page","post","custom","category","nodeId","children","id","nodes","defaultNode","themeNavigationLocation","FormGroup","ngAfterViewInit","timer","val","toggle","onSpinner","spinner","submitted","ngOnInit","taxonomySettings","taxonomies","postTypeSettings","postTypes","accordionItems","key","visibility","showNavigation","push","label","typeName","defaultOptions","searchGroups","addControl","FormControl","accordionItem","searchGroupResult","controls","valueChanges","pipe","distinctUntilChanged","debounceTime","filter","value","switchMap","getObjects","get","res","dataSetKey","dataSet","item","themeNavigation","navigate","prepareDragDrop","nav","editor","params","navigation","length","alias","node","dropTargetIds","includes","nodeLookup","dragMoved","evt","of","e","elementFromPoint","pointerPosition","x","y","clearDragInfo","container","classList","contains","closest","dropActionTodo","targetId","_a","getAttribute","targetRect","getBoundingClientRect","oneThird","height","action","top","showDragInfo","drop","draggedItemId","data","parentItemId","previousContainer","targetListId","getParentNodeId","console","log","draggedItem","oldItemContainer","newContainer","i","findIndex","c","splice","targetIndex","isExpanded","nodesToSearch","parentId","ret","getElementById","add","dropped","undefined","querySelectorAll","element","remove","delete","window","confirm","_","create","save","context","HttpContext","set","SPINNER","saveLocation","location","addToNav","url","option","checked","selectedItem","searchResult","setValue","taxonomy","objectId","removeNode","indexOf","number","TAXONOMIES","size","map","records","POSTS","navigationLocation","displaySearch","selectSearchItem","$event","disabled","core","DOCUMENT","selectors","ctx","WidgetComponent","onToggle","leftSidebarCompact","compact","onExpand","widgetRequest","blockRequest","combineLatest","widgetResponse","blocks","widgets","categories","widget","slug","w","icon","widgetCategories","filterWidgetCategories","historyWidgets","slice","selectBlockIndex","block","blockWidgets","widgetData","find","sections","section","product","Object","assign","form","buildFormGroup","flat","attributes","emitEvent","toggleWidgetSidebar","hasHiddenWidgetSidebar","rollbackFilterWidgetCategories","hasHiddenSettingSidebar","toggleSettingSidebar","search","target","keywords","quickToggle","index","isShown","selectorBlock","selectorWidget","widgetItems","Id","selectedWidget","unselectWidget","relatedTarget","className","insertWidget","isQuick","pop","generateUUID","unshift","getBlockWidgets","widgetName","getRawValue","d","performance","now","replace","r","random","floor","toString","ElementRef","WidgetItemComponent","common","ds","render","subscribeChange","values","output","nativeElement","innerHTML","isMedia","ngOnDestroy","unsubscribe","ThemeComponent","toast","sanitizer","dialog","getThemes","themes","activate","upgrade","danger","uri","openDownload","ref","test","close","CustomComponent","elements","formGroup","isChanged","hasOwnProperty","theme","customized","dataKey","routes","path","component","DecorationModule","CommonModule","ThemeModule","RouterModule","DragDropModule","UploadModule","ControlModule","DialogComponent","dialogRef","uploadService","Set","onFilesAdded","errorMessage","isNaN","parseInt","nameArray","split","suffix","toLowerCase","join","addFiles","click","closeDialog","uploadSuccessful","finish","emit","results","uploading","messages","statusText","message","filename","allProgressObservables","primaryButtonText","canBeClosed","showCancelButton","forkJoin","end","decls","UploadComponent","EventEmitter","openUploadDialog","open","closeOnBackdropClick","closeOnEsc","componentRef","instance","multiple","imports","NbButtonModule","NbProgressBarModule","NbListModule","NbCardModule","NbIconModule"],"sourceRoot":"webpack:///","sources":["./dashboard/app/@core/services/upload.service.ts","./dashboard/app/@core/definition/decoration/api.ts","./dashboard/app/pages/decoration/navigation/navigation.component.html","./dashboard/app/pages/decoration/navigation/navigation.component.ts","./dashboard/app/pages/decoration/widget/widget.component.html","./dashboard/app/pages/decoration/widget/widget.component.ts","./dashboard/app/pages/decoration/theme/theme.component.html","./dashboard/app/pages/decoration/theme/theme.component.ts","./dashboard/app/pages/decoration/custom/custom.component.html","./dashboard/app/pages/decoration/custom/custom.component.ts","./dashboard/app/pages/decoration/decoration.module.ts","./dashboard/app/shared/upload/dialog/dialog.component.html","./dashboard/app/shared/upload/dialog/dialog.component.ts","./dashboard/app/shared/upload/upload.component.ts","./dashboard/app/shared/upload/upload.component.html","./dashboard/app/shared/upload/upload.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpRequest, HttpResponse, HttpEventType} from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport {UPLOAD_FILE} from \"../definition/open/api\";\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  // file from event.target.files[0]\n  upload(files: Set<File>): { [p: string]: { progress: Observable<number>, response: Observable<any> } } {\n\n    const status: { [key: string]: { progress: Observable<number>, response: Observable<any> } } = {};\n\n    files.forEach(file => {\n      // create a new multipart-form for every file\n      const formData: FormData = new FormData();\n      formData.append('file', file, file.name);\n\n      // create a http-post request and pass the form\n      // tell it to report the upload progress\n      const req = new HttpRequest('POST', UPLOAD_FILE, formData, {\n        responseType: 'json',\n        reportProgress: true\n      });\n\n      // create a new progress-subject for every file\n      const progress = new Subject<number>();\n      const response = new Subject<any>();\n\n      // send the http-request and subscribe for progress-updates\n\n      const startTime = new Date().getTime();\n      this.http.request(req).subscribe(\n      {\n          next(event) {\n            if (event.type === HttpEventType.UploadProgress) {\n              // calculate the progress percentage\n              const percentDone = Math.round((100 * event.loaded) / event.total!);\n              // pass the percentage into the progress-stream\n              progress.next(percentDone);\n            } else if (event instanceof HttpResponse) {\n              // Close the progress-stream if we get an answer form the API\n              // The upload is complete\n              response.next(event.body);\n              progress.complete();\n            }\n          },\n          error(error) {\n            response.next(error);\n            progress.complete();\n          }\n        }\n      );\n      // Save every progress-observable in a map of all observables\n      status[file.name] = {\n        response: response,\n        progress: progress.asObservable()\n      };\n    });\n\n    // return the map of progress.observables\n    return status;\n  }\n}\n","export const NAVIGATE_STRUCTURE: string = '/navigate/structure';\nexport const NAVIGATE: string = '/navigate/{id}';\nexport const NAVIGATE_DELETE: string =  \"/navigate/{id}/delete\"\nexport const NAVIGATE_SAVE: string =  \"/navigate/save\"\nexport const NAVIGATE_SAVE_LOCATION: string =  \"/navigate/save/location\"\n\n\nexport const THEMES: string = \"/theme\";\nexport const THEME_ACTIVATE: string = \"/theme/{name}/activate\";\nexport const THEME_UPGRADE: string = \"/theme/{name}/upgrade\";\nexport const THEME_DELETE: string = \"/theme/{name}/delete\";\nexport const THEME_UPLOAD: string = \"/theme/upload\";\n\n\nexport const THEME_CUSTOMIZE: string = \"/theme/customize\";\nexport const THEME_CUSTOMIZED: string = \"/theme/customized\";\n\n\nexport const WIDGETS: string = \"/widget/registered\";\nexport const BLOCKS: string = \"/widget/blocks\";\nexport const WIDGET_RENDERED: string = \"/widget/{name}/rendered\";\nexport const SAVE_BLOCK_WIDGET: string = \"/widget/saved\";\n\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <nb-card>\n      <nb-card-body>\n        <div class=\"d-flex align-items-center\">\n          <div *ngIf=\"navigate.length > 0\" class=\"d-flex align-items-center\">\n            <span>\n              选择要编辑的导航：\n            </span>\n            <nb-select [(ngModel)]=\"nav.id\">\n              <nb-option *ngFor=\"let m of navigate\" [value]=\"m.id\">{{m.name}}</nb-option>\n            </nb-select>\n            <button class=\"mx-2\" nbButton status=\"primary\" [disabled]=\"nav.id < 1\" (click)=\"editor()\">编辑</button>\n            <span>或</span>\n          </div>\n          <span><a href=\"javascript:\" (click)=\"create()\">创建新导航</a>&nbsp;&nbsp;<span>不要忘了保存您的修改!</span></span>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-5\">\n    <nb-card>\n      <nb-card-header>\n        添加导航项\n      </nb-card-header>\n      <nb-card-body>\n        <nb-accordion class=\"interface-complementary-area\" multi=\"true\">\n          <nb-accordion-item>\n            <nb-accordion-item-header>\n              自定义链接\n            </nb-accordion-item-header>\n            <nb-accordion-item-body>\n              <form #customForm=\"ngForm\">\n                <div class=\"mb-3 row\">\n                  <label for=\"custom_link\" class=\"label col-sm-3 col-form-label\">链接</label>\n                  <div class=\"col-sm-9\">\n                    <input id=\"custom_link\" required name=\"link\" [(ngModel)]=\"custom.link\" placeholder=\"https://\"  fullWidth status=\"primary\" nbInput>\n                  </div>\n                </div>\n                <div class=\"mb-3 row\">\n                  <label for=\"custom_link_name\" class=\"label col-sm-3 col-form-label\">链接名称</label>\n                  <div class=\"col-sm-9\">\n                    <input id=\"custom_link_name\" required name=\"link_name\" [(ngModel)]=\"custom.title\" fullWidth status=\"primary\" nbInput>\n                  </div>\n                </div>\n                <div class=\"mb-3 text-right\">\n                  <button nbButton status=\"primary\" [disabled]=\"!customForm.valid\" (click)=\"addToNav('custom')\">添加到导航</button>\n                </div>\n              </form>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n\n          <nb-accordion-item *ngFor=\"let item of accordionItems; index as i\">\n            <nb-accordion-item-header>\n              {{item.label}}\n            </nb-accordion-item-header>\n            <nb-accordion-item-body>\n              <form>\n                <div class=\"form-group\">\n                  <nb-tabset>\n                    <nb-tab class=\"px-0\" tabTitle=\"最近\">\n                      <div class=\"d-flex flex-column\">\n                        <nb-checkbox [(checked)]=\"p.checked\" *ngFor=\"let p of item.defaultOptions;\">\n                          {{item.type == 'post' ? p.title : p.name}}\n                        </nb-checkbox>\n                      </div>\n                    </nb-tab>\n                    <nb-tab class=\"px-0\" tabTitle=\"搜索\" [formGroup]=\"searchGroups\">\n                      <div>\n                        <label>\n                          <input [formControlName]=\"item.typeName\" nbInput status=\"primary\" [nbAutocomplete]=\"searchAuto\" fullWidth>\n                        </label>\n                        <nb-autocomplete #searchAuto [handleDisplayFn]=\"displaySearch\" (selectedChange)=\"selectSearchItem(item.typeName, $event)\">\n                          <nb-option *ngFor=\"let option of searchGroupResult[item.typeName] | async\" [value]=\"option\">\n                            {{ option.title||option.name }}\n                          </nb-option>\n                        </nb-autocomplete>\n                      </div>\n                    </nb-tab>\n                  </nb-tabset>\n                </div>\n                <div class=\"form-group text-right\">\n                  <button nbButton [disabled]=\"disabled(item.typeName)\" status=\"primary\" (click)=\"addToNav(item.typeName)\">添加到导航</button>\n                </div>\n              </form>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n        </nb-accordion>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-7\">\n    <form #navForm=\"ngForm\" (ngSubmit)=\"save()\">\n      <nb-card>\n      <nb-card-header>\n        导航结构\n      </nb-card-header>\n      <nb-card-body>\n          <div class=\"form-group row\">\n            <label for=\"nav_name\" class=\"label col-sm-2 col-form-label\">菜单名称</label>\n            <div class=\"col-sm-10\">\n              <input id=\"nav_name\"\n                     required=\"required\"\n                     name=\"navName\"\n                     [status]=\"navName.dirty ? (navName.invalid  ? 'danger' : 'success') : 'primary'\"\n                     [(ngModel)]=\"nav.name\"\n                     #navName=\"ngModel\"\n                     status=\"primary\"\n                     nbInput>\n              <ng-container *ngIf=\"navName.invalid && navName.touched\">\n                <p class=\"caption status-danger\" *ngIf=\"navName.errors?.required\">\n                  名称不能为空!\n                </p>\n              </ng-container>\n            </div>\n          </div>\n          <p class=\"pt-4 label\">拖放各个项目到您喜欢的顺序，点击右侧的箭头可进行更详细的设置。</p>\n          <div class=\"node_container\" cdkDropList [cdkDropListData]=\"nav.nodes\"\n               [id]=\"'main'\"\n               [cdkDropListConnectedTo]=\"dropTargetIds\"\n               (cdkDropListDropped)=\"drop($event)\"\n               [cdkDropListSortingDisabled]=\"true\">\n            <div *ngFor=\"let node of nav.nodes\" cdkDrag [cdkDragData]=\"node.nodeId\"\n                 (cdkDragMoved)=\"dragMoved($event)\">\n              <ng-container *ngTemplateOutlet=\"tmplNode,context:{node:node}\"></ng-container>\n            </div>\n          </div>\n      </nb-card-body>\n      <nb-card-footer>\n        <div style=\"font-size:15px;font-weight:bold;\" class=\"py-2\">菜单设置</div>\n        <div class=\"form-group row\">\n          <label for=\"nav_location\" class=\"label col-sm-2 col-form-label\">显示位置</label>\n          <div id=\"nav_location\" class=\"col-sm-10 d-flex flex-column\">\n            <nb-checkbox [(checked)]=\"nav.themeNavigationLocation![location.alias]\" *ngFor=\"let location of themeNavigation\">{{location.name}}</nb-checkbox>\n          </div>\n        </div>\n      </nb-card-footer>\n      <nb-card-footer>\n        <div class=\"d-flex justify-content-between\">\n          <button nbButton type=\"button\" status=\"danger\" [disabled]=\"nav.id < 1 || nav.name.length < 1\" (click)=\"delete()\">删除导航</button>\n          <button type=\"submit\" nbButton status=\"primary\" [disabled]=\"!navForm.valid || submitted\">保存导航</button>\n        </div>\n      </nb-card-footer>\n    </nb-card>\n    </form>\n\n\n    <form *ngIf=\"themeNavigation.length > 0\" (ngSubmit)=\"saveLocation()\">\n    <nb-card >\n      <nb-card-header>菜单位置</nb-card-header>\n      <nb-card-body>\n          <div class=\"row mb-3\">\n            <label class=\"label col-2 col-form-label\">主题菜单位置</label>\n            <label class=\"label col-10 col-form-label\">已指派的菜单</label>\n          </div>\n          <div class=\"row mb-3\" *ngFor=\"let location of themeNavigation; let i = index;\">\n            <label for=\"nav_location_{{i}}\" class=\"label col-2 col-form-label\">{{ location.name }}</label>\n            <div class=\"col-10\">\n              <nb-select name=\"nav_location_{{i}}\" [(ngModel)]=\"themeNavigationLocation[location.alias]\">\n                <nb-option *ngFor=\"let m of navigate\" [value]=\"m.id\">{{m.name}}</nb-option>\n              </nb-select>\n            </div>\n          </div>\n      </nb-card-body>\n      <nb-card-footer class=\"d-flex justify-content-end\">\n        <button nbButton status=\"primary\" type=\"submit\" [disabled]=\"submitted\">保存设置</button>\n      </nb-card-footer>\n    </nb-card>\n    </form>\n\n  </div>\n</div>\n\n<ng-template #tmplNode let-node=\"node\">\n  <div class=\"node-item\" [attr.data-id]=\"node.nodeId\" [attr.id]=\"'node-'+node.nodeId\">\n    <nb-accordion>\n      <nb-accordion-item>\n        <nb-accordion-item-header class=\"justify-content-between\">\n          <div>{{node.title}}</div>\n          <div class=\"mr-4\">{{typeMapName[node.type]}}</div>\n        </nb-accordion-item-header>\n        <nb-accordion-item-body>\n          <form ngForm>\n            <div class=\"mb-2\" *ngIf=\"node.type == 'link'\">\n              <label for=\"custom_link_id_{{node.nodeId}}\" class=\"label col-form-label\">URL</label>\n              <input id=\"custom_link_id_{{node.nodeId}}\" [name]=\"node.nodeId\" [(ngModel)]=\"node.url\"  nbInput fullWidth status=\"primary\" />\n            </div>\n            <div class=\"mb-2\">\n              <label for=\"custom_link_name_{{node.nodeId}}\" class=\"label col-form-label\">导航名称</label>\n              <input id=\"custom_link_name_{{node.nodeId}}\" [name]=\"node.nodeId\" [(ngModel)]=\"node.title\" nbInput fullWidth status=\"primary\" />\n            </div>\n            <div>\n              <button nbButton size=\"tiny\" status=\"danger\" (click)=\"remove(node.nodeId)\">移除</button>\n              &nbsp;|&nbsp;\n              <button nbButton size=\"tiny\" status=\"primary\">取消</button>\n            </div>\n          </form>\n        </nb-accordion-item-body>\n      </nb-accordion-item>\n    </nb-accordion>\n    <div *ngIf=\"node.children.length > 0\" class=\"node-children\"\n         cdkDropList [cdkDropListData]=\"node.children\"\n         [id]=\"node.nodeId\"\n         [cdkDropListConnectedTo]=\"dropTargetIds\"\n         (cdkDropListDropped)=\"drop($event)\"\n         [cdkDropListSortingDisabled]=\"true\">\n      <div *ngFor=\"let child of node.children\" cdkDrag [cdkDragData]=\"child.nodeId\"\n           (cdkDragMoved)=\"dragMoved($event)\">\n        <ng-container *ngTemplateOutlet=\"tmplNode,context:{node:child}\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import {AfterViewInit, Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {Observable, of, timer} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, filter, map, switchMap} from \"rxjs/operators\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {OnSpinner, Records, ResponseBody} from \"../../../@core/definition/common\";\nimport {POSTS, TAXONOMIES} from \"../../../@core/definition/content/api\";\nimport {\n  NAVIGATE,\n  NAVIGATE_DELETE,\n  NAVIGATE_SAVE,\n  NAVIGATE_SAVE_LOCATION,\n  NAVIGATE_STRUCTURE\n} from \"../../../@core/definition/decoration/api\";\nimport {Post, TermTaxonomy} from \"../../../@core/definition/content/type\";\nimport {SPINNER} from \"../../../@core/interceptor/authorization\";\nimport {ConfigurationService} from \"../../../@core/services/configuration.service\";\nimport {NbSidebarService} from \"@nebular/theme\";\n\ninterface TreeNode {\n  id?: number;\n  nodeId: string;\n  title: string;\n  objectId?: number;\n  url?: string\n  children: TreeNode[];\n  type: string,\n  isExpanded?: boolean;\n}\n\ntype CheckArticle = Post & { checked: boolean };\ntype CheckTermTaxonomy = TermTaxonomy & { checked: boolean };\n\ntype NavigateStructure = ResponseBody & {\n  dataSet: Record<string, CheckArticle[] | CheckTermTaxonomy[]>,\n  navigate: CheckTermTaxonomy[],\n  themeNavigation: { alias: string, name: string }[],\n  themeNavigationLocation: { [key: string]: number },\n}\n\ntype Navigation = {\n  id: number,\n  name: string,\n  nodes: TreeNode[],\n  themeNavigationLocation?: { [key: string]: boolean },\n};\n\ntype NavigationResponse = ResponseBody & {\n  navigation: Navigation\n};\n\ninterface DropInfo {\n  targetId: string;\n  action?: string;\n}\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NavigationComponent implements OnInit, OnSpinner, AfterViewInit {\n  private searchResult: Record<string, object|undefined> = {};\n  navigate: TermTaxonomy[] = [];\n  themeNavigation: { alias: string, name: string }[] = [];\n  themeNavigationLocation: { [key: string]: number } = {};\n\n  // ids for connected drop lists\n  dropTargetIds: string[] = [];\n  nodeLookup: { [key: string]: TreeNode } = {};\n  dropActionTodo: DropInfo | undefined;\n  submitted = false;\n\n  custom = {\n    link: \"\",\n    title: \"\",\n  }\n  typeMapName: any = {\n    'page': '页面',\n    'post': '文章',\n    'custom': '自定义链接',\n    'category': '分类',\n  };\n\n  private defaultNode: TreeNode = {\n    nodeId: 'demo',\n    title: '示例1',\n    type: 'custom',\n    children: []\n  };\n  nav: Navigation = {\n    id: 0,\n    name: \"\",\n    nodes: [\n      this.defaultNode\n    ],\n    themeNavigationLocation: {},\n  };\n  searchGroups = new FormGroup<any>({});\n  searchGroupResult: Record<string, Observable<Record<string, any>[]>> = {};\n  accordionItems: Record<string, any>[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    @Inject(DOCUMENT) private document: Document,\n    private config: ConfigurationService,\n    protected sidebar: NbSidebarService,\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    });\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.submitted = spinner;\n  }\n\n  ngOnInit(): void {\n    let taxonomySettings = this.config.taxonomies();\n    let postTypeSettings = this.config.postTypes();\n    let accordionItems = [];\n    for (let key in postTypeSettings) {\n      if (!postTypeSettings[key].visibility.showNavigation) {\n        continue;\n      }\n      accordionItems.push({\n        label: postTypeSettings[key].label,\n        type: 'post',\n        name: key,\n        typeName: 'post_' + key,\n        defaultOptions: [],\n      });\n      this.searchGroups.addControl('post_' + key, new FormControl<string>(''));\n    }\n    for (let key in taxonomySettings) {\n      if (!taxonomySettings[key].visibility.showNavigation) {\n        continue;\n      }\n      accordionItems.push({\n        label: taxonomySettings[key].label,\n        type: 'taxonomy',\n        name: key,\n        typeName: 'taxonomy_' + key,\n        defaultOptions: [],\n      });\n      this.searchGroups.addControl('taxonomy_' + key, new FormControl<string>(''));\n    }\n    for (let accordionItem of accordionItems) {\n      let control = this.searchGroups.controls[accordionItem.typeName];\n      this.searchGroupResult[accordionItem.typeName] = control.valueChanges.pipe(\n        distinctUntilChanged(),\n        debounceTime(500),\n        filter((value) => !!value),\n        switchMap(value => this.getObjects(value, accordionItem.name, accordionItem.type))\n      )\n    }\n    this.accordionItems = accordionItems;\n    this.http.get<NavigateStructure>(NAVIGATE_STRUCTURE).subscribe(res => {\n      for (let dataSetKey in res.dataSet) {\n        this.accordionItems.forEach(item => {\n          if (item.typeName === dataSetKey) {\n            item.defaultOptions = res.dataSet[dataSetKey];\n          }\n        });\n      }\n      this.themeNavigation = res.themeNavigation;\n      this.themeNavigationLocation = res.themeNavigationLocation;\n      this.navigate = res.navigate;\n    });\n    this.prepareDragDrop(this.nav.nodes);\n  }\n\n  editor() {\n    this.http.get<NavigationResponse>(NAVIGATE, {params: {id: this.nav.id}}).subscribe(res => {\n      this.nav = res.navigation;\n      if (this.nav.nodes.length < 1) {\n        this.nav.nodes.push(this.defaultNode);\n      }\n      this.nav.themeNavigationLocation = {};\n      this.themeNavigation.forEach(item => {\n        this.nav.themeNavigationLocation![item.alias] = this.themeNavigationLocation[item.alias] == this.nav.id;\n      });\n      this.prepareDragDrop(this.nav.nodes);\n    });\n  }\n\n  prepareDragDrop(nodes: TreeNode[]) {\n    nodes.forEach(node => {\n      if (!this.dropTargetIds.includes(node.nodeId)) {\n        this.dropTargetIds.push(node.nodeId);\n      }\n      this.nodeLookup[node.nodeId] = node;\n      this.prepareDragDrop(node.children);\n    });\n  }\n\n\n  // @debounce(50)\n  dragMoved(evt: any) {\n    of(evt).pipe(\n      debounceTime(50)\n    ).subscribe(event => {\n      let e = this.document.elementFromPoint(event.pointerPosition.x, event.pointerPosition.y);\n      if (!e) {\n        this.clearDragInfo();\n        return;\n      }\n      let container = e.classList.contains(\"node-item\") ? e : e.closest(\".node-item\");\n      if (!container) {\n        this.clearDragInfo();\n        return;\n      }\n      this.dropActionTodo = {\n        targetId: container.getAttribute(\"data-id\") ?? \"\"\n      };\n      const targetRect = container.getBoundingClientRect();\n      const oneThird = targetRect.height / 3;\n\n      if (event.pointerPosition.y - targetRect.top < oneThird) {\n        // before\n        this.dropActionTodo[\"action\"] = \"before\";\n      } else if (event.pointerPosition.y - targetRect.top > 2 * oneThird) {\n        // after\n        this.dropActionTodo[\"action\"] = \"after\";\n      } else {\n        // inside\n        this.dropActionTodo[\"action\"] = \"inside\";\n      }\n      this.showDragInfo();\n    });\n  }\n\n\n  drop(event: any) {\n    if (!this.dropActionTodo) return;\n    const draggedItemId = event.item.data;\n    const parentItemId = event.previousContainer.id;\n    const targetListId = this.getParentNodeId(this.dropActionTodo.targetId, this.nav.nodes, 'main');\n    console.log(\n      '\\nmoving\\n[' + draggedItemId + '] from list [' + parentItemId + ']',\n      '\\n[' + this.dropActionTodo.action + ']\\n[' + this.dropActionTodo.targetId + '] from list [' + targetListId + ']');\n\n    const draggedItem = this.nodeLookup[draggedItemId];\n\n    const oldItemContainer = parentItemId != 'main' ? this.nodeLookup[parentItemId].children : this.nav.nodes;\n    const newContainer = targetListId != 'main' ? this.nodeLookup[targetListId].children : this.nav.nodes;\n\n    let i = oldItemContainer.findIndex((c: TreeNode) => c.nodeId === draggedItemId);\n    oldItemContainer.splice(i, 1);\n\n    switch (this.dropActionTodo.action) {\n      case 'before':\n      case 'after':\n        const targetIndex = newContainer.findIndex((c: TreeNode) => c.nodeId === this.dropActionTodo?.targetId);\n        if (this.dropActionTodo.action == 'before') {\n          newContainer.splice(targetIndex, 0, draggedItem);\n        } else {\n          newContainer.splice(targetIndex + 1, 0, draggedItem);\n        }\n        break;\n\n      case 'inside':\n        this.nodeLookup[this.dropActionTodo.targetId].children.push(draggedItem)\n        this.nodeLookup[this.dropActionTodo.targetId].isExpanded = true;\n        break;\n    }\n\n    this.clearDragInfo(true)\n  }\n\n  getParentNodeId(id: string, nodesToSearch: TreeNode[], parentId: string): string {\n    for (let node of nodesToSearch) {\n      if (node.nodeId == id) return parentId;\n      let ret = this.getParentNodeId(id, node.children, node.nodeId);\n      if (ret) return ret;\n    }\n    return \"\";\n  }\n\n  showDragInfo() {\n    this.clearDragInfo();\n    if (this.dropActionTodo) {\n      document.getElementById(\"node-\" + this.dropActionTodo.targetId)?.classList.add(\"drop-\" + this.dropActionTodo.action);\n    }\n  }\n\n  clearDragInfo(dropped = false) {\n    if (dropped) {\n      this.dropActionTodo = undefined;\n    }\n    this.document\n      .querySelectorAll(\".drop-before\")\n      .forEach(element => element.classList.remove(\"drop-before\"));\n    this.document\n      .querySelectorAll(\".drop-after\")\n      .forEach(element => element.classList.remove(\"drop-after\"));\n    this.document\n      .querySelectorAll(\".drop-inside\")\n      .forEach(element => element.classList.remove(\"drop-inside\"));\n  }\n\n  delete() {\n    if (window.confirm(\"确认删除菜单 [\" + this.nav.name + \"]吗？\")) {\n      this.http.post(NAVIGATE_DELETE, this.nav)\n        .subscribe(_ => {\n          this.create();\n        });\n    }\n  }\n\n  save() {\n    this.http.post(NAVIGATE_SAVE, this.nav, {context: new HttpContext().set(SPINNER, this)}).subscribe(res => {\n    });\n  }\n\n  saveLocation() {\n    this.http.post(NAVIGATE_SAVE_LOCATION, {location: this.themeNavigationLocation}, {context: new HttpContext().set(SPINNER, this)}).subscribe(res => {\n    });\n  }\n\n  addToNav(type: string) {\n    if (type === 'custom') {\n      let id = \"custom-\" + this.custom.title;\n      let node = {\n        nodeId: id,\n        title: this.custom.title,\n        type: type,\n        url: this.custom.link,\n        children: [],\n      }\n      this.custom.title = \"\";\n      this.custom.link = \"\";\n      this.nav.nodes.push(node);\n      this.dropTargetIds.push(id);\n      this.nodeLookup[id] = node;\n    } else {\n      this.accordionItems.forEach(item => {\n        if (item.typeName != type) {\n          return ;\n        }\n        item.defaultOptions.forEach((option: any) => {\n          if (option.checked) {\n            this.selectedItem(option);\n            option.checked = false;\n          }\n        });\n      });\n      if (this.searchResult[type]) {\n        this.selectedItem(this.searchResult[type]);\n        this.searchResult[type] = undefined;\n        this.searchGroups.controls[type].setValue('');\n      }\n    }\n  }\n\n  private selectedItem(item: any) {\n    let type = item.type || item.taxonomy;\n    let nodeId = 'node-' + type + '-' + item.id;\n    if (this.nodeLookup[nodeId] == undefined) {\n      let node: TreeNode = {\n        nodeId: nodeId,\n        title: item.title || item.name,\n        type: type,\n        objectId: item.id,\n        children: [],\n      };\n      this.nav.nodes.push(node);\n      this.dropTargetIds.push(nodeId);\n      this.nodeLookup[nodeId] = node;\n    }\n  }\n\n  remove(id: any) {\n    this.removeNode(id, this.nav.nodes);\n    delete this.dropTargetIds[this.dropTargetIds.indexOf(id)];\n    delete this.nodeLookup[id];\n  }\n\n  private removeNode(nodeId: string, nodes: TreeNode[]) {\n    nodes.forEach((node, number) => {\n      if (node.nodeId == nodeId) {\n        nodes.splice(number, 1);\n      } else if (node.children.length > 0) {\n        this.removeNode(nodeId, node.children);\n      }\n    });\n  }\n\n  create() {\n    this.nav = {\n      id: 0,\n      name: \"\",\n      nodes: [\n        this.defaultNode,\n      ],\n      themeNavigationLocation: {},\n    };\n    this.dropTargetIds = [];\n    this.nodeLookup = {};\n    this.prepareDragDrop(this.nav.nodes);\n  }\n\n  private getObjects(value: string, name: string, type: string): Observable<Record<string, any>[]> {\n    switch (type) {\n      case 'taxonomy':\n        return this.http.get<Records<TermTaxonomy>>(TAXONOMIES, {\n          params: {\n            \"taxonomy\": name,\n            \"name\": value,\n            page: 1,\n            size: 50\n          }\n        }).pipe(\n          map(response => {\n            return response.records;\n          })\n        );\n      case 'post':\n        return this.http.get<Records<Post>>(POSTS, {params: {\"type\": name, \"title\": value, page: 1, size: 50}}).pipe(\n          map(response => {\n            return response.records;\n          })\n        );\n      default:\n        return of([]);\n    }\n  }\n\n  navigationLocation(alias: any) {\n    console.log(alias);\n  }\n\n\n  displaySearch(option: any): string {\n    if (typeof option === 'string') {\n      return option;\n    }\n    return option.title || option.name;\n  }\n\n  selectSearchItem(typeName: string, $event: any) {\n    this.searchResult[typeName] = $event;\n  }\n\n  disabled(typeName: any): boolean {\n    let disabled = true;\n    this.accordionItems.forEach(item => {\n      item.defaultOptions.forEach((option: any) => {\n        if (option.checked) {\n          disabled = false;\n        }\n      });\n    });\n    if (this.searchResult[typeName]) {\n      disabled = false;\n    }\n    return disabled;\n  }\n}\n","<div [class.sidebar-compact]=\"leftSidebarCompact\" [class.sidebar-expanded]=\"!leftSidebarCompact\"\n     class=\"component-skeleton\">\n  <div class=\"component-skeleton-body\">\n    <nb-card class=\"mb-0 position-relative\">\n      <nb-card-header class=\"d-flex border-0 justify-content-between align-items-center\">\n        <button nbButton id=\"widgetSidebarBtn\" [status]=\"!hasHiddenWidgetSidebar?'control': 'primary'\" #widgetSidebarBtn\n                (click)=\"toggleWidgetSidebar($event)\">\n          <nb-icon [class.sidebar-widget-toggle-animation]=\"!hasHiddenWidgetSidebar\" icon=\"plus-outline\"></nb-icon>\n        </button>\n        <div class=\"d-flex justify-content-end\">\n          <button nbButton status=\"danger\" (click)=\"save($event)\">更新</button>\n          <div class=\"mx-2\"></div>\n          <button nbButton status=\"primary\" type=\"button\" id=\"settingSidebarBtn\" (click)=\"toggleSettingSidebar($event)\">\n            <nb-icon icon=\"settings-2\"></nb-icon>\n          </button>\n        </div>\n      </nb-card-header>\n    </nb-card>\n    <div class=\"d-flex flex-grow-1 overflow-auto\" style=\"overscroll-behavior-y: none;\">\n      <div class=\"col-4 p-0 position-relative\" [hidden]=\"hasHiddenWidgetSidebar\">\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"h-100\">\n            <div class=\"position-relative overflow-hidden h-100\">\n              <nb-card class=\"h-100 mb-0 border-0 rounded-0 position-relative\">\n                <nb-card-header>\n                  <nb-form-field>\n                    <input nbInput fullWidth (keyup)=\"search($event)\"/>\n                    <nb-icon nbSuffix icon=\"search-outline\"></nb-icon>\n                  </nb-form-field>\n                </nb-card-header>\n                <nb-card-body class=\"d-flex flex-column flex-grow-1\">\n                  <ng-container *ngFor=\"let category of filterWidgetCategories | async\">\n                    <div *ngIf=\"category.widgets && category.widgets.length > 0\" class=\"sidebar-category\">\n                      <label class=\"label col-form-label py-4\" *ngIf=\"category.slug\">{{category.label}}</label>\n                      <div class=\"d-flex flex-row flex-wrap\">\n                        <div class=\"sidebar-widget-item\" (click)=\"insertWidget(widget.name)\"\n                             *ngFor=\"let widget of category.widgets\">\n                          <nb-icon [pack]=\"widget.icon.startsWith('fa-') ? 'fa': ''\" [icon]=\"widget.icon\"></nb-icon>\n                          <span class=\"py-4\">{{widget.label}}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </ng-container>\n                </nb-card-body>\n              </nb-card>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex flex-column flex-grow-1 overflow-hidden mx-auto\">\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"block-list h-100 position-relative\">\n            <nb-card class=\"p-0 rounded-0 border-0 bg-transparent h-100\">\n              <nb-card-body>\n                <div class=\"row\">\n                  <div class=\"col-8 mx-auto\">\n                    <nb-accordion tabindex=\"0\" class=\"mt-5\" (focus)=\"selectorBlock($event, i)\"\n                                  *ngFor=\"let block of blocks; index as i;\">\n                      <nb-accordion-item>\n                        <nb-accordion-item-header tabindex=\"0\"\n                                                  (focus)=\"selectorBlock($event, i)\">\n                          {{block.label}}\n                        </nb-accordion-item-header>\n                        <nb-accordion-item-body>\n                          <widget-item #widgetItemComponent\n                                       tabindex=\"0\"\n                                       [product]=\"product\"\n                                       (focus)=\"selectorWidget($event)\"\n                                       (blur)=\"unselectWidget($event)\"\n                                       *ngFor=\"let product of getBlockWidgets(block.name)\">\n                          </widget-item>\n                          <button tabindex=\"0\" nbButton fullWidth status=\"control\"\n                                  (nbPopoverShowStateChange)=\"quickToggle($event, i)\"\n                                  [nbPopover]=\"quickInsertWidgetDialog\"\n                                  nbPopoverTrigger=\"click\">\n                            <nb-icon icon=\"plus-outline\"></nb-icon>\n                          </button>\n                        </nb-accordion-item-body>\n                      </nb-accordion-item>\n                    </nb-accordion>\n                  </div>\n                </div>\n              </nb-card-body>\n            </nb-card>\n          </div>\n        </div>\n      </div>\n      <div tabindex=\"0\" (blur)=\"unselectWidget($event)\" class=\"col-3 p-0 position-relative sidebar-setting\"\n           [hidden]=\"hasHiddenSettingSidebar\">\n        <div class=\"d-flex flex-column h-100\">\n          <div class=\"h-100\">\n            <div class=\"position-relative h-100\">\n              <nb-card class=\"h-100 mb-0 border-0 rounded-0\">\n                <nb-card-body class=\"p-0 h-100 overflow-hidden\">\n                  <nb-tabset class=\"h-100\">\n                    <nb-tab class=\"p-0 h-100\" *ngIf=\"blocks.length > 0\"\n                            [tabTitle]=\"blocks[selectBlockIndex].label || ''\">\n                      <nb-list class=\"p-0 sidebar-setting-widgets-list\">\n                        <nb-list-item *ngFor=\"let product of getBlockWidgets(blocks[selectBlockIndex].name)\">\n                          <nb-icon [pack]=\"product.widget.icon.startsWith('fa-') ? 'fa': ''\" [icon]=\"product.widget.icon\"></nb-icon>\n                          <span>{{product.widget.label}}</span>\n                        </nb-list-item>\n                      </nb-list>\n                    </nb-tab>\n                    <nb-tab class=\"p-0 h-100 overflow-hidden\" tabTitle=\"挂件\">\n                      <nb-card class=\"p-0 h-100 d-flex border-0 flex-column\">\n                        <nb-card-header class=\"d-flex\" *ngIf=\"selectedWidget\">\n                          <nb-icon [pack]=\"selectedWidget.product.widget.icon.startsWith('fa-') ? 'fa': ''\" [icon]=\"selectedWidget.product.widget.icon\"></nb-icon>\n                          <div class=\"d-flex flex-column ps-3\">\n                            <span>{{selectedWidget.product.widget.label}}</span>\n                            <label class=\"label\">{{selectedWidget.product.widget.description}}</label>\n                          </div>\n                        </nb-card-header>\n                        <nb-card-body class=\"d-flex p-0 flex-column h-100 flex-grow-1\">\n                          <nb-accordion multi *ngIf=\"selectedWidget\">\n                            <nb-accordion-item *ngFor=\"let section of selectedWidget.product.widget.sections\">\n                              <nb-accordion-item-header>{{section.label}}</nb-accordion-item-header>\n                              <nb-accordion-item-body>\n                                <control-container class=\"control-container\" tabindex=\"0\" [form]=\"selectedWidget.product.form\"\n                                                   [controls]=\"section.controls\"></control-container>\n                              </nb-accordion-item-body>\n                            </nb-accordion-item>\n                          </nb-accordion>\n                        </nb-card-body>\n                      </nb-card>\n                    </nb-tab>\n                  </nb-tabset>\n                </nb-card-body>\n              </nb-card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #quickInsertWidgetDialog>\n  <nb-card class=\"border-0 mb-0\" style=\"width: 22rem;\">\n    <nb-card-header class=\"border-0\">\n      <nb-form-field>\n        <input nbInput fullWidth (keyup)=\"search($event)\"/>\n        <nb-icon nbSuffix icon=\"search-outline\"></nb-icon>\n      </nb-form-field>\n    </nb-card-header>\n    <nb-card-body class=\"p-0\">\n      <div class=\"d-flex flex-row flex-wrap\">\n          <div *ngFor=\"let widget of historyWidgets; index as i;\" class=\"sidebar-widget-item\"\n               (click)=\"insertWidget(widget.name, true)\">\n              <nb-icon [icon]=\"widget.icon\"></nb-icon>\n              <span class=\"py-4\">{{widget.label}}</span>\n          </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer class=\"border-0\">\n      <button class=\"rounded-0\" status=\"primary\" outline fullWidth nbButton\n              (click)=\"widgetSidebarBtnRef.nativeElement.click()\">浏览全部\n      </button>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef, HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit, QueryList,\n  ViewChild, ViewChildren\n} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BLOCKS, SAVE_BLOCK_WIDGET, WIDGET_RENDERED, WIDGETS} from \"../../../@core/definition/decoration/api\";\nimport {\n  Block,\n  RegisteredResponse,\n  RenderedResponse,\n  Widget,\n  WidgetCategory\n} from \"../../../@core/definition/decoration/type\";\nimport {NbSidebarService} from \"@nebular/theme\";\nimport {combineLatest, Observable, of, Subscription, timer} from \"rxjs\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\nimport {FormGroup} from \"@angular/forms\";\nimport {buildFormGroup} from \"../../../shared/control/type\";\n\ntype ProductWidget = {\n  id: string;\n  widget: Widget,\n  form: FormGroup,\n}\n\n\n@Component({\n  selector: 'app-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss'],\n})\nexport class WidgetComponent implements OnInit, AfterViewInit {\n  private widgets: Widget[] = [];\n  private widgetCategories: WidgetCategory[] = [];\n  leftSidebarCompact: boolean = false;\n\n  @ViewChild('widgetSidebarBtn', {read: ElementRef<HTMLButtonElement>}) widgetSidebarBtnRef!: ElementRef<HTMLButtonElement>;\n  @ViewChildren('widgetItemComponent') widgetItems!: QueryList<WidgetItemComponent>;\n\n  blocks: Block[] = [];\n  hasHiddenWidgetSidebar = true;\n  hasHiddenSettingSidebar = true;\n\n\n  filterWidgetCategories: Observable<WidgetCategory[]> = of([]);\n\n  private blockWidgets: Record<string, ProductWidget[]> = {};\n\n  historyWidgets: Widget[] = [];\n\n  selectBlockIndex = -1;\n\n  selectedWidget: WidgetItemComponent | undefined;\n\n\n  constructor(protected http: HttpClient,\n              protected sidebar: NbSidebarService,\n              @Inject(DOCUMENT) protected  document: Document\n  ) { }\n\n  ngOnInit(): void {\n    this.sidebar.onToggle().subscribe((event:any) => {\n      this.leftSidebarCompact = event.compact\n    });\n    this.sidebar.onExpand().subscribe(event => {\n      if (event) {\n        this.leftSidebarCompact = false;\n      }\n    });\n    const widgetRequest = this.http.get<RegisteredResponse>(WIDGETS);\n    const blockRequest = this.http.get<Block[]>(BLOCKS);\n    combineLatest([widgetRequest, blockRequest]).subscribe(([widgetResponse, blocks]) => {\n      this.widgets = widgetResponse.widgets;\n      widgetResponse.categories.forEach(item => {\n        item.widgets = this.widgets.filter(widget => widget.category == item.slug);\n        item.widgets.forEach(w => {\n          if (!w.icon) {\n            w.icon = item.icon;\n          }\n        });\n      });\n      this.widgetCategories = widgetResponse.categories;\n      this.filterWidgetCategories = of(this.widgetCategories);\n      this.historyWidgets = this.widgets.slice(0, 6);\n\n\n      this.blocks = blocks;\n      if (blocks.length > 0) {\n        this.selectBlockIndex = 0;\n      }\n      blocks.forEach((block) => {\n        this.blockWidgets[block.name] = [];\n        if (block.widgets.length > 0) {\n          block.widgets.forEach(widgetData => {\n            const widget = this.widgets.find(item => {\n              if (item.name == widgetData.name) {\n                return item;\n              }\n              return undefined;\n            });\n            if (!widget) {\n              return ;\n            }\n            let controls = widget.sections.map(section => section.controls);\n            let product = {\n              id: widgetData.id,\n              widget: Object.assign({}, widget),\n              form: buildFormGroup(controls.flat(1)),\n            };\n            for (const key in widgetData.attributes) {\n              if (product.form.contains(key)) {\n                product.form.controls[key].setValue(widgetData.attributes[key], {emitEvent: false});\n              }\n            }\n            this.blockWidgets[block.name].push(product);\n          });\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    })\n  }\n\n  toggleWidgetSidebar($event: Event|null) {\n    this.hasHiddenWidgetSidebar = !this.hasHiddenWidgetSidebar;\n    if (!this.hasHiddenWidgetSidebar) {\n      this.rollbackFilterWidgetCategories();\n    }\n    if (!this.hasHiddenWidgetSidebar) {\n      this.hasHiddenSettingSidebar = true;\n    }\n  }\n\n  toggleSettingSidebar($event: Event|null) {\n    this.hasHiddenSettingSidebar = !this.hasHiddenSettingSidebar;\n    if (!this.hasHiddenSettingSidebar) {\n      this.hasHiddenWidgetSidebar = true;\n    }\n  }\n\n\n  search($event: Event|null) {\n    let value = $event ? ($event.target as HTMLInputElement).value : \"\";\n    if (value == '') {\n      this.filterWidgetCategories = of(this.widgetCategories);\n      return ;\n    }\n    let widgets = this.widgets.filter(widget => {\n      return widget.label.includes(value) || widget.keywords.flat().includes(value)\n    });\n    this.filterWidgetCategories = of([{ slug: \"\", label: \"\", icon: \"\", widgets: widgets, }]);\n  }\n\n  quickToggle($event: {isShown: boolean}, index: number) {\n    if ($event.isShown) {\n      this.selectBlockIndex = index;\n      if (!this.hasHiddenWidgetSidebar) {\n        this.toggleWidgetSidebar(null)\n      }\n    } else {\n      this.rollbackFilterWidgetCategories();\n    }\n  }\n\n\n\n  selectorBlock($event: Event, index: number) {\n    this.selectBlockIndex = index;\n  }\n\n  selectorWidget($event: Event) {\n    let id = ($event.target as HTMLElement).id\n    for (let item of this.widgetItems) {\n      if (id != item.Id) {\n        continue;\n      }\n      if (this.selectedWidget && this.selectedWidget.Id == id) {\n        continue;\n      }\n      this.selectedWidget = item;\n    }\n  }\n  unselectWidget($event: FocusEvent) {\n    console.log($event);\n    if ($event.relatedTarget) {\n      let id = ($event.relatedTarget as HTMLElement).id;\n      if (id == \"settingSidebarBtn\") {\n        return ;\n      }\n      let className = ($event.relatedTarget as HTMLElement).className;\n      console.log(className);\n      if (className.includes(\"sidebar-setting\") ||\n        className.includes(\"tab-link\") ||\n        className.includes(\"accordion\") ||\n        className.includes(\"control-container\")\n      ) {\n        return ;\n      }\n    }\n    this.selectedWidget = undefined;\n  }\n\n\n  insertWidget(name: string, isQuick: boolean = false) {\n    let widget = this.widgets.filter(item => item.name === name).pop();\n    if (this.selectBlockIndex > -1 && widget) {\n      let controls = widget.sections.map(section => section.controls);\n      this.blockWidgets[this.blocks[this.selectBlockIndex].name].push({\n        id: this.generateUUID(),\n        widget: Object.assign({}, widget),\n        form: buildFormGroup(controls.flat(1)),\n      });\n      if (!isQuick) {\n        this.historyWidgets.unshift(widget);\n        if (this.historyWidgets.length > 6) {\n          this.historyWidgets.pop();\n        }\n      }\n    }\n  }\n\n  getBlockWidgets(name: string) {\n    return this.blockWidgets[name] ?? [];\n  }\n\n  save($event: Event) {\n    const body = {\n      blocks: <Record<string, string[]>>{},\n      widgets: <Record<string, any>>{},\n    };\n    let i = 1;\n    for (let name in this.blockWidgets) {\n      body.blocks[name] = [];\n      this.blockWidgets[name].forEach(item => {\n        const widgetName = 'widget-' + item.widget.name + '-' + i;\n        body.blocks[name].push(widgetName);\n        body.widgets[widgetName] = {\n          id: item.id,\n          name: item.widget.name,\n          attributes: item.form.getRawValue(),\n        };\n        i++;\n      });\n    }\n    this.http.post(SAVE_BLOCK_WIDGET, body).subscribe({\n    });\n  }\n\n  private rollbackFilterWidgetCategories() {\n    this.filterWidgetCategories.subscribe(c => {\n      if (c.length != this.widgetCategories.length) {\n        this.filterWidgetCategories = of(this.widgetCategories);\n      }\n    });\n  }\n\n  private generateUUID() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n      d += performance.now(); // 添加性能测量器的当前时间\n    }\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d/16);\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n}\n\n\n@Component({\n  selector: 'widget-item',\n  template: `\n    <div #container class=\"widget-container widget-{{product.widget.name}}\">\n      <nb-icon *ngIf=\"isMedia()\"\n               style=\"width: 100px; height: 100px\" [pack]=\"product.widget.icon.startsWith('fa-') ? 'fa': ''\"\n               [icon]=\"product.widget.icon\">\n      </nb-icon>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        width: 100%;\n        margin: 1.25rem 0;\n      }\n    `\n  ]\n})\nexport class WidgetItemComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input('product') product!: ProductWidget\n  private subscribeChange: Subscription | undefined;\n\n  @HostBinding('attr.id') get Id() {\n    return this.product.id\n  }\n  @ViewChild('container', {read: ElementRef<HTMLDivElement>}) container!: ElementRef<HTMLDivElement>;\n\n  constructor(protected http: HttpClient, protected ds: DomSanitizer) {\n  }\n\n  ngOnInit(): void {\n    this.render(this.product.form.getRawValue());\n    this.subscribeChange = this.product.form.valueChanges.subscribe(values => {\n      this.render(values)\n    });\n  }\n\n  private render(data: Record<string, any>) {\n    data.name = this.product.widget.name;\n    this.http.post<RenderedResponse>(WIDGET_RENDERED, data).subscribe(response => {\n      if (response.output) {\n        this.container.nativeElement.innerHTML = response.output\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n  }\n  isMedia() {\n    return ['image', 'file', 'video', 'audio', 'cover', 'gallery'].includes(this.product.widget.name);\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.subscribeChange) {\n      this.subscribeChange.unsubscribe();\n    }\n    this.subscribeChange = undefined;\n  }\n}\n","\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <nb-card>\n      <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n        <span>主题列表</span>\n        <div class=\"d-flex\">\n          <button nbButton class=\"me-2\" status=\"danger\" (click)=\"dialog.open(dialogTpl)\">在线下载</button>\n          <app-upload (finish)=\"upload($event)\" [suffix]=\"['zip']\" [status]=\"'primary'\"></app-upload>\n        </div>\n      </nb-card-header>\n    </nb-card>\n  </div>\n  <div class=\"col-12 col-md-6 col-lg-4 col-xxl-3\" *ngFor=\"let theme of themes\">\n    <nb-card>\n      <nb-card-header class=\"d-flex justify-content-between\">\n        <div>{{theme.name}}</div>\n        <button *ngIf=\"theme.isUpgrade\" nbButton status=\"warning\" [disabled]=\"!theme.isUpgrade || spinner\" (click)=\"upgrade(theme.alias)\">升级</button>\n      </nb-card-header>\n      <nb-card-body>\n        <img alt=\"{{theme.name}}\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(theme.image)\"  *ngIf=\"theme.image\" width=\"100%\"/>\n        <div class=\"description\" *ngIf=\"!theme.image\">\n          {{theme.description}}\n        </div>\n      </nb-card-body>\n      <nb-card-footer class=\"d-flex justify-content-between\">\n        <button nbButton status=\"danger\" [disabled]=\"theme.enabled || spinner\" [nbSpinner]=\"spinner\" (click)=\"delete(theme.alias)\">删除</button>\n        <button nbButton [status]=\"theme.enabled ? 'warning' : 'primary'\"\n                (click)=\"activate(theme.alias)\"\n                [nbSpinner]=\"spinner\"\n                [disabled]=\"spinner\">\n          {{ theme.enabled ? '重装' : '启用' }}\n        </button>\n      </nb-card-footer>\n    </nb-card>\n  </div>\n</div>\n<ng-template #dialogTpl let-data let-ref=\"dialogRef\">\n  <nb-card>\n    <nb-card-header>在线下载</nb-card-header>\n    <nb-card-body>\n      <input nbInput name=\"url\" type=\"url\" #url placeholder=\"下载地址\" />\n    </nb-card-body>\n    <nb-card-footer class=\"d-flex justify-content-between\">\n      <button nbButton status=\"basic\" (click)=\"ref.close()\">取消</button>\n      <button nbButton status=\"primary\" (click)=\"openDownload(url.value, ref)\">下载</button>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OnSpinner, Records, ResponseBody} from \"../../../@core/definition/common\";\nimport {\n  THEME_ACTIVATE,\n  THEME_DELETE,\n  THEME_UPGRADE,\n  THEME_UPLOAD,\n  THEMES\n} from \"../../../@core/definition/decoration/api\";\nimport {Theme} from \"../../../@core/definition/decoration/type\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {DialogRef} from \"@angular/cdk/dialog\";\nimport {NbDialogService, NbSidebarService, NbToastrService} from \"@nebular/theme\";\nimport {timer} from \"rxjs\";\n\n@Component({\n  selector: 'app-theme',\n  templateUrl: './theme.component.html',\n})\nexport class ThemeComponent implements OnInit, OnSpinner, AfterViewInit {\n\n  themes: Theme[] = [];\n\n  title: string = \"\";\n\n  spinner: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private toast: NbToastrService,\n    private route: ActivatedRoute,\n    public sanitizer: DomSanitizer,\n    public dialog: NbDialogService,\n    private sidebar: NbSidebarService,\n  ) {\n\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n\n  ngOnInit(): void {\n    this.getThemes();\n    this.route.data.subscribe((data) => {\n      this.title = data['title'];\n    });\n  }\n\n  private getThemes() {\n    this.http.get<Records<Theme>>(THEMES).subscribe(res => {\n      if (res.records.length > 0) {\n        this.themes = res.records\n      }\n    });\n  }\n\n  activate(name: string) {\n    this.http.post<ResponseBody>(THEME_ACTIVATE, {name: name}).subscribe(res => {\n      this.getThemes();\n    });\n  }\n\n  upgrade(name: string) {\n    this.http.post<ResponseBody>(THEME_UPGRADE, {name: name}).subscribe(res => {\n      this.getThemes();\n    });\n  }\n\n  upload(files: string[]) {\n    if (files.length < 1) {\n      this.toast.danger('上传的主题文件为空', '上传主题');\n      return ;\n    }\n    this.http.post<ResponseBody>(THEME_UPLOAD, {uri: files.pop()}).subscribe(res => {\n      this.getThemes()\n    });\n  }\n\n\n  openDownload(url: string, ref: DialogRef) {\n    let isMatch = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/.test(url);\n    if (!isMatch) {\n      this.toast.danger('不合法的url链接', '上传主题');\n      return\n    }\n    this.http.post<ResponseBody>(THEME_UPLOAD, {uri: url}).subscribe(res => {\n      ref.close();\n    });\n  }\n\n\n\n  delete(name: string) {\n    this.http.post<ResponseBody>(THEME_DELETE, {name: name}).subscribe(res => {\n      this.getThemes()\n    });\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    });\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    你正在自义 {{theme.stylesheet}}\n    <div class=\"float-end\">\n      <button size=\"small\" status=\"success\" [disabled]=\"spinner || !isChanged\" (click)=\"save($event)\" nbButton>保存发布</button>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-tabset>\n      <nb-tab [tabId]=\"section.id\" [lazyLoad]=\"false\" [active]=\"i == 0\" *ngFor=\"let section of sections; let i = index\"\n              [tabTitle]=\"section.label\" [tabIndex]=\"i\">\n        <div class=\"col-6 mx-auto\">\n          <control-container [controls]=\"section.controls\" [form]=\"formGroup!\"></control-container>\n        </div>\n      </nb-tab>\n    </nb-tabset>\n  </nb-card-body>\n</nb-card>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpContext} from \"@angular/common/http\";\nimport {THEME_CUSTOMIZE, THEME_CUSTOMIZED} from \"../../../@core/definition/decoration/api\";\nimport {CustomizeResponse, Section} from \"../../../@core/definition/decoration/type\";\nimport {OnSpinner} from \"../../../@core/definition/common\";\nimport {SPINNER} from \"../../../@core/interceptor/authorization\";\nimport {buildFormGroup, Control} from \"../../../shared/control/type\";\nimport {FormGroup} from \"@angular/forms\";\nimport {timer} from \"rxjs\";\nimport {NbSidebarService} from \"@nebular/theme\";\n\n@Component({\n  selector: 'app-theme-custom',\n  templateUrl: './custom.component.html',\n  styles: []\n})\nexport class CustomComponent implements OnInit, OnSpinner{\n\n  sections: Section[] = [];\n  spinner: boolean = false;\n  formGroup: FormGroup | undefined;\n  theme: Record<string, any> = {};\n\n  private data: Record<string, any> = {};\n  private values: Record<string, any> = {};\n\n  isChanged: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private sidebar: NbSidebarService,\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    timer(300).subscribe(val => {\n      this.sidebar.toggle(true, 'menu-sidebar');\n    });\n  }\n\n  ngOnInit(): void {\n    this.http.get<CustomizeResponse>(THEME_CUSTOMIZE).subscribe(res => {\n      const elements: Control[] = [];\n      res.sections.forEach((item) => {\n        elements.push(...item.controls);\n      });\n      this.formGroup = buildFormGroup(elements);\n      for (let key in this.formGroup.controls) {\n        this.values[key] = this.formGroup.controls[key].value;\n      }\n      this.formGroup.valueChanges.subscribe(values => {\n        let isChanged = false;\n        for (let key in values) {\n          if (values[key] != this.values[key]) {\n            this.data[key] = values[key] || null;\n            isChanged = true;\n          } else if (this.data.hasOwnProperty(key)) {\n            delete this.data[key];\n          }\n        }\n        this.isChanged = isChanged;\n      });\n      this.sections = res.sections;\n      this.theme = res.theme;\n    });\n\n  }\n\n  save($event: MouseEvent) {\n    if (this.isChanged) {\n      this.http.post(THEME_CUSTOMIZED, {'customized': this.data}, {context: new HttpContext().set(SPINNER, this)}).subscribe(() => {\n        this.isChanged = false;\n        for (const dataKey in this.data) {\n          this.values[dataKey] = this.data[dataKey];\n        }\n      });\n    }\n  }\n\n  onSpinner(spinner: boolean): void {\n    this.spinner = spinner;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NavigationComponent} from './navigation/navigation.component';\nimport {WidgetComponent, WidgetItemComponent} from './widget/widget.component';\nimport {ThemeComponent} from './theme/theme.component';\nimport {ThemeModule} from \"../../@theme/theme.module\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {UploadModule} from \"../../shared/upload/upload.module\";\nimport {CustomComponent} from \"./custom/custom.component\";\nimport {ControlModule} from \"../../shared/control/control.module\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\n\nconst routes: Routes = [\n  {\n    path: \"navigation\",\n    title: '导航',\n    component: NavigationComponent,\n  },\n  {\n    path: \"widget\",\n    title: '挂件',\n    component: WidgetComponent,\n  },\n  {\n    path: \"theme\",\n    title: '主题',\n    component: ThemeComponent,\n  },\n  {\n    path: \"custom\",\n    title: '自定义',\n    component: CustomComponent,\n  },\n];\n\n\n@NgModule({\n  declarations: [\n    NavigationComponent,\n    WidgetComponent,\n    ThemeComponent,\n    CustomComponent,\n    WidgetItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    ThemeModule,\n    RouterModule.forChild(routes),\n    DragDropModule,\n    UploadModule,\n    ControlModule,\n  ]\n})\nexport class DecorationModule {\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <input type=\"file\" #file style=\"display: none\"  (change)=\"onFilesAdded()\" [multiple]=\"multiple\"/>\n    <nb-card class=\"list-card\">\n      <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n        <span>上传文件</span>\n        <button [disabled]=\"uploading || uploadSuccessful\" nbButton status=\"primary\" (click)=\"addFiles()\">添加文件</button>\n      </nb-card-header>\n      <nb-card-body>\n        <nb-list>\n          <nb-list-item *ngFor=\"let file of files;\">\n            <div class=\"row flex-grow-1 flex-nowrap\">\n              <div class=\"col-1\">\n                <nb-icon status=\"primary\" icon=\"file\"></nb-icon>\n              </div>\n              <div class=\"col-5\">\n                {{file.name}}\n              </div>\n              <div class=\"col-5\">\n                <nb-progress-bar\n                  *ngIf=\"progress\"\n                  [status]=\"messages[file.name] ? 'danger' : 'success'\"\n                  [displayValue]=\"!messages[file.name]\"\n                  [value]=\"progress[file.name].progress | async\">\n                  {{messages[file.name]}}\n                </nb-progress-bar>\n              </div>\n              <div class=\"col-1\" *ngIf=\"!uploading && !uploadSuccessful\">\n                <nb-icon style=\"cursor: pointer\" (click)=\"remove(file)\" icon=\"close\" status=\"danger\"></nb-icon>\n              </div>\n            </div>\n          </nb-list-item>\n        </nb-list>\n      </nb-card-body>\n      <nb-card-footer class=\"actions\">\n        <div class=\"row\">\n          <div class=\"col-12 text-danger py-2\" *ngIf=\"errorMessage.length > 0\">\n            {{ errorMessage }}\n          </div>\n          <div class=\"col-12 d-flex justify-content-between\">\n            <button *ngIf=\"showCancelButton\" nbButton status=\"control\" (click)=\"dialogRef.close();\" class=\"mr-2\">取消</button>\n            <button nbButton status=\"primary\" [disabled]=\"!canBeClosed || files.size < 1\" (click)=\"closeDialog()\">{{primaryButtonText}}</button>\n          </div>\n        </div>\n      </nb-card-footer>\n    </nb-card>\n  </div>\n</div>\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {UploadService} from '../../../@core/services/upload.service';\nimport {NbDialogRef} from '@nebular/theme';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  providers: [\n    UploadService,\n  ],\n  styles: [\n    `\n    nb-card {\n      min-width: 290px;\n    }\n    .list-card {\n      nb-card-header {\n        border-bottom: none;\n      }\n      nb-card-footer {\n        border-top: none;\n      }\n      nb-card-body {\n        padding: 0;\n      }\n    }\n    `\n  ]\n})\nexport class DialogComponent implements OnInit {\n\n  constructor(public dialogRef: NbDialogRef<DialogComponent>,\n              private uploadService: UploadService) {\n\n  }\n  @ViewChild('file', { static: false }) file: ElementRef | undefined;\n\n  public files: Set<File> = new Set();\n\n  @Input() multiple: boolean = false;\n  @Input() suffix: string[] = [];\n\n  @Output() finish: EventEmitter<string[]> | undefined;\n\n  progress!: {[key: string]: { progress: Observable<any>, response: Observable<any> }};\n  canBeClosed = true;\n  primaryButtonText = '上传';\n  showCancelButton = true;\n  uploading = false;\n  uploadSuccessful = false;\n  messages: {[key: string]: string} = {};\n  errorMessage = '';\n\n  results: any[] = [];\n\n  ngOnInit() {}\n\n  onFilesAdded() {\n    const files: { [key: string]: File } = this.file?.nativeElement.files;\n    let errorMessage = '';\n    for (const key in files) {\n      if (isNaN(parseInt(key, 10))) {\n        continue;\n      }\n      let file = files[key];\n      console.log(file)\n      let nameArray = file.name.split('.');\n      let suffix = nameArray[nameArray.length - 1];\n      if (this.suffix.length > 0 && !this.suffix.includes(suffix.toLowerCase())) {\n        errorMessage = '此文件类型不支持，只支持: ' + this.suffix.join(',') + '文件格式';\n        continue;\n      }\n      this.files.add(file);\n    }\n    this.errorMessage = errorMessage;\n  }\n\n  addFiles() {\n    this.file?.nativeElement.click();\n  }\n\n  closeDialog() {\n    // if everything was uploaded already, just close the dialog\n    if (this.uploadSuccessful) {\n      this.finish?.emit(this.results);\n      return this.dialogRef.close();\n    }\n    if (this.files.size < 1) {\n      this.errorMessage = '选择需要上传的文件!';\n      return ;\n    }\n\n    // set the component state to \"uploading\"\n    this.uploading = true;\n\n    // start the upload and save the progress map\n    this.progress = this.uploadService.upload(this.files);\n    for (const key in this.progress) {\n      this.progress[key].progress.subscribe((res: any)=> console.log(res));\n      this.progress[key].response.subscribe((res: any) => {\n        if (res.hasOwnProperty('statusText')) {\n          this.messages[key] = res.statusText;\n        } else if (res.hasOwnProperty('status') && res.status != 'ok') {\n          this.messages[key] = res.message;\n        } else {\n          this.results.push(res.filename);\n        }\n      });\n    }\n\n    // convert the progress map into an array\n    const allProgressObservables = [];\n    for (const key in this.progress) {\n      allProgressObservables.push(this.progress[key].progress);\n    }\n\n    // Adjust the state variables\n\n    // The OK-button should have the text \"Finish\" now\n    this.primaryButtonText = '完成';\n\n    // The dialog should not be closed while uploading\n    this.canBeClosed = false;\n    // this.dialogRef.disableClose = true;\n\n    // Hide the cancel-button\n    this.showCancelButton = false;\n\n    // When all progress-observables are completed...\n    forkJoin(allProgressObservables).subscribe(end => {\n      // ... the dialog can be closed again...\n      this.canBeClosed = true;\n      // this.dialogRef.disableClose = false;\n\n      // ... the upload was successful...\n      this.uploadSuccessful = true;\n\n      // ... and the component is no longer uploading\n      this.uploading = false;\n    });\n  }\n\n  remove(file: File) {\n    this.files.delete(file);\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport {DialogComponent} from './dialog/dialog.component';\nimport {NbDialogService} from '@nebular/theme';\nimport {NbComponentStatus} from \"@nebular/theme/components/component-status\";\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styles: [\n    `:host {display: block}`\n  ]\n})\nexport class UploadComponent {\n\n  @Input() multiple = false;\n  @Input() text = '上传';\n  @Input() status: NbComponentStatus = 'primary';\n  @Input() suffix: string[] = [];\n\n  @Output() finish: EventEmitter<string[]> = new EventEmitter();\n\n  constructor(private dialog: NbDialogService) { }\n\n  openUploadDialog() {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      closeOnBackdropClick: false,\n      closeOnEsc: false,\n    });\n    dialogRef.componentRef.instance.multiple = this.multiple;\n    dialogRef.componentRef.instance.finish = this.finish;\n    dialogRef.componentRef.instance.suffix = this.suffix;\n  }\n}\n","<button (click)=\"openUploadDialog()\" type=\"button\" nbButton [status]=\"status\">{{ text }}</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {UploadComponent} from './upload.component';\nimport {DialogComponent} from './dialog/dialog.component';\nimport {NbButtonModule, NbCardModule, NbIconModule, NbListModule, NbProgressBarModule} from '@nebular/theme';\nimport {UploadService} from '../../@core/services/upload.service';\n\n\n\n@NgModule({\n  declarations: [UploadComponent, DialogComponent],\n  exports: [\n    UploadComponent\n  ],\n  imports: [\n    CommonModule,\n    NbButtonModule,\n    NbProgressBarModule,\n    NbListModule,\n    NbCardModule,\n    NbIconModule\n  ],\n  providers: [\n    UploadService\n  ]\n})\nexport class UploadModule { }\n"],"x_google_ignoreList":[]}