{"version":3,"file":"90.0f7e0495df436fd4.js","mappings":"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","names":["i0","ControlContainerComponent","constructor","resourceLoader","this","QueryList","Subject","ReplaySubject","ngOnInit","$controlSubject","subscribe","controls","undefined","form","buildFormGroup","resources","forEach","control","Array","isArray","length","id","depends","onDepend","Object","keys","$resourceSubject","next","waitResources","nameMap","resource","file","substring","lastIndexOf","index","filename","push","name","src","load","map","item","then","results","result","loaded","type","fun","window","controlComponent","controlComponents","find","depend","element","init","e","console","log","ngOnChanges","changes","currentValue","previousValue","hidden","dependMode","split","value","valueChanges","options","onlySelf","emitEvent","emitModelToViewChange","emitViewToModelChange","setValue","_angular_core__WEBPACK_IMPORTED_MODULE_0__","selectors","ControlComponent","ckfinder","dom","locale","ngAfterViewInit","inputType","placeholder","format","formControl","getControl","disabled","disable","statusChanges","res","invalid","dirty","onChoose","files","includes","attachments","source","url","attachment","multiple","writeValue","removeMedia","openMedia","popup","resourceType","multi","cropped","settings","charAt","toUpperCase","slice","status","error","_a","errors","nbDatepickerParse","required","label","min","_c","_b","validators","t","key","max","_e","_d","pattern","registerOnChange","fn","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","LOCALE_ID","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","_r6","ctx_r5","$event","_r9","ctx_r8","_r12","ctx_r11","_r15","ctx_r14","_r17","ctx_r16","ctx_r18","_r23","ctx_r22","_r25","ctx_r24","_r27","ctx_r26","ctx_r28","ctx_r29","ctx_r30","_r33","ctx_r32","ctx_r34","ctx_r35","ctx_r4","ColorFormats","HEX","RGBA","HSLA","CMYK","defaultColors","color","preview","variants","formats","Rgba","r","g","b","a","denormalize","Math","round","toString","toPrecision","Hsva","h","s","v","EventEmitter","onColorChange","rgX","rgY","onHueChange","onValueChange","onAlphaChange","Hsla","l","Cmyk","c","m","y","k","NgxColor","params","ConverterService","toFormat","hsva","output","rgba","hsvaToRgba","rgbaToHex","hsla","hsva2hsla","rgbaToCmyk","stringToFormat","stringToHsva","abs","hsla2hsva","i","floor","f","p","q","cmykToRgb","cmyk","rgbaToHsva","d","allowHex8","hex","substr","normalizeCMYK","denormalizeCMYK","denormalizeRGBA","colorString","toLowerCase","stringParsers","re","parse","execResult","parseInt","isNaN","parseFloat","hasOwnProperty","parser","match","exec","outputFormat","getFormatByString","regexRGBA","regexHSLA","test","ɵfac","ɵprov","factory","SliderPosition","SliderDimension","SliderDirective","mouseDown","event","start","touchStart","elRef","dragEnd","dragStart","newValue","listenerMove","move","listenerStop","stop","preventDefault","setCursor","stopPropagation","document","addEventListener","emit","removeEventListener","getX","position","nativeElement","getBoundingClientRect","pageX","touches","left","pageXOffset","getY","pageY","top","pageYOffset","width","offsetWidth","height","offsetHeight","x","ɵdir","ctx","ColorPickerComponent","service","cdr","sliderChange","selectedColor","fallbackColor","slider","update","ngOnDestroy","sliderDimMax","hueSlider","alphaSlider","onSliderChange","setColor","outputColor","getBackgroundColor","background","hue","hueSliderColor","alphaSliderColor","detectChanges","ɵcmp","_c0","_c1","_t","decls","i2","styles","PanelComponent","click","isOutside","emitClose","onScroll","onScreenMovement","onResize","previewColor","colorsAnimationEffect","palette","colorFormats","canChangeFormat","menu","hideColorPicker","hideTextInput","colorPickerControls","setPosition","indexSeleccionado","findIndexSelectedColor","setPositionY","panelRef","style","transition","colors","resultIndex","iniciate","triggerInstance","triggerElementRef","animation","acceptLabel","cancelLabel","TriggerBBox","indexOf","positionString","viewportOffset","panelWidth","innerWidth","right","triggerBBox","panelBBox","bottom","innerHeight","hasVariant","some","isSelected","ChangeAlphaOnPalette","alpha","newColor","newColorPreview","changeColor","onChangeColorPicker","temporalColor","changeColorManual","setPreviewColor","onColorClick","addColor","backupColor","nextFormat","close","onClickBack","target","classList","contains","_c2","trigger","query","opacity","optional","stagger","animate","keyframes","transform","offset","OVERLAY_STYLES","PanelFactoryService","resolver","applicationRef","injector","createPanel","attachTo","overlayClassName","componentRef","removePanel","resolveComponentFactory","create","attachView","hostView","domElem","rootNodes","overlay","createElement","add","attr","getElementById","appendChild","body","detachView","destroy","remove","NgxColorsTriggerDirective","onClick","open","triggerRef","panelFactory","colorsAnimation","change","input","onTouchedCallback","onChangeCallback","instance","NgxColorsComponent","cdRef","triggerDirective","triggerDirectiveColorChangeSubscription","markForCheck","unsubscribe","NgxColorsModule","ɵmod","ɵinj","imports","CommonModule","GroupControlComponent","dialog","children","head","child","addAttachmentUrl","data","values","dialogRef","GroupControlDialogComponent","dialogClass","closeOnEsc","closeOnBackdropClick","initialize","editIndex","onClose","changeValue","edit","defaultValue","delete","splice","assign","drop","moveItemInArray","previousIndex","currentIndex","getMedia","attach","getAttachmentUrl","core","title","formGroup","cancel","save","valid","ControlModule","ThemeModule","CKEditorModule","NbListModule","NbToggleModule","DragDropModule","valueMap","group","Validators","validator","FormControl","FormGroup","extendStyles","dest","importantProperties","setProperty","has","removeProperty","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","combineTransforms","initialTransform","parseCssTimeUnitsToMs","multiplier","parseCssPropertyValue","computedStyle","getPropertyValue","part","trim","getMutableClientRect","clientRect","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","scrollTop","scrollLeft","handleScroll","_getEventTarget","cachedPosition","get","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","context","getContext","drawImage","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","activeEventListenerOptions","dragImportantProperties","Set","DragRef","_disabled","_dropContainer","coerceBooleanProperty","_toggleNativeDragInteractions","_handles","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","Subscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","_pickupPositionOnPage","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","coerceElement","disabledHandles","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","_createPlaceholderElement","anchor","createComment","shadowRoot","_getShadowRoot","insertBefore","_createPreviewElement","replaceChild","_getPreviewInsertionPoint","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","previousContainer","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","rootRect","viewRef","viewContainer","createEmbeddedView","getRootNode","matchElementSize","getTransform","margin","zIndex","setAttribute","className","Promise","resolve","placeholderRect","duration","getTransformTransitionDurationInMs","getComputedStyle","transitionedProperties","property","prop","propertyIndex","rawDurations","rawDelays","handler","propertyName","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","nodeType","ELEMENT_NODE","wrapper","sourceRect","array","fromIndex","toIndex","from","clamp","to","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","items","withItems","sort","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","immediateSibling","end","itemPositions","lastItemRect","firstItemRect","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","interval","animationFrameScheduler","pipe","takeUntil","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","filter","every","connectedTo","withOrientation","_scrollableElements","size","_clientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollWidth","clientWidth","getViewportSize","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","_startReceiving","activeSiblings","initiator","receiver","draggedItems","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","startsWith","config","_clearGlobalListeners","streams","Observable","observer","eventOptions","merge","DOCUMENT","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","i1","CDK_DRAG_PARENT","InjectionToken","CDK_DROP_LIST_GROUP","CDK_DRAG_CONFIG","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","_group","_dropListRef","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_destroyed","_unsortedItems","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","_items","addItem","_syncItemsWithRef","removeItem","getSortedItems","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","ref","startWith","coerceArray","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","coerceNumberProperty","dropEvent","draggingDisabled","listAutoScrollDisabled","listOrientation","i3","useValue","CDK_DRAG_HANDLE","CDK_DRAG_PLACEHOLDER","CDK_DRAG_PREVIEW","CdkDrag","_viewContainerRef","_selfHandle","_parentDrag","subscription","movedEvent","_syncInputs","onStable","take","_updateRootElement","_setupHandlesListener","freeDragPosition","rootSelectorChange","rootElementSelector","positionChange","firstChange","closest","_getBoundaryElement","boundary","dir","templateRef","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","tap","childHandleElements","switchMap","_stateChanges","handleInstance","dragRef","dirIndex","CdkScrollableModule","root","reWhitespace","reTrimStart","baseTrim","string","trimmedEndIndex","replace","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","isSymbol","isObjectLike","baseGetTag","isObject","other","valueOf","isBinary","nativeMax","nativeMin","throttle","func","wait","leading","trailing","TypeError","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","remainingWait","timeWaiting","debounced","isInvoking","arguments","leadingEdge","flush","funcToString","Function","prototype","objectCtorString","call","lodash_es_isElement","isElement","isPlainObject","proto","getPrototype","Ctor","getSubNodes","excludedProperties","nodes","subNodes","nodeIndex","shouldNodeBeSkipped","Symbol","iterator","n","typeOfNode","EventTarget","Event","Watchdog","crashes","state","_crashNumberLimit","crashNumberLimit","_now","_minimumNonErrorTimePeriod","minimumNonErrorTimePeriod","_boundErrorHandler","evt","reason","Error","_handleError","_listeners","_restart","setCreator","creator","_creator","setDestructor","destructor","_destructor","_stopErrorHandling","on","eventName","off","cb","_fire","callbacks","_startErrorHandling","_shouldReactToError","message","stack","lineno","colno","date","causesRestart","_shouldRestart","is","_isErrorComingFromThisItem","EditorWatchdog","Editor","watchdogConfig","super","_editor","_throttledSave","_save","bind","saveInterval","elementOrData","editor","_item","_destroy","catch","err","_elementOrData","_data","updatedConfig","initialData","_cloneEditorConfiguration","model","_lastDocumentVersion","version","_getData","_setExcludedProperties","props","_excludedProps","rootName","getRootNames","areConnectedThroughProperties","target1","target2","excludedNodes","structure","subNodes1","subNodes2","cloneDeepWith","customizer","baseClone","CLONE_DEEP_FLAG","HEX_NUMBERS","fill","val","ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID","CKEditorComponent","elementRef","ngZone","tagName","disableTwoWayDataBinding","ready","blur","focus","initiallyDisabled","isEditorSettingData","uid","r1","random","r2","r3","r4","CKEDITOR_VERSION","major","Number","warn","editorInstance","isReadOnly","editorWatchdog","watchdog","_watchdogs","isFirstChange","attachToWatchdog","_this","setData","first","cvaOnChange","cvaOnTouched","enableReadOnlyMode","disableReadOnlyMode","_this2","setUpEditorEvents","_x","removeChild","editorElement","_x3","emitError","getConfig","sourceElementOrData","_","itemId","viewDocument","editing","view","getData","FormsModule"],"sourceRoot":"webpack:///","sources":["./dashboard/app/shared/control/control-container.component.ts","./dashboard/app/shared/control/control.component.html","./dashboard/app/shared/control/control.component.ts","./node_modules/ngx-colors/fesm2020/ngx-colors.mjs","./dashboard/app/shared/control/group-control.component.html","./dashboard/app/shared/control/group-control.component.ts","./dashboard/app/shared/control/control.module.ts","./dashboard/app/shared/control/type.ts","./node_modules/@angular/cdk/fesm2020/drag-drop.mjs","./node_modules/lodash-es/now.js","./node_modules/lodash-es/_trimmedEndIndex.js","./node_modules/lodash-es/_baseTrim.js","./node_modules/lodash-es/toNumber.js","./node_modules/lodash-es/isSymbol.js","./node_modules/lodash-es/debounce.js","./node_modules/lodash-es/throttle.js","./node_modules/lodash-es/isPlainObject.js","./node_modules/lodash-es/isElement.js","./node_modules/@ckeditor/ckeditor5-watchdog/src/utils/getsubnodes.js","./node_modules/@ckeditor/ckeditor5-watchdog/src/watchdog.js","./node_modules/@ckeditor/ckeditor5-watchdog/src/editorwatchdog.js","./node_modules/@ckeditor/ckeditor5-watchdog/src/utils/areconnectedthroughproperties.js","./node_modules/lodash-es/cloneDeepWith.js","./node_modules/@ckeditor/ckeditor5-angular/fesm2020/ckeditor-ckeditor5-angular.mjs"],"sourcesContent":["import {Component, Input, OnChanges, OnInit, QueryList, SimpleChanges, ViewChildren} from \"@angular/core\";\nimport {FormGroup} from \"@angular/forms\";\nimport {buildFormGroup, Control} from \"./type\";\nimport {DynamicResourceLoaderService} from \"../../@core/services/dynamic-resource-loader.service\";\nimport {ControlComponent} from \"./control.component\";\nimport {ReplaySubject, Subject} from \"rxjs\";\n\n@Component({\n  selector: \"control-container\",\n  template:\n    `\n      <control *ngFor=\"let control of controls\" [hidden]=\"control.hidden\"\n               #controlComponent\n               [control]=\"control\"\n               [direction]=\"direction\"\n               [form]=\"form\">\n      </control>\n    `,\n  styles: [\n    `\n      :host {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n      }\n    `\n  ],\n})\nexport class ControlContainerComponent implements OnInit, OnChanges {\n  @Input() direction = 'column';\n  @Input() controls: Control[] = [];\n  @Input() form!: FormGroup;\n  @ViewChildren('controlComponent') controlComponents: QueryList<ControlComponent> = new QueryList<ControlComponent>();\n\n  private $resourceSubject = new Subject<Record<string, string[]>>()\n  private $controlSubject = new ReplaySubject<Control[]>(1);\n\n\n  constructor(\n    private resourceLoader: DynamicResourceLoaderService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.$controlSubject.subscribe((controls: Control[]) => {\n      if (this.form == undefined) {\n        this.form = buildFormGroup(controls);\n      }\n      const resources: Record<string, string[]> = {};\n      controls.forEach((control) => {\n        if (Array.isArray(control.resources) && control.resources.length > 0) {\n          resources[control.id] = control.resources;\n        }\n        if (control.depends && control.depends.length > 0) {\n           this.onDepend(control);\n        }\n      });\n      if (Object.keys(resources).length > 0) {\n        this.$resourceSubject.next(resources);\n      }\n    });\n\n    this.$resourceSubject.subscribe(resources => {\n      const waitResources: any[] = [];\n      const nameMap: Record<string, string> = {};\n      Object.keys(resources).forEach((id) => {\n        resources[id].forEach((resource) => {\n          const file = resource.substring(resource.lastIndexOf('/') + 1);\n          const index = file.lastIndexOf('.');\n          const filename = file.substring(0, index);\n          waitResources.push({name: filename, src: resource});\n          nameMap[filename] = id;\n        });\n      });\n      this.resourceLoader.push(waitResources);\n      this.resourceLoader.load(...waitResources.map<string>((item) => item.name)).then((results) => {\n        results.forEach((result) => {\n          if (!result.loaded || result.type == undefined || result.type != 'js') {\n            return;\n          }\n          const fun: any = window[result.resource as any];\n          if (fun !== undefined) {\n            let controlComponent: ControlComponent | undefined;\n            let depends: Record<string, ControlComponent | undefined> = {};\n            if (nameMap[result.resource]) {\n              controlComponent = this.controlComponents.find((control) => control.id == nameMap[result.resource]);\n              const control = this.controls.find((control) => control.id == nameMap[result.resource]);\n              if (control && control.depends && control.depends.length > 0) {\n                control.depends.forEach(depend => {\n                  depends[depend] = this.controlComponents.find(element => element.id == depend);\n                });\n              }\n            }\n            try {\n              const component = new fun(controlComponent);\n              component.init(depends);\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        });\n      });\n    });\n\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['controls'].currentValue != changes['controls'].previousValue) {\n      this.$controlSubject.next(changes['controls'].currentValue);\n    }\n  }\n\n  onDepend(control: Control) {\n    const depends = control.depends;\n    if (depends == undefined || depends.length < 1) {\n      return ;\n    }\n    let hidden = true;\n    for (let depend of depends) {\n      const dependMode = depend.split(\":\");\n      if (dependMode.length < 2 || dependMode[1] === \"d\") {\n        hidden = hidden && this.form.controls[depend].value;\n      } else if (dependMode[1] === \"e\") {\n        this.form.controls[control.id].valueChanges.subscribe((value: any) => {\n          const type = typeof value;\n          const options = {\n            onlySelf: false,\n            emitEvent: false,\n            emitModelToViewChange: true,\n            emitViewToModelChange: true,\n          };\n          switch (type) {\n            case \"boolean\":\n              this.form.controls[dependMode[0]].setValue(false, options);\n              break;\n            case \"number\":\n            case \"bigint\":\n              this.form.controls[dependMode[0]].setValue(0, options);\n              break;\n            case \"string\":\n              this.form.controls[dependMode[0]].setValue(\"\", options);\n              break;\n            default:\n              this.form.controls[dependMode[0]].setValue(null, options);\n          }\n        });\n      }\n    }\n    control.hidden = !hidden;\n  }\n\n}\n","<div class=\"mb-3\" [class]=\"direction !== 'column' ? 'row' : ''\" [formGroup]=\"form!\">\n  <label class=\"label col-form-label\" [class]=\"direction !== 'column' ? 'col-12 col-md-2' : ''\" for=\"{{control.id}}\">\n    {{ control.label}}\n  </label>\n  <div [class]=\"direction !== 'column' ? 'col-12 col-md-10' : ''\" class=\"d-flex flex-column\">\n    <ng-container [ngSwitch]=\"control.type\">\n      <input *ngSwitchCase=\"'input'\"\n         [id]=\"control.id\"\n         status=\"primary\"\n         nbInput fullWidth\n         [placeholder]=\"control.placeholder!\"\n         [status]=\"status\"\n         (ngModelChange)=\"writeValue($event)\"\n         [type]=\"control.inputType!\"\n         [formControlName]=\"control.id\"/>\n\n      <textarea *ngSwitchCase=\"'textarea'\"\n        nbInput fullWidth [rows]=\"control.settings!['rows']??2\"\n        status=\"primary\"\n        [id]=\"control.id\"\n        [placeholder]=\"control.placeholder!\"\n        [status]=\"status\"\n        (ngModelChange)=\"writeValue($event)\"\n        [formControlName]=\"control.id\"></textarea>\n\n      <div class=\"d-flex flex-column\" *ngSwitchCase=\"control.type == 'file' || control.type == 'video' || control.type == 'audio' || control.type == 'image' ? control.type : ''\">\n        <div class=\"flex-column d-flex align-items-center\">\n          <span *ngIf=\"control.type != 'image' && !control.multiple && control.attachment\" class=\"d-inline text-break\">\n            {{ control.attachment.url }}\n          </span>\n          <div *ngIf=\"control.type == 'image' && !control.multiple && control.attachment\"\n               [style.width]=\"control.settings?.cropped ? control.settings?.cropped.width + 'px' : null\"\n               [style.height.px]=\"control.settings?.cropped ? control.settings?.cropped.height + 'px' : null\">\n            <img alt=\"{{control.label}}\" width=\"100%\" src=\"{{ control.attachment.url }}\"/>\n          </div>\n          <ng-container *ngIf=\"control.type != 'image' && control.multiple && control.attachment && control.attachment.length > 0\">\n            <span class=\"d-inline my-1 text-break\" *ngFor=\"let file of control.attachment\">{{ file.url }}\"</span>\n          </ng-container>\n          <ng-container *ngIf=\"control.type == 'image' && control.multiple && control.attachment && control.attachment.length > 0\">\n          <div class=\"my-1\" *ngFor=\"let image of control.attachment; let i = index;\" [style.width]=\"control.settings?.cropped ? control.settings?.cropped.width + 'px' : null\" [style.height.px]=\"control.settings?.cropped ? control.settings?.cropped.height+ 'px' : null\">\n            <img alt=\"{{control.label + i}}\" width=\"100%\" src=\"{{ image.url }}\"/>\n          </div>\n          </ng-container>\n        </div>\n        <div class=\"d-flex justify-content-between mt-2\">\n          <ng-container *ngIf=\"(!control.multiple ? !!control.value : control.value.length > 0) && control.settings?.is_upload\">\n            <button nbButton type=\"button\"  status=\"danger\" (click)=\"removeMedia()\">{{control.settings?.button_labels.remove}}</button>\n            <button nbButton type=\"button\"  status=\"warning\" (click)=\"openMedia()\">{{control.settings?.button_labels.change}}</button>\n          </ng-container>\n          <button *ngIf=\"(!control.multiple ? !!!control.value : control.value.length < 1) && control.settings?.is_upload\" nbButton fullWidth type=\"button\" status=\"primary\" (click)=\"openMedia()\">\n            {{control.settings?.button_labels.select}}\n          </button>\n        </div>\n      </div>\n\n      <nb-select [id]=\"control.id\"\n         status=\"primary\" fullWidth\n         *ngSwitchCase=\"'select'\"\n         [placeholder]=\"control.placeholder!\"\n         [multiple]=\"control.multiple\"\n         [selected]=\"control.value\"\n         (selectedChange)=\"writeValue($event)\"\n         [formControlName]=\"control.id\">\n        <nb-option *ngFor=\"let option of control.options\" [value]=\"option.value\">{{option.label}}</nb-option>\n      </nb-select>\n\n\n      <nb-radio-group class=\"d-flex\" *ngSwitchCase=\"'radio'\" [formControlName]=\"control.id\" [id]=\"control.id\" status=\"primary\">\n        <nb-radio [value]=\"option.value\" *ngFor=\"let option of control.options\">{{option.label}}</nb-radio>\n      </nb-radio-group>\n\n\n      <nb-checkbox *ngSwitchCase=\"'checkbox'\" [id]=\"control.id\"\n        status=\"primary\"\n        [checked]=\"!!control.value\"\n        (checkedChange)=\"writeValue($event)\"\n        [formControlName]=\"control.id\"></nb-checkbox>\n\n      <div *ngSwitchCase=\"'date'\">\n        <input nbInput fullWidth status=\"primary\" [id]=\"control.id\" id=\"{{ control.id }}\"\n           (ngModelChange)=\"writeValue($event)\"\n           [placeholder]=\"control.placeholder\"\n           [formControlName]=\"control.id\"\n           [nbDatepicker]=\"datePicker\"/>\n        <nb-datepicker [format]=\"control.format!\" #datePicker></nb-datepicker>\n      </div>\n\n      <div *ngSwitchCase=\"'datetime'\">\n        <input nbInput fullWidth status=\"primary\" [id]=\"control.id\" id=\"{{ control.id }}\"\n               [placeholder]=\"control.placeholder\"\n               (ngModelChange)=\"writeValue($event)\"\n               [formControlName]=\"control.id\"\n               [nbDatepicker]=\"dateTimePicker\"/>\n        <nb-date-timepicker withSeconds [format]=\"control.format!\" #dateTimePicker></nb-date-timepicker>\n      </div>\n\n\n      <div *ngSwitchCase=\"'range_date'\">\n        <input nbInput fullWidth status=\"primary\" [id]=\"control.id\"\n         [placeholder]=\"control.placeholder\"\n         (ngModelChange)=\"writeValue($event)\"\n         [formControlName]=\"control.id\"\n         [nbDatepicker]=\"rangeDatePicker\"\n        />\n        <nb-rangepicker [format]=\"control.format!\" #rangeDatePicker></nb-rangepicker>\n      </div>\n\n      <div *ngSwitchCase=\"'autocomplete'\">\n        <input nbInput fullWidth status=\"primary\" [id]=\"control.id\"\n         [placeholder]=\"control.placeholder\"\n         (ngModelChange)=\"writeValue($event)\"\n         [formControlName]=\"control.id\"\n         [nbAutocomplete]=\"autocomplete\"\n        />\n        <nb-autocomplete #autocomplete></nb-autocomplete>\n      </div>\n\n      <div class=\"d-flex justify-content-between align-items-center\" *ngSwitchCase=\"'color'\">\n        <input disabled nbInput [value]=\"control.value ? control.value : ''\" />\n        <ngx-colors (ngModelChange)=\"writeValue($event)\" ngx-colors-trigger [formControlName]=\"control.id\"></ngx-colors>\n      </div>\n\n      <div *ngSwitchCase=\"'custom'\" [innerHTML]=\"dom.bypassSecurityTrustHtml(control.template!)\"></div>\n\n      <nb-toggle *ngSwitchCase=\"'switch'\" [formControlName]=\"control.id\" [id]=\"control.id\" (ngModelChange)=\"writeValue($event)\" status=\"primary\"></nb-toggle>\n\n      <group-control *ngSwitchCase=\"'group'\" [element]=\"control\" [formControlName]=\"control.id\" (ngModelChange)=\"writeValue($event)\"></group-control>\n\n    </ng-container>\n    <p class=\"caption col-form-label status-danger\" *ngIf=\"invalid\">{{error}}</p>\n    <p class=\"label col-form-label\" *ngIf=\"control.description && control.description.length > 0\" [innerHTML]=\"dom.bypassSecurityTrustHtml(control.description)\"></p>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  forwardRef, Inject,\n  Input, LOCALE_ID,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from \"@angular/core\";\nimport {CKFinderService} from \"../../@core/services/ckfinder.service\";\nimport {buildFormGroup, Control} from \"./type\";\nimport {ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, Validators} from \"@angular/forms\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {Attachment} from \"../../@core/definition/content/type\";\n\n@Component({\n  selector: \"control\",\n  templateUrl: \"control.component.html\",\n  styles: [\n    `\n      :host {\n        width: 100%;\n      }\n    `\n  ],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ControlComponent),\n    multi: true\n  }]\n})\nexport class ControlComponent implements OnInit, OnChanges, AfterViewInit, ControlValueAccessor {\n\n  @Input() direction = 'column';\n  @Input() control!: Control;\n  @Input() form: FormGroup | undefined;\n  invalid = false;\n  protected onChange: Function = () => {};\n  protected onTouched: Function = () => {};\n  id: string = \"\";\n\n  constructor(\n    private ckfinder: CKFinderService,\n    public dom: DomSanitizer,\n    @Inject(LOCALE_ID) private locale: string,\n  ) {}\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngOnInit() {\n    this.id = this.control.id;\n    if (!this.control.inputType) {\n      this.control.inputType = 'text';\n    }\n    if (!this.control.placeholder) {\n      this.control.placeholder = '';\n    }\n    if (!this.control.format) {\n      this.control.format = '';\n    }\n\n    const formControl = this.getControl();\n    if (this.control.disabled) {\n      formControl?.disable();\n    }\n    formControl?.statusChanges.subscribe(res => {\n      this.invalid = res == 'INVALID' && formControl.dirty;\n    });\n    this.ckfinder.onChoose().subscribe((files) => {\n      if (!['file', 'image', 'video', 'audio'].includes(this.control.type)) {\n        return ;\n      }\n      const attachments: Attachment[] = [];\n      files.forEach((file) => {\n        if (this.control.id == file.source) {\n          attachments.push({url: file.url, id: file.id});\n        }\n      });\n      if (attachments.length < 1) {\n        return ;\n      }\n      // @ts-ignore\n      this.control.attachment = this.control.multiple ? attachments : attachments[attachments.length - 1];\n      const value = this.control.multiple ? attachments.map((item) => item.id) : attachments[attachments.length - 1].id;\n      this.writeValue(value);\n      this.getControl().setValue(value);\n    });\n  }\n\n  removeMedia() {\n    this.control.attachment = undefined;\n    let value: undefined|any[] = [];\n    if (!this.control.multiple) {\n      value = undefined;\n    }\n    this.writeValue(value);\n    this.getControl().setValue(value);\n  }\n\n  openMedia() {\n    if (this.control.type == 'image') {\n      this.ckfinder.popup({\n        resourceType: \"Images\",\n        multi: this.control.multiple!,\n        source: this.control.id,\n        cropped: this.control.settings && this.control.settings.cropped ? this.control.settings.cropped : undefined,\n      });\n    } else {\n      const resourceType = this.control.type.charAt(0).toUpperCase() + this.control.type.slice(1) + 's';\n      this.ckfinder.popup({resourceType: resourceType, multi: this.control.multiple!, source: this.control.id});\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n  }\n\n  get status() {\n    const control = this.getControl();\n    return control?.dirty ? (control.invalid ? 'danger' : 'success') : 'primary';\n  }\n\n  get error() {\n    const error = this.getControl()?.errors;\n    if (error == null || error.nbDatepickerParse) {\n      return \"\";\n    }\n    if (error.required) {\n      return this.control.label + \"不能为空\";\n    }\n    if (error.min) {\n      return this.control.label + \"最小为\" + this.control.validators?.find(t => t.key == 'min')?.value;\n    }\n    if (error.max) {\n      return this.control.label + \"最大为\" + this.control.validators?.find(t => t.key == 'max')?.value;\n    }\n    if (error.pattern) {\n      return this.control.label + \"格式不正确\";\n    }\n    return \"未知错误\";\n  }\n\n  getControl() {\n    if (this.control.required) {\n      if (!this.control.placeholder) {\n        this.control.placeholder = \"必填项\";\n      }\n    }\n    if (this.form == undefined) {\n      this.form = buildFormGroup([this.control])\n    }\n    return this.form.controls[this.control.id];\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.control.disabled = isDisabled;\n  }\n\n  get value() {\n    return this.control.value;\n  }\n\n  set value(value: any) {\n    this.setValue(value);\n    this.onChange(value);\n  }\n\n  private setValue(value: any) {\n    this.writeValue(value);\n  }\n\n  writeValue(value: any): void {\n    if (value !== this.value) {\n      this.control.value = value;\n      this.onChange(this.value);\n    }\n  }\n}\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Directive, Input, Output, HostListener, Component, ViewEncapsulation, ViewChild, HostBinding, forwardRef, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, transition, query, style, stagger, animate, keyframes } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nvar ColorFormats;\n(function (ColorFormats) {\n    ColorFormats[ColorFormats[\"HEX\"] = 0] = \"HEX\";\n    ColorFormats[ColorFormats[\"RGBA\"] = 1] = \"RGBA\";\n    ColorFormats[ColorFormats[\"HSLA\"] = 2] = \"HSLA\";\n    ColorFormats[ColorFormats[\"CMYK\"] = 3] = \"CMYK\";\n})(ColorFormats || (ColorFormats = {}));\n\nconst defaultColors = [\n    {\n        color: \"rojo\", preview: \"#E57373\", variants: [\"#FFEBEE\", \"#FFCDD2\", \"#EF9A9A\", \"#E57373\", \"#EF5350\", \"#F44336\", \"#E53935\", \"#D32F2F\", \"#C62828\"]\n    },\n    {\n        color: \"rosa\", preview: \"#F06292\", variants: [\"#FCE4EC\", \"#F8BBD0\", \"#F48FB1\", \"#F06292\", \"#EC407A\", \"#E91E63\", \"#D81B60\", \"#C2185B\", \"#AD1457\"]\n    },\n    {\n        color: \"purpura\", preview: \"#BA68C8\", variants: [\"#F3E5F5\", \"#E1BEE7\", \"#CE93D8\", \"#BA68C8\", \"#AB47BC\", \"#9C27B0\", \"#8E24AA\", \"#7B1FA2\", \"#6A1B9A\"]\n    },\n    {\n        color: \"purpura oscuro\", preview: \"#9575CD\", variants: [\"#EDE7F6\", \"#D1C4E9\", \"#B39DDB\", \"#9575CD\", \"#7E57C2\", \"#673AB7\", \"#5E35B1\", \"#512DA8\", \"#4527A0\"]\n    },\n    {\n        color: \"indigo\", preview: \"#7986CB\", variants: [\"#E8EAF6\", \"#C5CAE9\", \"#9FA8DA\", \"#7986CB\", \"#5C6BC0\", \"#3F51B5\", \"#3949AB\", \"#303F9F\", \"#283593\"]\n    },\n    {\n        color: \"azul\", preview: \"#64B5F6\", variants: [\"#E3F2FD\", \"#BBDEFB\", \"#90CAF9\", \"#64B5F6\", \"#42A5F5\", \"#2196F3\", \"#1E88E5\", \"#1976D2\", \"#1565C0\"]\n    },\n    {\n        color: \"celeste\", preview: \"#4FC3F7\", variants: [\"#E1F5FE\", \"#B3E5FC\", \"#81D4FA\", \"#4FC3F7\", \"#29B6F6\", \"#03A9F4\", \"#039BE5\", \"#0288D1\", \"#0277BD\"]\n    },\n    {\n        color: \"cyan\", preview: \"#4DD0E1\", variants: [\"#E0F7FA\", \"#B2EBF2\", \"#80DEEA\", \"#4DD0E1\", \"#26C6DA\", \"#00BCD4\", \"#00ACC1\", \"#0097A7\", \"#00838F\"]\n    },\n    {\n        color: \"color\", preview: \"#4DB6AC\", variants: [\"#E0F2F1\", \"#B2DFDB\", \"#80CBC4\", \"#4DB6AC\", \"#26A69A\", \"#009688\", \"#00897B\", \"#00796B\", \"#00695C\"]\n    },\n    {\n        color: \"verde\", preview: \"#81C784\", variants: [\"#E8F5E9\", \"#C8E6C9\", \"#A5D6A7\", \"#81C784\", \"#66BB6A\", \"#4CAF50\", \"#43A047\", \"#388E3C\", \"#2E7D32\"]\n    },\n    {\n        color: \"verde claro\", preview: \"#AED581\", variants: [\"#F1F8E9\", \"#DCEDC8\", \"#C5E1A5\", \"#AED581\", \"#9CCC65\", \"#8BC34A\", \"#7CB342\", \"#689F38\", \"#558B2F\"]\n    },\n    {\n        color: \"lima\", preview: \"#DCE775\", variants: [\"#F9FBE7\", \"#F0F4C3\", \"#E6EE9C\", \"#DCE775\", \"#D4E157\", \"#CDDC39\", \"#C0CA33\", \"#AFB42B\", \"#9E9D24\"]\n    },\n    {\n        color: \"amarillo\", preview: \"#FFF176\", variants: [\"#FFFDE7\", \"#FFF9C4\", \"#FFF59D\", \"#FFF176\", \"#FFEE58\", \"#FFEB3B\", \"#FDD835\", \"#FBC02D\", \"#F9A825\"]\n    },\n    {\n        color: \"ambar\", preview: \"#FFD54F\", variants: [\"#FFF8E1\", \"#FFECB3\", \"#FFE082\", \"#FFD54F\", \"#FFCA28\", \"#FFC107\", \"#FFB300\", \"#FFA000\", \"#FF8F00\"]\n    },\n    {\n        color: \"naranja\", preview: \"#FFB74D\", variants: [\"#FFF3E0\", \"#FFE0B2\", \"#FFCC80\", \"#FFB74D\", \"#FFA726\", \"#FF9800\", \"#FB8C00\", \"#F57C00\", \"#EF6C00\"]\n    },\n    {\n        color: \"naranja oscuro\", preview: \"#FF8A65\", variants: [\"#FBE9E7\", \"#FFCCBC\", \"#FFAB91\", \"#FF8A65\", \"#FF7043\", \"#FF5722\", \"#F4511E\", \"#E64A19\", \"#D84315\"]\n    },\n    {\n        color: \"marron\", preview: \"#A1887F\", variants: [\"#EFEBE9\", \"#D7CCC8\", \"#BCAAA4\", \"#A1887F\", \"#8D6E63\", \"#795548\", \"#6D4C41\", \"#5D4037\", \"#4E342E\"]\n    },\n    {\n        color: \"escala de grises\", preview: \"#E0E0E0\", variants: [\"#FFFFFF\", \"#FAFAFA\", \"#F5F5F5\", \"#EEEEEE\", \"#E0E0E0\", \"#BDBDBD\", \"#9E9E9E\", \"#757575\", \"#616161\", \"#424242\", \"#000000\"]\n    },\n    {\n        color: \"azul gris\", preview: \"#90A4AE\", variants: [\"#ECEFF1\", \"#CFD8DC\", \"#B0BEC5\", \"#90A4AE\", \"#78909C\", \"#607D8B\", \"#546E7A\", \"#455A64\", \"#37474F\"]\n    }\n];\n\nconst formats = ['hex', 'rgba', 'hsla'];\n\nclass Rgba {\n    constructor(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    denormalize() {\n        this.r = Math.round(this.r * 255);\n        this.g = Math.round(this.g * 255);\n        this.b = Math.round(this.b * 255);\n        return this;\n    }\n    toString() {\n        this.denormalize();\n        let output = 'rgb' +\n            (this.a != 1 ? 'a(' : '(') +\n            this.r + ', ' +\n            this.g + ', ' +\n            this.b +\n            (this.a != 1 ? ', ' + this.a.toPrecision(2) + ')' : ')');\n        return output;\n    }\n}\nclass Hsva {\n    constructor(h, s, v, a) {\n        this.h = h;\n        this.s = s;\n        this.v = v;\n        this.a = a;\n        this.onChange = new EventEmitter(true);\n    }\n    onColorChange(value) {\n        this.s = value.s / value.rgX;\n        this.v = value.v / value.rgY;\n    }\n    onHueChange(value) {\n        this.h = value.v / value.rgX;\n        // this.sliderH = this.hsva.h;\n    }\n    onValueChange(value) {\n        this.v = value.v / value.rgX;\n    }\n    onAlphaChange(value) {\n        this.a = value.v / value.rgX;\n    }\n}\nclass Hsla {\n    constructor(h, s, l, a) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n        this.a = a;\n    }\n    denormalize() {\n        this.h = Math.round(this.h * 360);\n        this.s = Math.round(this.s * 100);\n        this.l = Math.round(this.l * 100);\n        return this;\n    }\n    toString() {\n        let output = 'hsl' +\n            (this.a != 1 ? 'a(' : '(') +\n            this.h + ', ' +\n            this.s + '%, ' +\n            this.l + '%' +\n            (this.a != 1 ? ', ' + this.a.toPrecision(2) + ')' : ')');\n        return output;\n    }\n}\nclass Cmyk {\n    constructor(c, m, y, k, a = 1) {\n        this.c = c;\n        this.m = m;\n        this.y = y;\n        this.k = k;\n        this.a = a;\n    }\n}\n\nclass NgxColor {\n    constructor(params) {\n        if (params) {\n            this.preview = params.preview;\n            this.variants = params.variants;\n        }\n    }\n}\n\nclass ConverterService {\n    // private active: ColorPickerComponent | null = null;\n    constructor() { }\n    // public setActive(active: ColorPickerComponent | null): void {\n    //   this.active = active;\n    // }\n    toFormat(hsva, format) {\n        var output = \"\";\n        if (hsva) {\n            switch (format) {\n                case ColorFormats.HEX:\n                    var rgba = this.hsvaToRgba(hsva);\n                    rgba.denormalize();\n                    var output = this.rgbaToHex(rgba, true);\n                    break;\n                case ColorFormats.HSLA:\n                    var hsla = this.hsva2hsla(hsva);\n                    hsla.denormalize();\n                    var output = hsla.toString();\n                    break;\n                case ColorFormats.RGBA:\n                    var rgba = this.hsvaToRgba(hsva);\n                    var output = rgba.toString();\n                    break;\n                case ColorFormats.CMYK:\n                    var rgba = this.hsvaToRgba(hsva);\n                    var cmyk = this.rgbaToCmyk(rgba);\n                    break;\n            }\n        }\n        return output;\n    }\n    stringToFormat(color, format) {\n        var hsva = this.stringToHsva(color, true);\n        return this.toFormat(hsva, format);\n    }\n    hsva2hsla(hsva) {\n        const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n        if (v === 0) {\n            return new Hsla(h, 0, 0, a);\n        }\n        else if (s === 0 && v === 1) {\n            return new Hsla(h, 1, 1, a);\n        }\n        else {\n            const l = (v * (2 - s)) / 2;\n            return new Hsla(h, (v * s) / (1 - Math.abs(2 * l - 1)), l, a);\n        }\n    }\n    hsla2hsva(hsla) {\n        const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1);\n        const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\n        if (l === 0) {\n            return new Hsva(h, 0, 0, a);\n        }\n        else {\n            const v = l + (s * (1 - Math.abs(2 * l - 1))) / 2;\n            return new Hsva(h, (2 * (v - l)) / v, v, a);\n        }\n    }\n    hsvaToRgba(hsva) {\n        let r, g, b;\n        const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n        const i = Math.floor(h * 6);\n        const f = h * 6 - i;\n        const p = v * (1 - s);\n        const q = v * (1 - f * s);\n        const t = v * (1 - (1 - f) * s);\n        switch (i % 6) {\n            case 0:\n                (r = v), (g = t), (b = p);\n                break;\n            case 1:\n                (r = q), (g = v), (b = p);\n                break;\n            case 2:\n                (r = p), (g = v), (b = t);\n                break;\n            case 3:\n                (r = p), (g = q), (b = v);\n                break;\n            case 4:\n                (r = t), (g = p), (b = v);\n                break;\n            case 5:\n                (r = v), (g = p), (b = q);\n                break;\n            default:\n                (r = 0), (g = 0), (b = 0);\n        }\n        return new Rgba(r, g, b, a);\n    }\n    cmykToRgb(cmyk) {\n        const r = (1 - cmyk.c) * (1 - cmyk.k);\n        const g = (1 - cmyk.m) * (1 - cmyk.k);\n        const b = (1 - cmyk.y) * (1 - cmyk.k);\n        return new Rgba(r, g, b, cmyk.a);\n    }\n    rgbaToCmyk(rgba) {\n        const k = 1 - Math.max(rgba.r, rgba.g, rgba.b);\n        if (k === 1) {\n            return new Cmyk(0, 0, 0, 1, rgba.a);\n        }\n        else {\n            const c = (1 - rgba.r - k) / (1 - k);\n            const m = (1 - rgba.g - k) / (1 - k);\n            const y = (1 - rgba.b - k) / (1 - k);\n            return new Cmyk(c, m, y, k, rgba.a);\n        }\n    }\n    rgbaToHsva(rgba) {\n        let h, s;\n        const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);\n        const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\n        const v = max, d = max - min;\n        s = max === 0 ? 0 : d / max;\n        if (max === min) {\n            h = 0;\n        }\n        else {\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n                default:\n                    h = 0;\n            }\n            h /= 6;\n        }\n        return new Hsva(h, s, v, a);\n    }\n    rgbaToHex(rgba, allowHex8) {\n        /* tslint:disable:no-bitwise */\n        let hex = \"#\" +\n            ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b)\n                .toString(16)\n                .substr(1);\n        if (rgba.a != 1) {\n            hex += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1);\n        }\n        /* tslint:enable:no-bitwise */\n        return hex;\n    }\n    normalizeCMYK(cmyk) {\n        return new Cmyk(cmyk.c / 100, cmyk.m / 100, cmyk.y / 100, cmyk.k / 100, cmyk.a);\n    }\n    denormalizeCMYK(cmyk) {\n        return new Cmyk(Math.floor(cmyk.c * 100), Math.floor(cmyk.m * 100), Math.floor(cmyk.y * 100), Math.floor(cmyk.k * 100), cmyk.a);\n    }\n    denormalizeRGBA(rgba) {\n        return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255), Math.round(rgba.b * 255), rgba.a);\n    }\n    stringToHsva(colorString = \"\", allowHex8 = true) {\n        let hsva = null;\n        colorString = (colorString || \"\").toLowerCase();\n        const stringParsers = [\n            {\n                re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n                parse: function (execResult) {\n                    return new Rgba(parseInt(execResult[2], 10) / 255, parseInt(execResult[3], 10) / 255, parseInt(execResult[4], 10) / 255, isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n                },\n            },\n            {\n                re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n                parse: function (execResult) {\n                    return new Hsla(parseInt(execResult[2], 10) / 360, parseInt(execResult[3], 10) / 100, parseInt(execResult[4], 10) / 100, isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n                },\n            },\n        ];\n        if (allowHex8) {\n            stringParsers.push({\n                re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,\n                parse: function (execResult) {\n                    return new Rgba(parseInt(execResult[1], 16) / 255, parseInt(execResult[2], 16) / 255, parseInt(execResult[3], 16) / 255, parseInt(execResult[4] || \"FF\", 16) / 255);\n                },\n            });\n        }\n        else {\n            stringParsers.push({\n                re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n                parse: function (execResult) {\n                    return new Rgba(parseInt(execResult[1], 16) / 255, parseInt(execResult[2], 16) / 255, parseInt(execResult[3], 16) / 255, 1);\n                },\n            });\n        }\n        stringParsers.push({\n            re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n            parse: function (execResult) {\n                return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255, parseInt(execResult[2] + execResult[2], 16) / 255, parseInt(execResult[3] + execResult[3], 16) / 255, 1);\n            },\n        });\n        for (const key in stringParsers) {\n            if (stringParsers.hasOwnProperty(key)) {\n                const parser = stringParsers[key];\n                const match = parser.re.exec(colorString), color = match && parser.parse(match);\n                if (color) {\n                    if (color instanceof Rgba) {\n                        hsva = this.rgbaToHsva(color);\n                    }\n                    else if (color instanceof Hsla) {\n                        hsva = this.hsla2hsva(color);\n                    }\n                    return hsva;\n                }\n            }\n        }\n        return hsva;\n    }\n    outputFormat(hsva) {\n        return this.hsvaToRgba(hsva).toString();\n    }\n    getFormatByString(color) {\n        if (color) {\n            color = color.toLowerCase();\n            let regexHex = /(#([\\da-f]{3}(?:[\\da-f]{3})?(?:[\\da-f]{2})?))/;\n            let regexRGBA = /(rgba\\((\\d{1,3},\\s?){3}(1|0?\\.\\d+)\\)|rgb\\(\\d{1,3}(,\\s?\\d{1,3}){2}\\))/;\n            let regexHSLA = /(hsla\\((\\d{1,3}%?,\\s?){3}(1|0?\\.\\d+)\\)|hsl\\(\\d{1,3}%?(,\\s?\\d{1,3}%?){2}\\))/;\n            if (regexHex.test(color)) {\n                return \"hex\";\n            }\n            else if (regexRGBA.test(color)) {\n                return \"rgba\";\n            }\n            else if (regexHSLA.test(color)) {\n                return \"hsla\";\n            }\n        }\n        return \"hex\";\n    }\n}\nConverterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: ConverterService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nConverterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: ConverterService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: ConverterService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nclass SliderPosition {\n    constructor(h, s, v, a) {\n        this.h = h;\n        this.s = s;\n        this.v = v;\n        this.a = a;\n    }\n}\nclass SliderDimension {\n    constructor(h, s, v, a) {\n        this.h = h;\n        this.s = s;\n        this.v = v;\n        this.a = a;\n    }\n}\n\nclass SliderDirective {\n    mouseDown(event) {\n        this.start(event);\n    }\n    touchStart(event) {\n        this.start(event);\n    }\n    constructor(elRef) {\n        this.elRef = elRef;\n        this.dragEnd = new EventEmitter();\n        this.dragStart = new EventEmitter();\n        this.newValue = new EventEmitter();\n        this.listenerMove = (event) => this.move(event);\n        this.listenerStop = () => this.stop();\n    }\n    move(event) {\n        event.preventDefault();\n        this.setCursor(event);\n    }\n    start(event) {\n        this.setCursor(event);\n        event.stopPropagation();\n        document.addEventListener('mouseup', this.listenerStop);\n        document.addEventListener('touchend', this.listenerStop);\n        document.addEventListener('mousemove', this.listenerMove);\n        document.addEventListener('touchmove', this.listenerMove);\n        this.dragStart.emit();\n    }\n    stop() {\n        document.removeEventListener('mouseup', this.listenerStop);\n        document.removeEventListener('touchend', this.listenerStop);\n        document.removeEventListener('mousemove', this.listenerMove);\n        document.removeEventListener('touchmove', this.listenerMove);\n        this.dragEnd.emit();\n    }\n    getX(event) {\n        const position = this.elRef.nativeElement.getBoundingClientRect();\n        const pageX = (event.pageX !== undefined) ? event.pageX : event.touches[0].pageX;\n        return pageX - position.left - window.pageXOffset;\n    }\n    getY(event) {\n        const position = this.elRef.nativeElement.getBoundingClientRect();\n        const pageY = (event.pageY !== undefined) ? event.pageY : event.touches[0].pageY;\n        return pageY - position.top - window.pageYOffset;\n    }\n    setCursor(event) {\n        const width = this.elRef.nativeElement.offsetWidth;\n        const height = this.elRef.nativeElement.offsetHeight;\n        const x = Math.max(0, Math.min(this.getX(event), width));\n        const y = Math.max(0, Math.min(this.getY(event), height));\n        if (this.rgX !== undefined && this.rgY !== undefined) {\n            this.newValue.emit({ s: x / width, v: (1 - y / height), rgX: this.rgX, rgY: this.rgY });\n        }\n        else if (this.rgX === undefined && this.rgY !== undefined) {\n            this.newValue.emit({ v: y / height, rgY: this.rgY });\n        }\n        else if (this.rgX !== undefined && this.rgY === undefined) {\n            this.newValue.emit({ v: x / width, rgX: this.rgX });\n        }\n    }\n}\nSliderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: SliderDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nSliderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.2\", type: SliderDirective, selector: \"[slider]\", inputs: { rgX: \"rgX\", rgY: \"rgY\", slider: \"slider\" }, outputs: { dragEnd: \"dragEnd\", dragStart: \"dragStart\", newValue: \"newValue\" }, host: { listeners: { \"mousedown\": \"mouseDown($event)\", \"touchstart\": \"touchStart($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: SliderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[slider]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { rgX: [{\n                type: Input\n            }], rgY: [{\n                type: Input\n            }], slider: [{\n                type: Input\n            }], dragEnd: [{\n                type: Output\n            }], dragStart: [{\n                type: Output\n            }], newValue: [{\n                type: Output\n            }], mouseDown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }], touchStart: [{\n                type: HostListener,\n                args: ['touchstart', ['$event']]\n            }] } });\n\nclass ColorPickerComponent {\n    constructor(service, cdr) {\n        this.service = service;\n        this.cdr = cdr;\n        //IO color\n        this.color = new Hsva(0, 1, 1, 1);\n        this.controls = \"default\";\n        this.sliderChange = new EventEmitter(false);\n        this.onAlphaChange = new EventEmitter(false);\n        //Event triggered when any slider change\n        // @Output() colorSelectedChange:EventEmitter<Hsva> = new EventEmitter<Hsva>(false);\n        this.hsva = new Hsva(0, 1, 1, 1);\n        this.selectedColor = \"#000000\";\n        this.fallbackColor = \"#000000\";\n    }\n    ngOnInit() {\n        if (!this.color) {\n            this.color = new Hsva(0, 1, 1, 1);\n        }\n        this.slider = new SliderPosition(0, 0, 0, 0);\n        this.update();\n    }\n    ngOnDestroy() { }\n    ngOnChanges(changes) {\n        if (changes.color && this.color) {\n            this.update();\n        }\n    }\n    ngAfterViewInit() {\n        const hueWidth = this.hueSlider?.nativeElement.offsetWidth || 140;\n        const alphaWidth = this.alphaSlider?.nativeElement.offsetWidth || 140;\n        this.sliderDimMax = new SliderDimension(hueWidth, 220, 130, alphaWidth);\n        this.update();\n    }\n    onSliderChange(type, event) {\n        switch (type) {\n            case \"saturation-lightness\":\n                this.hsva.onColorChange(event);\n                break;\n            case \"hue\":\n                this.hsva.onHueChange(event);\n                break;\n            case \"alpha\":\n                this.hsva.onAlphaChange(event);\n                this.onAlphaChange.emit(event);\n                break;\n            case \"value\":\n                this.hsva.onValueChange(event);\n                break;\n        }\n        // this.sHue = this.hsva.h;\n        this.update();\n        this.setColor(this.outputColor);\n    }\n    setColor(color) {\n        this.color = color;\n        this.sliderChange.emit(this.color);\n    }\n    getBackgroundColor(color) {\n        return {\n            background: \"linear-gradient(90deg, rgba(36,0,0,0) 0%, \" + color + \" 100%)\",\n        };\n    }\n    update() {\n        this.hsva = this.color;\n        if (this.sliderDimMax) {\n            let rgba = this.service.hsvaToRgba(this.hsva).denormalize();\n            let hue = this.service\n                .hsvaToRgba(new Hsva(this.hsva.h, 1, 1, 1))\n                .denormalize();\n            this.hueSliderColor = \"rgb(\" + hue.r + \",\" + hue.g + \",\" + hue.b + \")\";\n            this.alphaSliderColor =\n                \"rgb(\" + rgba.r + \",\" + rgba.g + \",\" + rgba.b + \")\";\n            this.outputColor = this.hsva;\n            this.selectedColor = this.service.hsvaToRgba(this.hsva).toString();\n            this.slider = new SliderPosition(\n            // (this.sHue || this.hsva.h) * this.sliderDimMax.h - 8,\n            this.hsva.h * this.sliderDimMax.h - 5, this.hsva.s * this.sliderDimMax.s - 8, (1 - this.hsva.v) * this.sliderDimMax.v - 8, this.hsva.a * this.sliderDimMax.a - 5);\n            this.cdr.detectChanges();\n        }\n    }\n}\nColorPickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: ColorPickerComponent, deps: [{ token: ConverterService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nColorPickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.2\", type: ColorPickerComponent, selector: \"color-picker\", inputs: { color: \"color\", controls: \"controls\" }, outputs: { sliderChange: \"sliderChange\", onAlphaChange: \"onAlphaChange\" }, viewQueries: [{ propertyName: \"hueSlider\", first: true, predicate: [\"hueSlider\"], descendants: true }, { propertyName: \"alphaSlider\", first: true, predicate: [\"alphaSlider\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div #dialogPopup class=\\\"color-picker\\\" (click)=\\\"$event.stopPropagation()\\\">\\n  <div\\n    class=\\\"saturation-lightness\\\"\\n    *ngIf=\\\"this.controls != 'only-alpha'\\\"\\n    [slider]\\n    [rgX]=\\\"1\\\"\\n    [rgY]=\\\"1\\\"\\n    [style.background-color]=\\\"hueSliderColor\\\"\\n    (newValue)=\\\"onSliderChange('saturation-lightness', $event)\\\"\\n  >\\n    <div class=\\\"cursor\\\" [style.top.px]=\\\"slider?.v\\\" [style.left.px]=\\\"slider?.s\\\">\\n      <div></div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"hue-alpha box\\\">\\n    <div class=\\\"left\\\" *ngIf=\\\"this.controls != 'only-alpha'\\\">\\n      <div class=\\\"selected-color-background\\\"></div>\\n      <div\\n        class=\\\"selected-color\\\"\\n        [style.background-color]=\\\"selectedColor\\\"\\n      ></div>\\n    </div>\\n\\n    <div class=\\\"right\\\">\\n      <div\\n        *ngIf=\\\"this.controls != 'only-alpha'\\\"\\n        #hueSlider\\n        class=\\\"hue\\\"\\n        [slider]\\n        [rgX]=\\\"1\\\"\\n        (newValue)=\\\"onSliderChange('hue', $event)\\\"\\n      >\\n        <div class=\\\"sliderCursor\\\" [style.left.px]=\\\"slider?.h\\\">\\n          <div><div></div></div>\\n        </div>\\n      </div>\\n\\n      <div\\n        *ngIf=\\\"this.controls != 'no-alpha'\\\"\\n        #alphaSlider\\n        class=\\\"alpha\\\"\\n        [slider]\\n        [rgX]=\\\"1\\\"\\n        (newValue)=\\\"onSliderChange('alpha', $event)\\\"\\n      >\\n        <div\\n          class=\\\"alpha-gradient\\\"\\n          [ngStyle]=\\\"getBackgroundColor(alphaSliderColor)\\\"\\n        ></div>\\n        <div class=\\\"sliderCursor\\\" [style.left.px]=\\\"slider?.a\\\">\\n          <div><div></div></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".color-picker{position:relative;z-index:1000;width:220px;height:auto;cursor:default;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;touch-action:none}.color-picker *{box-sizing:border-box;margin:0;font-size:11px}.color-picker input{width:0;height:26px;min-width:0;font-size:13px;text-align:center;color:#000}.color-picker input:invalid,.color-picker input:-moz-ui-invalid,.color-picker input:-moz-submit-invalid{box-shadow:none}.color-picker input::-webkit-inner-spin-button,.color-picker input::-webkit-outer-spin-button{margin:0;-webkit-appearance:none}.color-picker .sliderCursor{width:10px;border-radius:5px;position:absolute;margin-top:-3px;border:1px solid black}.color-picker .sliderCursor>div{border:2px solid white;border-radius:5px}.color-picker .sliderCursor>div>div{border-radius:5px;border:1px solid black;height:24px}.color-picker .cursor{position:absolute;width:21px;border:3px solid black;border-radius:100%;margin:-2px 0 0 -2px}.color-picker .cursor>div{height:15px;border:3px solid white;border-radius:100%}.color-picker .box{display:flex;padding:4px 8px}.color-picker .left{position:relative;padding:16px 8px}.color-picker .right{flex:1 1 auto;display:flex;flex-direction:column;gap:10px;padding:12px 8px}.color-picker .hue-alpha{display:flex;align-items:center;margin-bottom:3px}.color-picker .hue{direction:ltr;width:100%;height:24px;border:none;border-radius:5px;position:relative;cursor:pointer;background-size:100% 100%;background:linear-gradient(to right,red 0%,#ff0 17%,lime 33%,cyan 50%,blue 66%,#f0f 83%,red 100%)}.color-picker .alpha{direction:ltr;position:relative;width:100%;height:24px;border:none;border-radius:5px;cursor:pointer;background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.color-picker .alpha-gradient{width:100%;height:100%;border-radius:5px;position:absolute}.color-picker .selected-color{position:absolute;top:16px;left:8px;width:40px;height:40px;box-shadow:0 1px 1px 1px #00000026;border-radius:50%}.color-picker .selected-color-background{width:40px;height:40px;border-radius:50%;background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.color-picker .saturation-lightness{direction:ltr;cursor:crosshair;width:100%;position:relative;height:130px;border:none;touch-action:manipulation;background-image:linear-gradient(to top,#000 0%,transparent 100%),linear-gradient(to right,#fff 0%,transparent 100%)}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: SliderDirective, selector: \"[slider]\", inputs: [\"rgX\", \"rgY\", \"slider\"], outputs: [\"dragEnd\", \"dragStart\", \"newValue\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: ColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"color-picker\", encapsulation: ViewEncapsulation.None, template: \"<div #dialogPopup class=\\\"color-picker\\\" (click)=\\\"$event.stopPropagation()\\\">\\n  <div\\n    class=\\\"saturation-lightness\\\"\\n    *ngIf=\\\"this.controls != 'only-alpha'\\\"\\n    [slider]\\n    [rgX]=\\\"1\\\"\\n    [rgY]=\\\"1\\\"\\n    [style.background-color]=\\\"hueSliderColor\\\"\\n    (newValue)=\\\"onSliderChange('saturation-lightness', $event)\\\"\\n  >\\n    <div class=\\\"cursor\\\" [style.top.px]=\\\"slider?.v\\\" [style.left.px]=\\\"slider?.s\\\">\\n      <div></div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"hue-alpha box\\\">\\n    <div class=\\\"left\\\" *ngIf=\\\"this.controls != 'only-alpha'\\\">\\n      <div class=\\\"selected-color-background\\\"></div>\\n      <div\\n        class=\\\"selected-color\\\"\\n        [style.background-color]=\\\"selectedColor\\\"\\n      ></div>\\n    </div>\\n\\n    <div class=\\\"right\\\">\\n      <div\\n        *ngIf=\\\"this.controls != 'only-alpha'\\\"\\n        #hueSlider\\n        class=\\\"hue\\\"\\n        [slider]\\n        [rgX]=\\\"1\\\"\\n        (newValue)=\\\"onSliderChange('hue', $event)\\\"\\n      >\\n        <div class=\\\"sliderCursor\\\" [style.left.px]=\\\"slider?.h\\\">\\n          <div><div></div></div>\\n        </div>\\n      </div>\\n\\n      <div\\n        *ngIf=\\\"this.controls != 'no-alpha'\\\"\\n        #alphaSlider\\n        class=\\\"alpha\\\"\\n        [slider]\\n        [rgX]=\\\"1\\\"\\n        (newValue)=\\\"onSliderChange('alpha', $event)\\\"\\n      >\\n        <div\\n          class=\\\"alpha-gradient\\\"\\n          [ngStyle]=\\\"getBackgroundColor(alphaSliderColor)\\\"\\n        ></div>\\n        <div class=\\\"sliderCursor\\\" [style.left.px]=\\\"slider?.a\\\">\\n          <div><div></div></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".color-picker{position:relative;z-index:1000;width:220px;height:auto;cursor:default;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;touch-action:none}.color-picker *{box-sizing:border-box;margin:0;font-size:11px}.color-picker input{width:0;height:26px;min-width:0;font-size:13px;text-align:center;color:#000}.color-picker input:invalid,.color-picker input:-moz-ui-invalid,.color-picker input:-moz-submit-invalid{box-shadow:none}.color-picker input::-webkit-inner-spin-button,.color-picker input::-webkit-outer-spin-button{margin:0;-webkit-appearance:none}.color-picker .sliderCursor{width:10px;border-radius:5px;position:absolute;margin-top:-3px;border:1px solid black}.color-picker .sliderCursor>div{border:2px solid white;border-radius:5px}.color-picker .sliderCursor>div>div{border-radius:5px;border:1px solid black;height:24px}.color-picker .cursor{position:absolute;width:21px;border:3px solid black;border-radius:100%;margin:-2px 0 0 -2px}.color-picker .cursor>div{height:15px;border:3px solid white;border-radius:100%}.color-picker .box{display:flex;padding:4px 8px}.color-picker .left{position:relative;padding:16px 8px}.color-picker .right{flex:1 1 auto;display:flex;flex-direction:column;gap:10px;padding:12px 8px}.color-picker .hue-alpha{display:flex;align-items:center;margin-bottom:3px}.color-picker .hue{direction:ltr;width:100%;height:24px;border:none;border-radius:5px;position:relative;cursor:pointer;background-size:100% 100%;background:linear-gradient(to right,red 0%,#ff0 17%,lime 33%,cyan 50%,blue 66%,#f0f 83%,red 100%)}.color-picker .alpha{direction:ltr;position:relative;width:100%;height:24px;border:none;border-radius:5px;cursor:pointer;background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.color-picker .alpha-gradient{width:100%;height:100%;border-radius:5px;position:absolute}.color-picker .selected-color{position:absolute;top:16px;left:8px;width:40px;height:40px;box-shadow:0 1px 1px 1px #00000026;border-radius:50%}.color-picker .selected-color-background{width:40px;height:40px;border-radius:50%;background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.color-picker .saturation-lightness{direction:ltr;cursor:crosshair;width:100%;position:relative;height:130px;border:none;touch-action:manipulation;background-image:linear-gradient(to top,#000 0%,transparent 100%),linear-gradient(to right,#fff 0%,transparent 100%)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: ConverterService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { color: [{\n                type: Input\n            }], controls: [{\n                type: Input\n            }], sliderChange: [{\n                type: Output\n            }], onAlphaChange: [{\n                type: Output\n            }], hueSlider: [{\n                type: ViewChild,\n                args: [\"hueSlider\", { static: false }]\n            }], alphaSlider: [{\n                type: ViewChild,\n                args: [\"alphaSlider\", { static: false }]\n            }] } });\n\nclass PanelComponent {\n    click(event) {\n        if (this.isOutside(event)) {\n            this.emitClose(\"cancel\");\n        }\n    }\n    onScroll() {\n        this.onScreenMovement();\n    }\n    onResize() {\n        this.onScreenMovement();\n    }\n    constructor(service, cdr) {\n        this.service = service;\n        this.cdr = cdr;\n        this.color = \"#000000\";\n        this.previewColor = \"#000000\";\n        this.hsva = new Hsva(0, 1, 1, 1);\n        this.colorsAnimationEffect = \"slide-in\";\n        this.palette = defaultColors;\n        this.variants = [];\n        this.colorFormats = formats;\n        this.format = ColorFormats.HEX;\n        this.canChangeFormat = true;\n        this.menu = 1;\n        this.hideColorPicker = false;\n        this.hideTextInput = false;\n        this.colorPickerControls = \"default\";\n    }\n    ngOnInit() {\n        this.setPosition();\n        this.hsva = this.service.stringToHsva(this.color);\n        this.indexSeleccionado = this.findIndexSelectedColor(this.palette);\n    }\n    ngAfterViewInit() {\n        this.setPositionY();\n    }\n    onScreenMovement() {\n        this.setPosition();\n        this.setPositionY();\n        if (!this.panelRef.nativeElement.style.transition) {\n            this.panelRef.nativeElement.style.transition = \"transform 0.5s ease-out\";\n        }\n    }\n    findIndexSelectedColor(colors) {\n        let resultIndex = undefined;\n        if (this.color) {\n            for (let i = 0; i < colors.length; i++) {\n                const color = colors[i];\n                if (typeof color == \"string\") {\n                    if (this.service.stringToFormat(this.color, ColorFormats.HEX) ==\n                        this.service.stringToFormat(color, ColorFormats.HEX)) {\n                        resultIndex = i;\n                    }\n                }\n                else if (color === undefined) {\n                    this.color = undefined;\n                }\n                else {\n                    if (this.findIndexSelectedColor(color.variants) != undefined) {\n                        resultIndex = i;\n                    }\n                }\n            }\n        }\n        return resultIndex;\n    }\n    iniciate(triggerInstance, triggerElementRef, color, palette, animation, format, hideTextInput, hideColorPicker, acceptLabel, cancelLabel, colorPickerControls, position) {\n        this.colorPickerControls = colorPickerControls;\n        this.triggerInstance = triggerInstance;\n        this.TriggerBBox = triggerElementRef;\n        this.color = color;\n        this.hideColorPicker = hideColorPicker;\n        this.hideTextInput = hideTextInput;\n        this.acceptLabel = acceptLabel;\n        this.cancelLabel = cancelLabel;\n        if (format) {\n            if (formats.includes(format)) {\n                this.format = formats.indexOf(format.toLowerCase());\n                this.canChangeFormat = false;\n                if (this.service.getFormatByString(this.color) != format.toLowerCase()) {\n                    this.setColor(this.service.stringToHsva(this.color));\n                }\n            }\n            else {\n                console.error(\"Format provided is invalid, using HEX\");\n                this.format = ColorFormats.HEX;\n            }\n        }\n        else {\n            this.format = formats.indexOf(this.service.getFormatByString(this.color));\n        }\n        this.previewColor = this.color;\n        this.palette = palette ?? defaultColors;\n        this.colorsAnimationEffect = animation;\n        if (position == \"top\") {\n            let TriggerBBox = this.TriggerBBox.nativeElement.getBoundingClientRect();\n            this.positionString =\n                \"transform: translateY(calc( -100% - \" + TriggerBBox.height + \"px ))\";\n        }\n    }\n    setPosition() {\n        if (this.TriggerBBox) {\n            const panelWidth = 250;\n            const viewportOffset = this.TriggerBBox.nativeElement.getBoundingClientRect();\n            this.top = viewportOffset.top + viewportOffset.height;\n            if (viewportOffset.left + panelWidth > window.innerWidth) {\n                this.left =\n                    viewportOffset.right < panelWidth\n                        ? window.innerWidth / 2 - panelWidth / 2\n                        : viewportOffset.right - panelWidth;\n            }\n            else {\n                this.left = viewportOffset.left;\n            }\n        }\n    }\n    setPositionY() {\n        const triggerBBox = this.TriggerBBox.nativeElement.getBoundingClientRect();\n        const panelBBox = this.panelRef.nativeElement.getBoundingClientRect();\n        const panelHeight = panelBBox.height;\n        // Check for space below the trigger\n        if (triggerBBox.bottom + panelHeight > window.innerHeight) {\n            // there is no space, move panel over the trigger\n            this.positionString =\n                triggerBBox.top < panelBBox.height\n                    ? \"transform: translateY(-\" + triggerBBox.bottom + \"px );\"\n                    : \"transform: translateY(calc( -100% - \" +\n                        triggerBBox.height +\n                        \"px ));\";\n        }\n        else {\n            this.positionString = \"\";\n        }\n        this.cdr.detectChanges();\n    }\n    hasVariant(color) {\n        if (!this.previewColor) {\n            return false;\n        }\n        return (typeof color != \"string\" &&\n            color.variants.some((v) => v.toUpperCase() == this.previewColor.toUpperCase()));\n    }\n    isSelected(color) {\n        if (!this.previewColor) {\n            return false;\n        }\n        return (typeof color == \"string\" &&\n            color.toUpperCase() == this.previewColor.toUpperCase());\n    }\n    getBackgroundColor(color) {\n        if (typeof color == \"string\") {\n            return { background: color };\n        }\n        else {\n            return { background: color?.preview };\n        }\n    }\n    onAlphaChange(event) {\n        this.palette = this.ChangeAlphaOnPalette(event, this.palette);\n    }\n    ChangeAlphaOnPalette(alpha, colors) {\n        var result = [];\n        for (let i = 0; i < colors.length; i++) {\n            const color = colors[i];\n            if (typeof color == \"string\") {\n                let newColor = this.service.stringToHsva(color);\n                newColor.onAlphaChange(alpha);\n                result.push(this.service.toFormat(newColor, this.format));\n            }\n            else {\n                let newColor = new NgxColor();\n                let newColorPreview = this.service.stringToHsva(color.preview);\n                newColorPreview.onAlphaChange(alpha);\n                newColor.preview = this.service.toFormat(newColorPreview, this.format);\n                newColor.variants = this.ChangeAlphaOnPalette(alpha, color.variants);\n                result.push(newColor);\n            }\n        }\n        return result;\n    }\n    /**\n     * Change color from default colors\n     * @param string color\n     */\n    changeColor(color) {\n        this.setColor(this.service.stringToHsva(color));\n        // this.triggerInstance.onChange();\n        this.emitClose(\"accept\");\n    }\n    onChangeColorPicker(event) {\n        this.temporalColor = event;\n        this.color = this.service.toFormat(event, this.format);\n        // this.setColor(event);\n        this.triggerInstance.sliderChange(this.service.toFormat(event, this.format));\n    }\n    changeColorManual(color) {\n        this.previewColor = color;\n        this.color = color;\n        this.hsva = this.service.stringToHsva(color);\n        this.temporalColor = this.hsva;\n        this.triggerInstance.setColor(this.color);\n        // this.triggerInstance.onChange();\n    }\n    setColor(value) {\n        this.hsva = value;\n        this.color = this.service.toFormat(value, this.format);\n        this.setPreviewColor(value);\n        this.triggerInstance.setColor(this.color);\n    }\n    setPreviewColor(value) {\n        this.previewColor = value\n            ? this.service.hsvaToRgba(value).toString()\n            : undefined;\n    }\n    onChange() {\n        // this.triggerInstance.onChange();\n    }\n    onColorClick(color) {\n        if (typeof color == \"string\" || color === undefined) {\n            this.changeColor(color);\n        }\n        else {\n            this.variants = color.variants;\n            this.menu = 2;\n        }\n    }\n    addColor() {\n        this.menu = 3;\n        this.backupColor = this.color;\n        // this.color = \"#FF0000\";\n        this.temporalColor = this.service.stringToHsva(this.color);\n    }\n    nextFormat() {\n        if (this.canChangeFormat) {\n            this.format = (this.format + 1) % this.colorFormats.length;\n            this.setColor(this.hsva);\n        }\n    }\n    emitClose(status) {\n        if (this.menu == 3) {\n            if (status == \"cancel\") {\n            }\n            else if (status == \"accept\") {\n                this.setColor(this.temporalColor);\n            }\n        }\n        this.triggerInstance.close();\n    }\n    onClickBack() {\n        if (this.menu == 3) {\n            this.color = this.backupColor;\n            this.hsva = this.service.stringToHsva(this.color);\n        }\n        this.indexSeleccionado = this.findIndexSelectedColor(this.palette);\n        this.menu = 1;\n    }\n    isOutside(event) {\n        return event.target.classList.contains(\"ngx-colors-overlay\");\n    }\n}\nPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: PanelComponent, deps: [{ token: ConverterService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.2\", type: PanelComponent, selector: \"ngx-colors-panel\", host: { listeners: { \"document:mousedown\": \"click($event)\", \"document:scroll\": \"onScroll()\", \"window:resize\": \"onResize()\" }, properties: { \"style.top.px\": \"this.top\", \"style.left.px\": \"this.left\" } }, viewQueries: [{ propertyName: \"panelRef\", first: true, predicate: [\"dialog\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"opened\\\" [style]=\\\"positionString\\\" #dialog>\\n  <ng-container *ngIf=\\\"menu == 1\\\">\\n    <div class=\\\"colors\\\" [@colorsAnimation]=\\\"colorsAnimationEffect\\\">\\n      <ng-container *ngFor=\\\"let color of palette; let i = index\\\">\\n        <div class=\\\"circle wrapper color\\\">\\n          <div\\n            (click)=\\\"onColorClick(color)\\\"\\n            class=\\\"circle color circle-border\\\"\\n            [class.colornull]=\\\"!color\\\"\\n            [ngStyle]=\\\"getBackgroundColor(color)\\\"\\n          >\\n            <div *ngIf=\\\"i == this.indexSeleccionado\\\" class=\\\"selected\\\"></div>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <div\\n        style=\\\"background: rgb(245 245 245); position: relative\\\"\\n        (click)=\\\"addColor()\\\"\\n        *ngIf=\\\"!hideColorPicker && this.colorPickerControls != 'only-alpha'\\\"\\n        class=\\\"circle button\\\"\\n      >\\n        <div\\n          *ngIf=\\\"!this.indexSeleccionado\\\"\\n          style=\\\"\\n            position: absolute;\\n            height: 7px;\\n            width: 7px;\\n            border: 1px solid rgba(0, 0, 0, 0.03);\\n            border-radius: 100%;\\n            top: 0;\\n            right: 0;\\n          \\\"\\n          [ngStyle]=\\\"getBackgroundColor(color)\\\"\\n        ></div>\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          height=\\\"24px\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n          width=\\\"24px\\\"\\n          fill=\\\"#222222\\\"\\n        >\\n          <path d=\\\"M24 24H0V0h24v24z\\\" fill=\\\"none\\\" opacity=\\\".87\\\" />\\n          <path d=\\\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z\\\" />\\n        </svg>\\n        <!-- <div class=\\\"add\\\">\\n          <icons icon=\\\"add\\\"></icons>\\n        </div> -->\\n      </div>\\n      <color-picker\\n        *ngIf=\\\"!hideColorPicker && this.colorPickerControls == 'only-alpha'\\\"\\n        [controls]=\\\"colorPickerControls\\\"\\n        [color]=\\\"hsva\\\"\\n        (colorChange)=\\\"onChangeColorPicker($event)\\\"\\n        (onAlphaChange)=\\\"onAlphaChange($event)\\\"\\n      ></color-picker>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"menu == 2\\\">\\n    <div class=\\\"colors\\\" [@colorsAnimation]=\\\"colorsAnimationEffect\\\">\\n      <div class=\\\"circle wrapper\\\">\\n        <div (click)=\\\"onClickBack()\\\" class=\\\"add\\\">\\n          <svg\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            width=\\\"24\\\"\\n            height=\\\"24\\\"\\n            viewBox=\\\"0 0 24 24\\\"\\n          >\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n            <path\\n              d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"\\n            />\\n          </svg>\\n        </div>\\n      </div>\\n\\n      <ng-container *ngFor=\\\"let variant of variants\\\">\\n        <div class=\\\"circle wrapper color\\\">\\n          <div\\n            [class.colornull]=\\\"!variant\\\"\\n            (click)=\\\"changeColor(variant)\\\"\\n            class=\\\"circle circle-border\\\"\\n            [ngStyle]=\\\"{ background: variant }\\\"\\n          >\\n            <div *ngIf=\\\"isSelected(variant)\\\" class=\\\"selected\\\"></div>\\n          </div>\\n        </div>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"menu == 3\\\">\\n    <div class=\\\"nav-wrapper\\\">\\n      <div\\n        (click)=\\\"onClickBack()\\\"\\n        class=\\\"round-button button\\\"\\n        style=\\\"float: left\\\"\\n      >\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          width=\\\"24\\\"\\n          height=\\\"24\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n        >\\n          <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n          <path\\n            d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"\\n          />\\n        </svg>\\n      </div>\\n      <button (click)=\\\"emitClose('cancel')\\\" style=\\\"float: right\\\">\\n        {{ cancelLabel }}\\n      </button>\\n      <button (click)=\\\"emitClose('accept')\\\" style=\\\"float: right\\\">\\n        {{ acceptLabel }}\\n      </button>\\n    </div>\\n    <div class=\\\"color-picker-wrapper\\\">\\n      <!-- <span [(colorPicker)]=\\\"color\\\"></span> -->\\n      <color-picker\\n        [controls]=\\\"colorPickerControls\\\"\\n        [color]=\\\"hsva\\\"\\n        (sliderChange)=\\\"onChangeColorPicker($event)\\\"\\n      ></color-picker>\\n    </div>\\n  </ng-container>\\n  <div class=\\\"manual-input-wrapper\\\" *ngIf=\\\"!hideTextInput\\\">\\n    <p (click)=\\\"nextFormat()\\\">{{ colorFormats[format] }}</p>\\n    <div class=\\\"g-input\\\">\\n      <input\\n        placeholder=\\\"#FFFFFF\\\"\\n        type=\\\"text\\\"\\n        [value]=\\\"color\\\"\\n        [style.font-size.px]=\\\"color && color.length > 23 ? 9 : 10\\\"\\n        [style.letter-spacing.px]=\\\"color && color.length > 16 ? 0 : 1.5\\\"\\n        (keyup)=\\\"changeColorManual(paintInput.value)\\\"\\n        (keydown.enter)=\\\"emitClose('accept')\\\"\\n        #paintInput\\n      />\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":host{position:fixed;z-index:2001}.hidden{display:none}.button{display:flex;align-items:center;justify-content:center}.top{transform:translateY(-100%)}.opened{box-sizing:border-box;box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f;background:#fff;width:250px;border-radius:5px;position:absolute}.opened button{border:none;font-family:inherit;font-size:12px;background-color:unset;-webkit-user-select:none;user-select:none;padding:10px;letter-spacing:1px;color:#222;border-radius:3px;line-height:20px}.opened button:hover,.opened .button:hover{background-color:#0000000d;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1);transition-property:opacity,background-color;transition-duration:.2s,.2s;transition-timing-function:cubic-bezier(.35,0,.25,1),cubic-bezier(.35,0,.25,1);transition-delay:0s,0s}.opened button:focus{outline:none}.opened .colors{display:flex;flex-wrap:wrap;align-items:center;margin:15px}.opened .colors .circle{height:34px;width:34px;box-sizing:border-box;border-radius:100%;cursor:pointer}.opened .colors .circle .add{font-size:20px;line-height:45px;text-align:center}.opened .colors .circle .selected{border:2px solid white;border-radius:100%;height:28px;width:28px;box-sizing:border-box;margin:2px}.opened .colors .circle.colornull{background:linear-gradient(135deg,rgba(236,236,236,.7) 0%,rgba(236,236,236,.7) 45%,#de0f00 50%,rgba(236,236,236,.7) 55%,rgba(236,236,236,.7) 100%)}.opened .colors .circle.wrapper{margin:0 5px 5px;flex:34px 0 0}.opened .colors .circle.button{margin:0 5px 5px}.opened .colors .circle.wrapper.color{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.opened .colors .circle-border{border:1px solid rgba(0,0,0,.03)}.opened .color-picker-wrapper{margin:5px 15px}.opened .nav-wrapper{overflow:hidden;margin:5px}.opened .nav-wrapper .round-button{padding:5px 0;width:40px;height:40px;box-sizing:border-box;border-radius:100%;text-align:center;line-height:45px}.opened .manual-input-wrapper{display:flex;margin:15px;font-family:sans-serif}.opened .manual-input-wrapper p{margin:0;text-align:center;font-size:10px;letter-spacing:1.5px;text-transform:uppercase;line-height:48px;width:145px;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.opened .manual-input-wrapper .g-input{border:1px solid #e8ebed;height:45px;border-radius:5px;width:100%}.opened .manual-input-wrapper .g-input input{font-size:9px;border:none;width:100%;text-transform:uppercase;outline:none;text-align:center;letter-spacing:1px;color:#595b65;height:100%;border-radius:5px;margin:0;padding:0}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: ColorPickerComponent, selector: \"color-picker\", inputs: [\"color\", \"controls\"], outputs: [\"sliderChange\", \"onAlphaChange\"] }], animations: [\n        trigger(\"colorsAnimation\", [\n            transition(\"void => slide-in\", [\n                // Initially all colors are hidden\n                query(\":enter\", style({ opacity: 0 }), { optional: true }),\n                //slide-in animation\n                query(\":enter\", stagger(\"10ms\", [\n                    animate(\".3s ease-in\", keyframes([\n                        style({ opacity: 0, transform: \"translatex(-50%)\", offset: 0 }),\n                        style({\n                            opacity: 0.5,\n                            transform: \"translatex(-10px) scale(1.1)\",\n                            offset: 0.3,\n                        }),\n                        style({ opacity: 1, transform: \"translatex(0)\", offset: 1 }),\n                    ])),\n                ]), { optional: true }),\n            ]),\n            //popup animation\n            transition(\"void => popup\", [\n                query(\":enter\", style({ opacity: 0, transform: \"scale(0)\" }), {\n                    optional: true,\n                }),\n                query(\":enter\", stagger(\"10ms\", [\n                    animate(\"500ms ease-out\", keyframes([\n                        style({ opacity: 0.5, transform: \"scale(.5)\", offset: 0.3 }),\n                        style({ opacity: 1, transform: \"scale(1.1)\", offset: 0.8 }),\n                        style({ opacity: 1, transform: \"scale(1)\", offset: 1 }),\n                    ])),\n                ]), { optional: true }),\n            ]),\n        ]),\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: PanelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"ngx-colors-panel\", animations: [\n                        trigger(\"colorsAnimation\", [\n                            transition(\"void => slide-in\", [\n                                // Initially all colors are hidden\n                                query(\":enter\", style({ opacity: 0 }), { optional: true }),\n                                //slide-in animation\n                                query(\":enter\", stagger(\"10ms\", [\n                                    animate(\".3s ease-in\", keyframes([\n                                        style({ opacity: 0, transform: \"translatex(-50%)\", offset: 0 }),\n                                        style({\n                                            opacity: 0.5,\n                                            transform: \"translatex(-10px) scale(1.1)\",\n                                            offset: 0.3,\n                                        }),\n                                        style({ opacity: 1, transform: \"translatex(0)\", offset: 1 }),\n                                    ])),\n                                ]), { optional: true }),\n                            ]),\n                            //popup animation\n                            transition(\"void => popup\", [\n                                query(\":enter\", style({ opacity: 0, transform: \"scale(0)\" }), {\n                                    optional: true,\n                                }),\n                                query(\":enter\", stagger(\"10ms\", [\n                                    animate(\"500ms ease-out\", keyframes([\n                                        style({ opacity: 0.5, transform: \"scale(.5)\", offset: 0.3 }),\n                                        style({ opacity: 1, transform: \"scale(1.1)\", offset: 0.8 }),\n                                        style({ opacity: 1, transform: \"scale(1)\", offset: 1 }),\n                                    ])),\n                                ]), { optional: true }),\n                            ]),\n                        ]),\n                    ], template: \"<div class=\\\"opened\\\" [style]=\\\"positionString\\\" #dialog>\\n  <ng-container *ngIf=\\\"menu == 1\\\">\\n    <div class=\\\"colors\\\" [@colorsAnimation]=\\\"colorsAnimationEffect\\\">\\n      <ng-container *ngFor=\\\"let color of palette; let i = index\\\">\\n        <div class=\\\"circle wrapper color\\\">\\n          <div\\n            (click)=\\\"onColorClick(color)\\\"\\n            class=\\\"circle color circle-border\\\"\\n            [class.colornull]=\\\"!color\\\"\\n            [ngStyle]=\\\"getBackgroundColor(color)\\\"\\n          >\\n            <div *ngIf=\\\"i == this.indexSeleccionado\\\" class=\\\"selected\\\"></div>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <div\\n        style=\\\"background: rgb(245 245 245); position: relative\\\"\\n        (click)=\\\"addColor()\\\"\\n        *ngIf=\\\"!hideColorPicker && this.colorPickerControls != 'only-alpha'\\\"\\n        class=\\\"circle button\\\"\\n      >\\n        <div\\n          *ngIf=\\\"!this.indexSeleccionado\\\"\\n          style=\\\"\\n            position: absolute;\\n            height: 7px;\\n            width: 7px;\\n            border: 1px solid rgba(0, 0, 0, 0.03);\\n            border-radius: 100%;\\n            top: 0;\\n            right: 0;\\n          \\\"\\n          [ngStyle]=\\\"getBackgroundColor(color)\\\"\\n        ></div>\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          height=\\\"24px\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n          width=\\\"24px\\\"\\n          fill=\\\"#222222\\\"\\n        >\\n          <path d=\\\"M24 24H0V0h24v24z\\\" fill=\\\"none\\\" opacity=\\\".87\\\" />\\n          <path d=\\\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z\\\" />\\n        </svg>\\n        <!-- <div class=\\\"add\\\">\\n          <icons icon=\\\"add\\\"></icons>\\n        </div> -->\\n      </div>\\n      <color-picker\\n        *ngIf=\\\"!hideColorPicker && this.colorPickerControls == 'only-alpha'\\\"\\n        [controls]=\\\"colorPickerControls\\\"\\n        [color]=\\\"hsva\\\"\\n        (colorChange)=\\\"onChangeColorPicker($event)\\\"\\n        (onAlphaChange)=\\\"onAlphaChange($event)\\\"\\n      ></color-picker>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"menu == 2\\\">\\n    <div class=\\\"colors\\\" [@colorsAnimation]=\\\"colorsAnimationEffect\\\">\\n      <div class=\\\"circle wrapper\\\">\\n        <div (click)=\\\"onClickBack()\\\" class=\\\"add\\\">\\n          <svg\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            width=\\\"24\\\"\\n            height=\\\"24\\\"\\n            viewBox=\\\"0 0 24 24\\\"\\n          >\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n            <path\\n              d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"\\n            />\\n          </svg>\\n        </div>\\n      </div>\\n\\n      <ng-container *ngFor=\\\"let variant of variants\\\">\\n        <div class=\\\"circle wrapper color\\\">\\n          <div\\n            [class.colornull]=\\\"!variant\\\"\\n            (click)=\\\"changeColor(variant)\\\"\\n            class=\\\"circle circle-border\\\"\\n            [ngStyle]=\\\"{ background: variant }\\\"\\n          >\\n            <div *ngIf=\\\"isSelected(variant)\\\" class=\\\"selected\\\"></div>\\n          </div>\\n        </div>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"menu == 3\\\">\\n    <div class=\\\"nav-wrapper\\\">\\n      <div\\n        (click)=\\\"onClickBack()\\\"\\n        class=\\\"round-button button\\\"\\n        style=\\\"float: left\\\"\\n      >\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          width=\\\"24\\\"\\n          height=\\\"24\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n        >\\n          <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n          <path\\n            d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"\\n          />\\n        </svg>\\n      </div>\\n      <button (click)=\\\"emitClose('cancel')\\\" style=\\\"float: right\\\">\\n        {{ cancelLabel }}\\n      </button>\\n      <button (click)=\\\"emitClose('accept')\\\" style=\\\"float: right\\\">\\n        {{ acceptLabel }}\\n      </button>\\n    </div>\\n    <div class=\\\"color-picker-wrapper\\\">\\n      <!-- <span [(colorPicker)]=\\\"color\\\"></span> -->\\n      <color-picker\\n        [controls]=\\\"colorPickerControls\\\"\\n        [color]=\\\"hsva\\\"\\n        (sliderChange)=\\\"onChangeColorPicker($event)\\\"\\n      ></color-picker>\\n    </div>\\n  </ng-container>\\n  <div class=\\\"manual-input-wrapper\\\" *ngIf=\\\"!hideTextInput\\\">\\n    <p (click)=\\\"nextFormat()\\\">{{ colorFormats[format] }}</p>\\n    <div class=\\\"g-input\\\">\\n      <input\\n        placeholder=\\\"#FFFFFF\\\"\\n        type=\\\"text\\\"\\n        [value]=\\\"color\\\"\\n        [style.font-size.px]=\\\"color && color.length > 23 ? 9 : 10\\\"\\n        [style.letter-spacing.px]=\\\"color && color.length > 16 ? 0 : 1.5\\\"\\n        (keyup)=\\\"changeColorManual(paintInput.value)\\\"\\n        (keydown.enter)=\\\"emitClose('accept')\\\"\\n        #paintInput\\n      />\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":host{position:fixed;z-index:2001}.hidden{display:none}.button{display:flex;align-items:center;justify-content:center}.top{transform:translateY(-100%)}.opened{box-sizing:border-box;box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f;background:#fff;width:250px;border-radius:5px;position:absolute}.opened button{border:none;font-family:inherit;font-size:12px;background-color:unset;-webkit-user-select:none;user-select:none;padding:10px;letter-spacing:1px;color:#222;border-radius:3px;line-height:20px}.opened button:hover,.opened .button:hover{background-color:#0000000d;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1);transition-property:opacity,background-color;transition-duration:.2s,.2s;transition-timing-function:cubic-bezier(.35,0,.25,1),cubic-bezier(.35,0,.25,1);transition-delay:0s,0s}.opened button:focus{outline:none}.opened .colors{display:flex;flex-wrap:wrap;align-items:center;margin:15px}.opened .colors .circle{height:34px;width:34px;box-sizing:border-box;border-radius:100%;cursor:pointer}.opened .colors .circle .add{font-size:20px;line-height:45px;text-align:center}.opened .colors .circle .selected{border:2px solid white;border-radius:100%;height:28px;width:28px;box-sizing:border-box;margin:2px}.opened .colors .circle.colornull{background:linear-gradient(135deg,rgba(236,236,236,.7) 0%,rgba(236,236,236,.7) 45%,#de0f00 50%,rgba(236,236,236,.7) 55%,rgba(236,236,236,.7) 100%)}.opened .colors .circle.wrapper{margin:0 5px 5px;flex:34px 0 0}.opened .colors .circle.button{margin:0 5px 5px}.opened .colors .circle.wrapper.color{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.opened .colors .circle-border{border:1px solid rgba(0,0,0,.03)}.opened .color-picker-wrapper{margin:5px 15px}.opened .nav-wrapper{overflow:hidden;margin:5px}.opened .nav-wrapper .round-button{padding:5px 0;width:40px;height:40px;box-sizing:border-box;border-radius:100%;text-align:center;line-height:45px}.opened .manual-input-wrapper{display:flex;margin:15px;font-family:sans-serif}.opened .manual-input-wrapper p{margin:0;text-align:center;font-size:10px;letter-spacing:1.5px;text-transform:uppercase;line-height:48px;width:145px;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.opened .manual-input-wrapper .g-input{border:1px solid #e8ebed;height:45px;border-radius:5px;width:100%}.opened .manual-input-wrapper .g-input input{font-size:9px;border:none;width:100%;text-transform:uppercase;outline:none;text-align:center;letter-spacing:1px;color:#595b65;height:100%;border-radius:5px;margin:0;padding:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: ConverterService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { click: [{\n                type: HostListener,\n                args: [\"document:mousedown\", [\"$event\"]]\n            }], onScroll: [{\n                type: HostListener,\n                args: [\"document:scroll\"]\n            }], onResize: [{\n                type: HostListener,\n                args: [\"window:resize\"]\n            }], top: [{\n                type: HostBinding,\n                args: [\"style.top.px\"]\n            }], left: [{\n                type: HostBinding,\n                args: [\"style.left.px\"]\n            }], panelRef: [{\n                type: ViewChild,\n                args: [\"dialog\"]\n            }] } });\n\nconst OVERLAY_STYLES = {\n    position: 'fixed',\n    height: '100%',\n    width: '100%',\n    'z-index': 2000,\n    top: 0,\n    left: 0,\n};\n\nclass PanelFactoryService {\n    constructor(resolver, applicationRef, injector) {\n        this.resolver = resolver;\n        this.applicationRef = applicationRef;\n        this.injector = injector;\n    }\n    createPanel(attachTo, overlayClassName) {\n        if (this.componentRef != undefined) {\n            this.removePanel();\n        }\n        const factory = this.resolver.resolveComponentFactory(PanelComponent);\n        this.componentRef = factory.create(this.injector);\n        this.applicationRef.attachView(this.componentRef.hostView);\n        const domElem = this.componentRef.hostView\n            .rootNodes[0];\n        this.overlay = document.createElement(\"div\");\n        this.overlay.id = \"ngx-colors-overlay\";\n        this.overlay.classList.add(\"ngx-colors-overlay\");\n        this.overlay.classList.add(overlayClassName);\n        Object.keys(OVERLAY_STYLES).forEach((attr) => {\n            this.overlay.style[attr] = OVERLAY_STYLES[attr];\n        });\n        if (attachTo) {\n            document.getElementById(attachTo).appendChild(this.overlay);\n        }\n        else {\n            document.body.appendChild(this.overlay);\n        }\n        this.overlay.appendChild(domElem);\n        return this.componentRef;\n    }\n    removePanel() {\n        this.applicationRef.detachView(this.componentRef.hostView);\n        this.componentRef.destroy();\n        this.overlay.remove();\n    }\n}\nPanelFactoryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: PanelFactoryService, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nPanelFactoryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: PanelFactoryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: PanelFactoryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }]; } });\n\nclass NgxColorsTriggerDirective {\n    onClick() {\n        this.open();\n    }\n    constructor(triggerRef, panelFactory) {\n        this.triggerRef = triggerRef;\n        this.panelFactory = panelFactory;\n        //Main input/output of the color picker\n        // @Input() color = '#000000';\n        // @Output() colorChange:EventEmitter<string> = new EventEmitter<string>();\n        this.color = \"\";\n        //This defines the type of animation for the palatte.(slide-in | popup)\n        this.colorsAnimation = \"slide-in\";\n        this.position = \"bottom\";\n        this.attachTo = undefined;\n        this.overlayClassName = undefined;\n        this.colorPickerControls = \"default\";\n        this.acceptLabel = \"ACCEPT\";\n        this.cancelLabel = \"CANCEL\";\n        // This event is trigger every time the selected color change\n        this.change = new EventEmitter();\n        // This event is trigger every time the user change the color using the panel\n        this.input = new EventEmitter();\n        // This event is trigger every time the user change the color using the panel\n        this.slider = new EventEmitter();\n        this.isDisabled = false;\n        this.onTouchedCallback = () => { };\n        this.onChangeCallback = () => { };\n    }\n    open() {\n        if (!this.isDisabled) {\n            this.panelRef = this.panelFactory.createPanel(this.attachTo, this.overlayClassName);\n            this.panelRef.instance.iniciate(this, this.triggerRef, this.color, this.palette, this.colorsAnimation, this.format, this.hideTextInput, this.hideColorPicker, this.acceptLabel, this.cancelLabel, this.colorPickerControls, this.position);\n        }\n    }\n    close() {\n        this.panelFactory.removePanel();\n        this.onTouchedCallback();\n    }\n    onChange() {\n        this.onChangeCallback(this.color);\n    }\n    setDisabledState(isDisabled) {\n        this.isDisabled = isDisabled;\n        this.triggerRef.nativeElement.style.opacity = isDisabled ? 0.5 : 1;\n    }\n    setColor(color) {\n        this.writeValue(color);\n        this.input.emit(color);\n    }\n    sliderChange(color) {\n        this.slider.emit(color);\n    }\n    get value() {\n        return this.color;\n    }\n    set value(value) {\n        this.setColor(value);\n        this.onChangeCallback(value);\n    }\n    writeValue(value) {\n        if (value !== this.color) {\n            this.color = value;\n            this.onChange();\n            this.change.emit(value);\n        }\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n}\nNgxColorsTriggerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsTriggerDirective, deps: [{ token: i0.ElementRef }, { token: PanelFactoryService }], target: i0.ɵɵFactoryTarget.Directive });\nNgxColorsTriggerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.2\", type: NgxColorsTriggerDirective, selector: \"[ngx-colors-trigger]\", inputs: { colorsAnimation: \"colorsAnimation\", palette: \"palette\", format: \"format\", position: \"position\", hideTextInput: \"hideTextInput\", hideColorPicker: \"hideColorPicker\", attachTo: \"attachTo\", overlayClassName: \"overlayClassName\", colorPickerControls: \"colorPickerControls\", acceptLabel: \"acceptLabel\", cancelLabel: \"cancelLabel\" }, outputs: { change: \"change\", input: \"input\", slider: \"slider\" }, host: { listeners: { \"click\": \"onClick()\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxColorsTriggerDirective),\n            multi: true,\n        },\n    ], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsTriggerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[ngx-colors-trigger]\",\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NgxColorsTriggerDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: PanelFactoryService }]; }, propDecorators: { colorsAnimation: [{\n                type: Input\n            }], palette: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], hideTextInput: [{\n                type: Input\n            }], hideColorPicker: [{\n                type: Input\n            }], attachTo: [{\n                type: Input\n            }], overlayClassName: [{\n                type: Input\n            }], colorPickerControls: [{\n                type: Input\n            }], acceptLabel: [{\n                type: Input\n            }], cancelLabel: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], input: [{\n                type: Output\n            }], slider: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: [\"click\"]\n            }] } });\n\nclass NgxColorsComponent {\n    constructor(cdRef, triggerDirective) {\n        this.cdRef = cdRef;\n        this.triggerDirective = triggerDirective;\n        this.triggerDirectiveColorChangeSubscription = null;\n        //IO color\n        this.color = this.triggerDirective.color;\n    }\n    ngOnInit() {\n        this.triggerDirectiveColorChangeSubscription =\n            this.triggerDirective.change.subscribe((color) => {\n                this.color = color;\n                this.cdRef.markForCheck();\n            });\n    }\n    ngOnDestroy() {\n        if (this.triggerDirectiveColorChangeSubscription) {\n            this.triggerDirectiveColorChangeSubscription.unsubscribe();\n        }\n    }\n}\nNgxColorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: NgxColorsTriggerDirective, host: true }], target: i0.ɵɵFactoryTarget.Component });\nNgxColorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.2\", type: NgxColorsComponent, selector: \"ngx-colors\", ngImport: i0, template: \"<div class=\\\"app-color-picker\\\">\\n  <div class=\\\"preview\\\">\\n    <div class=\\\"preview-background\\\">\\n      <div\\n        class=\\\"circle\\\"\\n        [class.colornull]=\\\"!color\\\"\\n        [ngStyle]=\\\"{ background: color }\\\"\\n      ></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":host .app-color-picker{line-height:1px;font-family:sans-serif}:host .app-color-picker .preview{margin:2px;display:inline-block;box-sizing:border-box;border-radius:100%;background:white;cursor:pointer;padding:3px;box-shadow:0 1px 1px #0003,0 1px 1px 1px #00000024,0 1px 1px 1px #0000001f}:host .app-color-picker .preview .preview-background{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px;border-radius:100%}:host .app-color-picker .preview .circle{height:20px;width:20px;box-sizing:border-box;border-radius:100%;cursor:pointer}:host .app-color-picker .preview .circle.colornull{background:linear-gradient(135deg,rgba(236,236,236,.7) 0%,rgba(236,236,236,.7) 45%,#de0f00 50%,rgba(236,236,236,.7) 55%,rgba(236,236,236,.7) 100%)}:host .app-color-picker .preview .noselected{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-colors', template: \"<div class=\\\"app-color-picker\\\">\\n  <div class=\\\"preview\\\">\\n    <div class=\\\"preview-background\\\">\\n      <div\\n        class=\\\"circle\\\"\\n        [class.colornull]=\\\"!color\\\"\\n        [ngStyle]=\\\"{ background: color }\\\"\\n      ></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":host .app-color-picker{line-height:1px;font-family:sans-serif}:host .app-color-picker .preview{margin:2px;display:inline-block;box-sizing:border-box;border-radius:100%;background:white;cursor:pointer;padding:3px;box-shadow:0 1px 1px #0003,0 1px 1px 1px #00000024,0 1px 1px 1px #0000001f}:host .app-color-picker .preview .preview-background{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px;border-radius:100%}:host .app-color-picker .preview .circle{height:20px;width:20px;box-sizing:border-box;border-radius:100%;cursor:pointer}:host .app-color-picker .preview .circle.colornull{background:linear-gradient(135deg,rgba(236,236,236,.7) 0%,rgba(236,236,236,.7) 45%,#de0f00 50%,rgba(236,236,236,.7) 55%,rgba(236,236,236,.7) 100%)}:host .app-color-picker .preview .noselected{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: NgxColorsTriggerDirective, decorators: [{\n                    type: Host\n                }] }]; } });\n\nclass NgxColorsModule {\n}\nNgxColorsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxColorsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsModule, declarations: [NgxColorsComponent,\n        ColorPickerComponent,\n        SliderDirective,\n        PanelComponent,\n        NgxColorsTriggerDirective], imports: [CommonModule], exports: [NgxColorsComponent, NgxColorsTriggerDirective] });\nNgxColorsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsModule, providers: [ConverterService, PanelFactoryService], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: NgxColorsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgxColorsComponent,\n                        ColorPickerComponent,\n                        SliderDirective,\n                        PanelComponent,\n                        NgxColorsTriggerDirective,\n                    ],\n                    imports: [CommonModule],\n                    providers: [ConverterService, PanelFactoryService],\n                    exports: [NgxColorsComponent, NgxColorsTriggerDirective]\n                }]\n        }] });\n\nfunction validColorValidator() {\n    return (control) => {\n        const value = control.value;\n        if (!value) {\n            return null;\n        }\n        const rgbTest = /^\\s*rgba?\\(\\s*(1?\\d{1,2}|2[0-4]\\d|25[0-5])\\s*,\\s*(1?\\d{1,2}|2[0-4]\\d|25[0-5])\\s*,\\s*(1?\\d{1,2}|2[0-4]\\d|25[0-5])\\s*(,\\s*(0\\.\\d{1,2}|1))?\\s*\\)\\s*$/i;\n        const hslTest = /^\\s*hsla?\\(\\s*([0-2]?\\d{1,2}|3[0-5]\\d|360)\\s*,\\s*(0|[1-9]{1,2}|100)\\%\\s*,\\s*(0|[1-9]{1,2}|100)\\%\\s*(,\\s*(0\\.\\d{1,2}|1))?\\s*\\)\\s*$/i;\n        const hexTest = /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n        const colorValid = rgbTest.test(value) || hslTest.test(value) || hexTest.test(value);\n        return !colorValid ? { invalidColor: true } : null;\n    };\n}\n\n/*\n * Public API Surface of ngx-colors\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxColor, NgxColorsComponent, NgxColorsModule, NgxColorsTriggerDirective, validColorValidator };\n","<div class=\"float-end\">\n  <button status=\"primary\" size=\"small\" nbButton (click)=\"open()\">{{element!.label}}数据</button>\n</div>\n<table class=\"table overflow-auto text-nowrap m-0 scrollable\" [hidden]=\"values.length < 1\">\n  <thead>\n  <tr>\n    <th scope=\"col\">#</th>\n    <th scope=\"col\" [width]=\"width\" *ngFor=\"let th of head\">{{th.name}}</th>\n    <th scope=\"col\" [width]=\"width\" *ngIf=\"element!.multiple\">操作</th>\n  </tr>\n  </thead>\n  <tbody cdkDropList [cdkDropListDisabled]=\"!element.settings?.is_sort\" (cdkDropListDropped)=\"drop($event)\">\n  <tr class=\"align-middle\"\n      [class.cursor-move]=\"element.settings?.is_sort\"\n      *ngFor=\"let value of values; let i = index\"\n      cdkDrag\n      [cdkDragDisabled]=\"!element.settings?.is_sort\"\n      [cdkDragData]=\"i\">\n    <th scope=\"row\">{{ i + 1}}</th>\n    <td *ngFor=\"let th of head\">\n      <ng-container [ngSwitch]=\"th.type\">\n        <div *ngSwitchCase=\"'image'\"><img width=\"100\" alt=\"{{th.key}}\" [src]=\"getMedia(value[th.key])\"></div>\n        <div *ngSwitchCase=\"'combine'\">\n          <button nbButton status=\"primary\" size=\"small\">子集</button>\n        </div>\n        <div *ngSwitchDefault>{{value[th.key]}}</div>\n      </ng-container>\n    </td>\n    <td *ngIf=\"element!.multiple\">\n      <div class=\"ng2-smart-actions d-flex h-100\">\n        <a href=\"javascript:\" class=\"ng2-smart-action ng2-smart-action-edit-edit\" (click)=\"edit(i)\">\n          <nb-icon icon=\"edit-outline\"></nb-icon>\n        </a>\n        <a href=\"javascript:\" class=\"ng2-smart-action ng2-smart-action-delete-delete\" (click)=\"delete(i)\">\n          <nb-icon icon=\"trash-2-outline\"></nb-icon>\n        </a>\n      </div>\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import {\n  Component, forwardRef, Input,\n  OnInit, ViewChild,\n} from \"@angular/core\";\nimport {ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {NbDialogRef, NbDialogService} from \"@nebular/theme\";\nimport {buildFormGroup, Control} from \"./type\";\nimport {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {CKFinderService} from \"../../@core/services/ckfinder.service\";\nimport {ControlContainerComponent} from \"./control-container.component\";\n\n@Component({\n  selector: \"group-control\",\n  templateUrl: \"group-control.component.html\",\n  styleUrls: [\"group-control.component.scss\"],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => GroupControlComponent),\n    multi: true\n  }]\n})\nexport class GroupControlComponent implements OnInit, ControlValueAccessor {\n\n  @Input() element!: Control;\n\n  protected onChange: Function = () => {\n  };\n  protected onTouched: Function = () => {\n  };\n\n  private dialogRef: NbDialogRef<any> | undefined;\n  values: Record<string, any>[] = [];\n  private data: Record<string, any> | Record<string, any>[] | undefined;\n\n  head: Record<string, string>[] = [];\n  width: string = \"100%\"\n  private editIndex: number = -1;\n\n\n  constructor(\n    private dialog: NbDialogService,\n    private ckfinder: CKFinderService\n  ) {\n  }\n\n\n  ngOnInit() {\n    if (this.element && this.element.children && this.element.children.length > 0) {\n      const head: Record<string, string>[] = [];\n      this.element.children.forEach(child => {\n        head.push({\n          'name': child.label,\n          'key': child.id,\n          'type': child.type,\n        });\n        if (child.attachment) {\n          if (Array.isArray(child.attachment)) {\n            child.attachment.forEach(item => {\n              this.ckfinder.addAttachmentUrl(item.id, item.url);\n            })\n          } else {\n            this.ckfinder.addAttachmentUrl(child.attachment.id, child.attachment.url);\n          }\n        }\n      });\n      this.head = head;\n      this.width = 100 / (head.length + (this.element.multiple ? 1 : 0)) + '%';\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n  writeValue(value: any): void {\n    if (this.data != value) {\n      this.data = value;\n      this.onChange(this.data);\n    }\n    if (this.element?.multiple) {\n      this.values = Array.isArray(value) ? value : (value ? [value] : []);\n    } else {\n      this.values = value ? [value] : [];\n    }\n  }\n\n  open() {\n    this.dialogRef = this.dialog.open<GroupControlDialogComponent>(GroupControlDialogComponent, {\n      dialogClass: 'container',\n      closeOnEsc: false,\n      closeOnBackdropClick: false\n    });\n    this.dialogRef.componentRef.instance.initialize(\n      this.element,\n      this.editIndex\n    );\n    this.dialogRef.onClose.subscribe((res: Record<string, any> | undefined) => {\n      if (res != undefined) {\n        this.changeValue(res);\n      }\n      this.editIndex = -1;\n    });\n  }\n\n  edit(index: number) {\n    if (!this.element?.multiple) {\n      return;\n    }\n    let defaultValue: Record<string, any> = {};\n    for (let key in this.values[index]) {\n      defaultValue[key] = this.values[index][key];\n    }\n    this.editIndex = index;\n    this.open();\n  }\n\n  delete(index: number) {\n    if (!this.element?.multiple) {\n      return;\n    }\n    if (Array.isArray(this.data)) {\n      const data = [...this.data];\n      data.splice(index, 1)\n      this.writeValue(data);\n    }\n  }\n\n  private changeValue(value: Record<string, any>) {\n    let changeValue;\n    if (this.element?.multiple) {\n      if (Array.isArray(this.data)) {\n        if (this.editIndex > -1) {\n          const data = this.data.map(item => Object.assign(item));\n          data[this.editIndex] = value;\n          changeValue = data;\n        } else {\n          changeValue = [...this.data, value];\n        }\n      } else {\n        changeValue = [value];\n      }\n    } else {\n      changeValue = value;\n    }\n    this.writeValue(changeValue);\n  }\n\n  drop($event: CdkDragDrop<any, any>) {\n    if (this.values.length > 1) {\n      moveItemInArray(this.values, $event.previousIndex, $event.currentIndex);\n      this.writeValue(this.values);\n    }\n  }\n\n  getMedia(value: number) {\n    let url: string = '';\n    this.element.children?.forEach(control => {\n      if ((control.type == 'file' || control.type == 'image' || control.type == 'video' || control.type == 'audio') && control.attachment) {\n        if (Array.isArray(control.attachment)) {\n          control.attachment.forEach(attach => {\n            if (attach.id == value) {\n              url = attach.url;\n            }\n          });\n        } else if (control.attachment.id == value) {\n          url = control.attachment.url;\n        }\n      }\n    });\n    if (!url) {\n      url = this.ckfinder.getAttachmentUrl(value);\n    } else {\n      this.ckfinder.addAttachmentUrl(value, url);\n    }\n    return url;\n  }\n}\n\n@Component({\n  selector: \"group-control-dialog\",\n  template: `\n    <div class=\"row justify-content-center scrollable\">\n      <div class=\"col col-md-6 col-xl-4\">\n        <nb-card class=\"scrollable\">\n          <nb-card-header>{{title}}</nb-card-header>\n          <nb-card-body *ngIf=\"controls.length > 0 && formGroup\">\n            <control-container [form]=\"formGroup\" [controls]=\"controls\" #containerComponent></control-container>\n          </nb-card-body>\n          <nb-card-footer class=\"d-flex justify-content-between\">\n            <button nbButton status=\"basic\" (click)=\"cancel()\">取消</button>\n            <button nbButton status=\"primary\" [disabled]=\"formGroup?.invalid\" (click)=\"save()\">保存</button>\n          </nb-card-footer>\n        </nb-card>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      nb-card {\n        max-height: 100vh;\n      }\n    `\n  ],\n})\nexport class GroupControlDialogComponent {\n  @Input() controls: Control[] = [];\n  @ViewChild('containerComponent') containerComponent!: ControlContainerComponent;\n\n  formGroup: FormGroup | undefined;\n  title: string = \"\";\n\n  constructor(private dialogRef: NbDialogRef<GroupControlDialogComponent>) {\n  }\n\n  initialize(element: Control, index: number) {\n    this.title = element.label;\n    if (element.children && element.children.length > 0) {\n      let controls: Control[] = element.children;\n      if (element.multiple) {\n        controls = [];\n        element.children.forEach((item) => {\n          let control = Object.assign({}, item);\n          if (Array.isArray(item.attachment) && item.attachment.length > 0) {\n            control.attachment = index > -1 ? item.attachment[index] || null : null;\n          }\n          control.value = index > -1 ? item.value[index] || null : null;\n          controls.push(control);\n        });\n      }\n      this.controls = controls;\n      this.formGroup = buildFormGroup(controls);\n    }\n  }\n\n\n  cancel() {\n    this.dialogRef.close(undefined);\n  }\n\n  save() {\n    if (this.formGroup?.valid) {\n      console.log(this.formGroup.value);\n      this.dialogRef.close(this.formGroup.value);\n    } else {\n      this.dialogRef.close();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  NbListModule, NbToggleModule\n} from \"@nebular/theme\";\nimport {CKEditorModule} from \"@ckeditor/ckeditor5-angular\";\nimport {ThemeModule} from \"../../@theme/theme.module\";\nimport {ControlComponent} from \"./control.component\";\nimport {NgxColorsModule} from \"ngx-colors\";\nimport {GroupControlComponent, GroupControlDialogComponent} from \"./group-control.component\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {ControlContainerComponent} from \"./control-container.component\";\n\n\n@NgModule({\n  declarations: [\n    ControlComponent,\n    GroupControlComponent,\n    ControlContainerComponent,\n    GroupControlDialogComponent\n  ],\n  exports: [\n    ControlComponent,\n    GroupControlComponent,\n    ControlContainerComponent\n  ],\n  imports: [\n    CommonModule,\n    ThemeModule,\n    CKEditorModule,\n    NbListModule,\n    NgxColorsModule,\n    NbToggleModule,\n    DragDropModule,\n  ]\n})\nexport class ControlModule {\n}\n","import {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Attachment} from \"../../@core/definition/content/type\";\n\nexport type ControlType = 'date' | 'input' | 'textarea' | 'file' | 'image' | 'video' | 'audio' | 'select' | 'checkbox' | 'radio' | 'datetime' | 'range_date' | 'autocomplete' | 'editor' | 'color' | 'combine' | 'switch' | 'custom';\n\nexport type InputType = 'text' | 'number' | 'email' | 'color' | 'password' | 'file' | 'url';\n\nexport type ControlOption = { label: string, value: string | number};\n\nexport type ControlValidator = { key: 'required' | 'min' | 'max' | 'pattern' | 'email', value: string | number };\n\nexport const buildFormGroup = function (controls: Control[], valueMap?: Record<string, any>) {\n  const group: any = {};\n  controls.forEach(element => {\n    let value = (valueMap && valueMap.hasOwnProperty(element.id))\n      ? valueMap[element.id]\n      : (element.multiple ? (element.value || []) : element.value);\n    const validators = [];\n    if (element.required) {\n      validators.push(Validators.required)\n    }\n    if (element.validators && element.validators.length > 0) {\n      element.validators.forEach(validator => {\n        switch (validator.key) {\n          case \"min\":\n            validators.push(Validators.min(+validator.value))\n            break;\n          case \"max\":\n            validators.push(Validators.max(+validator.value))\n            break;\n          case \"pattern\":\n            validators.push(Validators.pattern(validator.value.toString()))\n            break;\n          case \"email\":\n            validators.push(Validators.email)\n            break;\n        }\n      })\n    }\n    group[element.id] = new FormControl(value, validators);\n  });\n  return new FormGroup(group);\n};\n\nexport type Control = {\n  id: string;\n  label: string;\n  type: ControlType;\n  placeholder?: string;\n  inputType?: InputType;\n  value?: any;\n  description?: string;\n  required?: boolean;\n  multiple?: boolean;\n  options?: ControlOption[];\n  validators?: ControlValidator[];\n  disabled?: boolean,\n  hidden?: boolean,\n  format?: string,\n  template?: string;\n  settings?: Record<string, any>;\n  children?: Control[];\n  depends?: string[],\n  resources?: string[],\n  attachment?: Attachment[] | any,\n  callback?: {\n    create?: (control: AbstractControl, element: Control) => void,\n    edit?: (control: AbstractControl, element: Control) => void,\n  }\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }]; }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }]; }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\n\nexport default function getSubNodes( head, excludedProperties = new Set() ) {\n\tconst nodes = [ head ];\n\n\t// @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n\n\t// Nodes are stored to prevent infinite looping.\n\tconst subNodes = new Set();\n\tlet nodeIndex = 0;\n\n\twhile ( nodes.length > nodeIndex ) {\n\t\t// Incrementing the iterator is much faster than changing size of the array with Array.prototype.shift().\n\t\tconst node = nodes[ nodeIndex++ ];\n\n\t\tif ( subNodes.has( node ) || shouldNodeBeSkipped( node ) || excludedProperties.has( node ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsubNodes.add( node );\n\n\t\t// Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\t\tif ( node[ Symbol.iterator ] ) {\n\t\t\t// The custom editor iterators might cause some problems if the editor is crashed.\n\t\t\ttry {\n\t\t\t\tfor ( const n of node ) {\n\t\t\t\t\tnodes.push( n );\n\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t\t}\n\t\t\t} catch ( err ) {\n\t\t\t\t// Do not log errors for broken structures\n\t\t\t\t// since we are in the error handling process already.\n\t\t\t\t// eslint-disable-line no-empty\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( const key in node ) {\n\t\t\t\t// We share a reference via the protobuf library within the editors,\n\t\t\t\t// hence the shared value should be skipped. Although, it's not a perfect\n\t\t\t\t// solution since new places like that might occur in the future.\n\t\t\t\tif ( key === 'defaultValue' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnodes.push( node[ key ] );\n\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t}\n\t\t}\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n\treturn subNodes;\n}\n\nfunction shouldNodeBeSkipped( node ) {\n\tconst type = Object.prototype.toString.call( node );\n\tconst typeOfNode = typeof node;\n\n\treturn (\n\t\ttypeOfNode === 'number' ||\n\t\ttypeOfNode === 'boolean' ||\n\t\ttypeOfNode === 'string' ||\n\t\ttypeOfNode === 'symbol' ||\n\t\ttypeOfNode === 'function' ||\n\t\ttype === '[object Date]' ||\n\t\ttype === '[object RegExp]' ||\n\t\ttype === '[object Module]' ||\n\n\t\tnode === undefined ||\n\t\tnode === null ||\n\n\t\t// Skip native DOM objects, e.g. Window, nodes, events, etc.\n\t\tnode instanceof EventTarget ||\n\t\tnode instanceof Event\n\t);\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/watchdog\n */\n\n/* globals window */\n\n/**\n * An abstract watchdog class that handles most of the error handling process and the state of the underlying component.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and how to use it.\n *\n * @private\n * @abstract\n */\nexport default class Watchdog {\n\t/**\n\t * @param {module:watchdog/watchdog~WatchdogConfig} config The watchdog plugin configuration.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * An array of crashes saved as an object with the following properties:\n\t\t *\n\t\t * * `message`: `String`,\n\t\t * * `stack`: `String`,\n\t\t * * `date`: `Number`,\n\t\t * * `filename`: `String | undefined`,\n\t\t * * `lineno`: `Number | undefined`,\n\t\t * * `colno`: `Number | undefined`,\n\t\t *\n\t\t * @public\n\t\t * @readonly\n\t\t * @type {Array.<Object>}\n\t\t */\n\t\tthis.crashes = [];\n\n\t\t/**\n\t\t * Specifies the state of the item watched by the watchdog. The state can be one of the following values:\n\t\t *\n\t\t * * `initializing` &ndash; Before the first initialization, and after crashes, before the item is ready.\n\t\t * * `ready` &ndash; A state when the user can interact with the item.\n\t\t * * `crashed` &ndash; A state when an error occurs. It quickly changes to `initializing` or `crashedPermanently`\n\t\t * depending on how many and how frequent errors have been caught recently.\n\t\t * * `crashedPermanently` &ndash; A state when the watchdog stops reacting to errors and keeps the item it is watching crashed,\n\t\t * * `destroyed` &ndash; A state when the item is manually destroyed by the user after calling `watchdog.destroy()`.\n\t\t *\n\t\t * @public\n\t\t * @type {'initializing'|'ready'|'crashed'|'crashedPermanently'|'destroyed'}\n\t\t */\n\t\tthis.state = 'initializing';\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @see module:watchdog/watchdog~WatchdogConfig\n\t\t */\n\t\tthis._crashNumberLimit = typeof config.crashNumberLimit === 'number' ? config.crashNumberLimit : 3;\n\n\t\t/**\n\t\t * Returns the result of the `Date.now()` call. It can be overridden in tests to mock time as some popular\n\t\t * approaches like `sinon.useFakeTimers()` do not work well with error handling.\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tthis._now = Date.now;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @see module:watchdog/watchdog~WatchdogConfig\n\t\t */\n\t\tthis._minimumNonErrorTimePeriod = typeof config.minimumNonErrorTimePeriod === 'number' ? config.minimumNonErrorTimePeriod : 5000;\n\n\t\t/**\n\t\t * Checks if the event error comes from the underlying item and restarts the item.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._boundErrorHandler = evt => {\n\t\t\t// `evt.error` is exposed by EventError while `evt.reason` is available in PromiseRejectionEvent.\n\t\t\tconst error = evt.error || evt.reason;\n\n\t\t\t// Note that `evt.reason` might be everything that is in the promise rejection.\n\t\t\t// Similarly everything that is thrown lands in `evt.error`.\n\t\t\tif ( error instanceof Error ) {\n\t\t\t\tthis._handleError( error, evt );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The creation method.\n\t\t *\n\t\t * @protected\n\t\t * @member {Function} #_creator\n\t\t * @see #setCreator\n\t\t */\n\n\t\t/**\n\t\t * The destruction method.\n\t\t *\n\t\t * @protected\n\t\t * @member {Function} #_destructor\n\t\t * @see #setDestructor\n\t\t */\n\n\t\t/**\n\t\t * The watched item.\n\t\t *\n\t\t * @abstract\n\t\t * @protected\n\t\t * @member {Object|undefined} #_item\n\t\t */\n\n\t\t/**\n\t\t * The method responsible for restarting the watched item.\n\t\t *\n\t\t * @abstract\n\t\t * @protected\n\t\t * @method #_restart\n\t\t */\n\n\t\t/**\n\t\t * Traverses the error context and the watched item to find out whether the error should\n\t\t * be handled by the given item.\n\t\t *\n\t\t * @abstract\n\t\t * @protected\n\t\t * @method #_isErrorComingFromThisItem\n\t\t * @param {module:utils/ckeditorerror~CKEditorError} error\n\t\t */\n\n\t\t/**\n\t\t * A dictionary of event emitter listeners.\n\t\t *\n\t\t * @private\n\t\t * @type {Object.<String,Array.<Function>>}\n\t\t */\n\t\tthis._listeners = {};\n\n\t\tif ( !this._restart ) {\n\t\t\tthrow new Error(\n\t\t\t\t'The Watchdog class was split into the abstract `Watchdog` class and the `EditorWatchdog` class. ' +\n\t\t\t\t'Please, use `EditorWatchdog` if you have used the `Watchdog` class previously.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the function that is responsible for creating watched items.\n\t *\n\t * @param {Function} creator A callback responsible for creating an item. Returns a promise\n\t * that is resolved when the item is created.\n\t */\n\tsetCreator( creator ) {\n\t\tthis._creator = creator;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for destroying watched items.\n\t *\n\t * @param {Function} destructor A callback that takes the item and returns the promise\n\t * to the destroying process.\n\t */\n\tsetDestructor( destructor ) {\n\t\tthis._destructor = destructor;\n\t}\n\n\t/**\n\t * Destroys the watchdog and releases the resources.\n\t */\n\tdestroy() {\n\t\tthis._stopErrorHandling();\n\n\t\tthis._listeners = {};\n\t}\n\n\t/**\n\t * Starts listening to a specific event name by registering a callback that will be executed\n\t * whenever an event with a given name fires.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param {String} eventName The event name.\n\t * @param {Function} callback A callback which will be added to event listeners.\n\t */\n\ton( eventName, callback ) {\n\t\tif ( !this._listeners[ eventName ] ) {\n\t\t\tthis._listeners[ eventName ] = [];\n\t\t}\n\n\t\tthis._listeners[ eventName ].push( callback );\n\t}\n\n\t/**\n\t * Stops listening to the specified event name by removing the callback from event listeners.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param {String} eventName The event name.\n\t * @param {Function} callback A callback which will be removed from event listeners.\n\t */\n\toff( eventName, callback ) {\n\t\tthis._listeners[ eventName ] = this._listeners[ eventName ]\n\t\t\t.filter( cb => cb !== callback );\n\t}\n\n\t/**\n\t * Fires an event with a given event name and arguments.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @protected\n\t * @param {String} eventName The event name.\n\t * @param  {...*} args Event arguments.\n\t */\n\t_fire( eventName, ...args ) {\n\t\tconst callbacks = this._listeners[ eventName ] || [];\n\n\t\tfor ( const callback of callbacks ) {\n\t\t\tcallback.apply( this, [ null, ...args ] );\n\t\t}\n\t}\n\n\t/**\n\t * Starts error handling by attaching global error handlers.\n\t *\n\t * @protected\n\t */\n\t_startErrorHandling() {\n\t\twindow.addEventListener( 'error', this._boundErrorHandler );\n\t\twindow.addEventListener( 'unhandledrejection', this._boundErrorHandler );\n\t}\n\n\t/**\n\t * Stops error handling by detaching global error handlers.\n\t *\n\t * @protected\n\t */\n\t_stopErrorHandling() {\n\t\twindow.removeEventListener( 'error', this._boundErrorHandler );\n\t\twindow.removeEventListener( 'unhandledrejection', this._boundErrorHandler );\n\t}\n\n\t/**\n\t * Checks if an error comes from the watched item and restarts it.\n\t * It reacts to {@link module:utils/ckeditorerror~CKEditorError `CKEditorError` errors} only.\n\t *\n\t * @private\n\t * @fires error\n\t * @param {Error} error Error.\n\t * @param {ErrorEvent|PromiseRejectionEvent} evt An error event.\n\t */\n\t_handleError( error, evt ) {\n\t\t// @if CK_DEBUG // if ( error.is && error.is( 'CKEditorError' ) && error.context === undefined ) {\n\t\t// @if CK_DEBUG // console.warn( 'The error is missing its context and Watchdog cannot restart the proper item.' );\n\t\t// @if CK_DEBUG // }\n\n\t\tif ( this._shouldReactToError( error ) ) {\n\t\t\tthis.crashes.push( {\n\t\t\t\tmessage: error.message,\n\t\t\t\tstack: error.stack,\n\n\t\t\t\t// `evt.filename`, `evt.lineno` and `evt.colno` are available only in ErrorEvent events\n\t\t\t\tfilename: evt.filename,\n\t\t\t\tlineno: evt.lineno,\n\t\t\t\tcolno: evt.colno,\n\t\t\t\tdate: this._now()\n\t\t\t} );\n\n\t\t\tconst causesRestart = this._shouldRestart();\n\n\t\t\tthis.state = 'crashed';\n\t\t\tthis._fire( 'stateChange' );\n\t\t\tthis._fire( 'error', { error, causesRestart } );\n\n\t\t\tif ( causesRestart ) {\n\t\t\t\tthis._restart();\n\t\t\t} else {\n\t\t\t\tthis.state = 'crashedPermanently';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether an error should be handled by the watchdog.\n\t *\n\t * @private\n\t * @param {Error} error An error that was caught by the error handling process.\n\t */\n\t_shouldReactToError( error ) {\n\t\treturn (\n\t\t\terror.is &&\n\t\t\terror.is( 'CKEditorError' ) &&\n\t\t\terror.context !== undefined &&\n\n\t\t\t// In some cases the watched item should not be restarted - e.g. during the item initialization.\n\t\t\t// That's why the `null` was introduced as a correct error context which does cause restarting.\n\t\t\terror.context !== null &&\n\n\t\t\t// Do not react to errors if the watchdog is in states other than `ready`.\n\t\t\tthis.state === 'ready' &&\n\n\t\t\tthis._isErrorComingFromThisItem( error )\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the watchdog should restart the underlying item.\n\t *\n\t * @private\n\t */\n\t_shouldRestart() {\n\t\tif ( this.crashes.length <= this._crashNumberLimit ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst lastErrorTime = this.crashes[ this.crashes.length - 1 ].date;\n\t\tconst firstMeaningfulErrorTime = this.crashes[ this.crashes.length - 1 - this._crashNumberLimit ].date;\n\n\t\tconst averageNonErrorTimePeriod = ( lastErrorTime - firstMeaningfulErrorTime ) / this._crashNumberLimit;\n\n\t\treturn averageNonErrorTimePeriod > this._minimumNonErrorTimePeriod;\n\t}\n\n\t/**\n\t * Fired when a new {@link module:utils/ckeditorerror~CKEditorError `CKEditorError`} error connected to the watchdog instance occurs\n\t * and the watchdog will react to it.\n\t *\n\t * \twatchdog.on( 'error', ( evt, { error, causesRestart } ) => {\n\t * \t\tconsole.log( 'An error occurred.' );\n\t * \t} );\n\t *\n\t * @event error\n\t */\n}\n\n/**\n * The watchdog plugin configuration.\n *\n * @typedef {Object} WatchdogConfig\n *\n * @property {Number} [crashNumberLimit=3] A threshold specifying the number of watched item crashes\n * when the watchdog stops restarting the item in case of errors.\n * After this limit is reached and the time between the last errors is shorter than `minimumNonErrorTimePeriod`,\n * the watchdog changes its state to `crashedPermanently` and it stops restarting the item. This prevents an infinite restart loop.\n *\n * @property {Number} [minimumNonErrorTimePeriod=5000] An average number of milliseconds between the last watched item errors\n * (defaults to 5000). When the period of time between errors is lower than that and the `crashNumberLimit` is also reached,\n * the watchdog changes its state to `crashedPermanently` and it stops restarting the item. This prevents an infinite restart loop.\n *\n * @property {Number} [saveInterval=5000] A minimum number of milliseconds between saving the editor data internally (defaults to 5000).\n * Note that for large documents this might impact the editor performance.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\n/* globals console */\n\nimport { throttle, cloneDeepWith, isElement } from 'lodash-es';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport Watchdog from './watchdog';\n\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\nexport default class EditorWatchdog extends Watchdog {\n\t/**\n\t * @param {*} Editor The editor class.\n\t * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog plugin configuration.\n\t */\n\tconstructor( Editor, watchdogConfig = {} ) {\n\t\tsuper( watchdogConfig );\n\n\t\t/**\n\t\t * The current editor instance.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis._editor = null;\n\n\t\t/**\n\t\t * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n\t\t * unless a new action happens in the meantime.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._throttledSave = throttle(\n\t\t\tthis._save.bind( this ),\n\t\t\ttypeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000\n\t\t);\n\n\t\t/**\n\t\t * The latest saved editor data represented as a root name -> root data object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>} #_data\n\t\t */\n\n\t\t/**\n\t\t * The last document version.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_lastDocumentVersion\n\t\t */\n\n\t\t/**\n\t\t * The editor source element or data.\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement|String|Object.<String|String>} #_elementOrData\n\t\t */\n\n\t\t/**\n\t\t * The editor configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object|undefined} #_config\n\t\t */\n\n\t\t// Set default creator and destructor functions:\n\t\tthis._creator = ( ( elementOrData, config ) => Editor.create( elementOrData, config ) );\n\t\tthis._destructor = editor => editor.destroy();\n\t}\n\n\t/**\n\t * The current editor instance.\n\t *\n\t * @readonly\n\t * @type {module:core/editor/editor~Editor}\n\t */\n\tget editor() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _item() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the editor creation.\n\t * It expects a function that should return a promise.\n\t *\n\t *\t\twatchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n\t *\n\t * @method #setCreator\n\t * @param {Function} creator\n\t */\n\n\t/**\n\t * Sets the function that is responsible for the editor destruction.\n\t * Overrides the default destruction function, which destroys only the editor instance.\n\t * It expects a function that should return a promise or `undefined`.\n\t *\n\t *\t\twatchdog.setDestructor( editor => {\n\t *\t\t\t// Do something before the editor is destroyed.\n\t *\n\t *\t\t\treturn editor\n\t *\t\t\t\t.destroy()\n\t *\t\t\t\t.then( () => {\n\t *\t\t\t\t\t// Do something after the editor is destroyed.\n\t *\t\t\t\t} );\n\t *\t\t} );\n\t *\n\t * @method #setDestructor\n\t * @param {Function} destructor\n\t */\n\n\t/**\n\t * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n\t * the state to `initializing`.\n\t *\n\t * @protected\n\t * @fires restart\n\t * @returns {Promise}\n\t */\n\t_restart() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'initializing';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\treturn this._destroy();\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tconsole.error( 'An error happened during the editor destroying.', err );\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tif ( typeof this._elementOrData === 'string' ) {\n\t\t\t\t\treturn this.create( this._data, this._config, this._config.context );\n\t\t\t\t} else {\n\t\t\t\t\tconst updatedConfig = Object.assign( {}, this._config, {\n\t\t\t\t\t\tinitialData: this._data\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn this.create( this._elementOrData, updatedConfig, updatedConfig.context );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tthis._fire( 'restart' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates the editor instance and keeps it running, using the defined creator and destructor.\n\t *\n\t * @param {HTMLElement|String|Object.<String|String>} [elementOrData] The editor source element or the editor data.\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @param {Object} [context] A context for the editor.\n\t *\n\t * @returns {Promise}\n\t */\n\tcreate( elementOrData = this._elementOrData, config = this._config, context ) {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tsuper._startErrorHandling();\n\n\t\t\t\tthis._elementOrData = elementOrData;\n\n\t\t\t\t// Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n\t\t\t\t// when an error occurs in one of these editors, the watchdog will restart all of them.\n\t\t\t\tthis._config = this._cloneEditorConfiguration( config ) || {};\n\n\t\t\t\tthis._config.context = context;\n\n\t\t\t\treturn this._creator( elementOrData, this._config );\n\t\t\t} )\n\t\t\t.then( editor => {\n\t\t\t\tthis._editor = editor;\n\n\t\t\t\teditor.model.document.on( 'change:data', this._throttledSave );\n\n\t\t\t\tthis._lastDocumentVersion = editor.model.document.version;\n\t\t\t\tthis._data = this._getData();\n\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the watchdog and the current editor instance. It fires the callback\n\t * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n\t * It also sets the state to `destroyed`.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'destroyed';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\tsuper.destroy();\n\n\t\t\t\treturn this._destroy();\n\t\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @returns {Promise}\n\t */\n\t_destroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\t// Save data if there is a remaining editor data change.\n\t\t\t\tthis._throttledSave.flush();\n\n\t\t\t\tconst editor = this._editor;\n\n\t\t\t\tthis._editor = null;\n\n\t\t\t\t// Remove the `change:data` listener before destroying the editor.\n\t\t\t\t// Incorrectly written plugins may trigger firing `change:data` events during the editor destruction phase\n\t\t\t\t// causing the watchdog to call `editor.getData()` when some parts of editor are already destroyed.\n\t\t\t\teditor.model.document.off( 'change:data', this._throttledSave );\n\n\t\t\t\treturn this._destructor( editor );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n\t * the moment of the crash.\n\t *\n\t * @private\n\t */\n\t_save() {\n\t\tconst version = this._editor.model.document.version;\n\n\t\t// Operation may not result in a model change, so the document's version can be the same.\n\t\tif ( version === this._lastDocumentVersion ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis._data = this._getData();\n\t\t\tthis._lastDocumentVersion = version;\n\t\t} catch ( err ) {\n\t\t\tconsole.error(\n\t\t\t\terr,\n\t\t\t\t'An error happened during restoring editor data. ' +\n\t\t\t\t'Editor will be restored from the previously saved data.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Set} props\n\t */\n\t_setExcludedProperties( props ) {\n\t\tthis._excludedProps = props;\n\t}\n\n\t/**\n\t * Returns the editor data.\n\t *\n\t * @private\n\t * @returns {Object<String,String>}\n\t */\n\t_getData() {\n\t\tconst data = {};\n\n\t\tfor ( const rootName of this._editor.model.document.getRootNames() ) {\n\t\t\tdata[ rootName ] = this._editor.data.get( { rootName } );\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Traverses the error context and the current editor to find out whether these structures are connected\n\t * to each other via properties.\n\t *\n\t * @protected\n\t * @param {module:utils/ckeditorerror~CKEditorError} error\n\t */\n\t_isErrorComingFromThisItem( error ) {\n\t\treturn areConnectedThroughProperties( this._editor, error.context, this._excludedProps );\n\t}\n\n\t/**\n\t * Clones the editor configuration.\n\t *\n\t * @private\n\t * @param {Object} config\n\t */\n\t_cloneEditorConfiguration( config ) {\n\t\treturn cloneDeepWith( config, ( value, key ) => {\n\t\t\t// Leave DOM references.\n\t\t\tif ( isElement( value ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( key === 'context' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Fired after the watchdog restarts the error in case of a crash.\n\t *\n\t * @event restart\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\n\nimport getSubNodes from './getsubnodes';\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @param {Object|Array} target1\n * @param {Object|Array} target2\n * @returns {Boolean}\n */\nexport default function areConnectedThroughProperties( target1, target2, excludedNodes = new Set() ) {\n\tif ( target1 === target2 && isObject( target1 ) ) {\n\t\treturn true;\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\tconst subNodes1 = getSubNodes( target1, excludedNodes );\n\tconst subNodes2 = getSubNodes( target2, excludedNodes );\n\n\tfor ( const node of subNodes1 ) {\n\t\tif ( subNodes2.has( node ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/* istanbul ignore next */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps( target1, target2, excludedNodes ) {\n\tconst { subNodes: subNodes1, prevNodeMap: prevNodeMap1 } = getSubNodes( target1, excludedNodes.subNodes );\n\tconst { subNodes: subNodes2, prevNodeMap: prevNodeMap2 } = getSubNodes( target2, excludedNodes.subNodes );\n\n\tfor ( const sharedNode of subNodes1 ) {\n\t\tif ( subNodes2.has( sharedNode ) ) {\n\t\t\tconst connection = [];\n\n\t\t\tconnection.push( sharedNode );\n\n\t\t\tlet node = prevNodeMap1.get( sharedNode );\n\n\t\t\twhile ( node && node !== target1 ) {\n\t\t\t\tconnection.push( node );\n\t\t\t\tnode = prevNodeMap1.get( node );\n\t\t\t}\n\n\t\t\tnode = prevNodeMap2.get( sharedNode );\n\n\t\t\twhile ( node && node !== target2 ) {\n\t\t\t\tconnection.unshift( node );\n\t\t\t\tnode = prevNodeMap2.get( node );\n\t\t\t}\n\n\t\t\tconsole.log( '--------' );\n\t\t\tconsole.log( { target1 } );\n\t\t\tconsole.log( { sharedNode } );\n\t\t\tconsole.log( { target2 } );\n\t\t\tconsole.log( { connection } );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction isObject( structure ) {\n\treturn typeof structure === 'object' && structure !== null;\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport EditorWatchdog from '@ckeditor/ckeditor5-watchdog/src/editorwatchdog';\nimport { first } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\n\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n// A copy of @ckeditor/ckeditor5-utils/src/uid.js\r\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\r\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\r\nconst HEX_NUMBERS = new Array(256).fill(0)\r\n    .map((val, index) => ('0' + (index).toString(16)).slice(-2));\r\n/**\r\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\r\n * 32 alphanumeric characters.\r\n *\r\n * **Note**: The characters the unique id is built from correspond to the hex number notation\r\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\r\n * by 16 8-bit numbers next to each other.\r\n *\r\n * @returns An unique id string.\r\n */\r\nfunction uid() {\r\n    // Let's create some positive random 32bit integers first.\r\n    //\r\n    // 1. Math.random() is a float between 0 and 1.\r\n    // 2. 0x100000000 is 2^32 = 4294967296.\r\n    // 3. >>> 0 enforces integer (in JS all numbers are floating point).\r\n    //\r\n    // For instance:\r\n    //\t\tMath.random() * 0x100000000 = 3366450031.853859\r\n    // but\r\n    //\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\r\n    const r1 = Math.random() * 0x100000000 >>> 0;\r\n    const r2 = Math.random() * 0x100000000 >>> 0;\r\n    const r3 = Math.random() * 0x100000000 >>> 0;\r\n    const r4 = Math.random() * 0x100000000 >>> 0;\r\n    // Make sure that id does not start with number.\r\n    return 'e' +\r\n        HEX_NUMBERS[r1 >> 0 & 0xFF] +\r\n        HEX_NUMBERS[r1 >> 8 & 0xFF] +\r\n        HEX_NUMBERS[r1 >> 16 & 0xFF] +\r\n        HEX_NUMBERS[r1 >> 24 & 0xFF] +\r\n        HEX_NUMBERS[r2 >> 0 & 0xFF] +\r\n        HEX_NUMBERS[r2 >> 8 & 0xFF] +\r\n        HEX_NUMBERS[r2 >> 16 & 0xFF] +\r\n        HEX_NUMBERS[r2 >> 24 & 0xFF] +\r\n        HEX_NUMBERS[r3 >> 0 & 0xFF] +\r\n        HEX_NUMBERS[r3 >> 8 & 0xFF] +\r\n        HEX_NUMBERS[r3 >> 16 & 0xFF] +\r\n        HEX_NUMBERS[r3 >> 24 & 0xFF] +\r\n        HEX_NUMBERS[r4 >> 0 & 0xFF] +\r\n        HEX_NUMBERS[r4 >> 8 & 0xFF] +\r\n        HEX_NUMBERS[r4 >> 16 & 0xFF] +\r\n        HEX_NUMBERS[r4 >> 24 & 0xFF];\r\n}\n\nconst ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from Angular integration (@ckeditor/ckeditor5-angular)';\r\nclass CKEditorComponent {\r\n    constructor(elementRef, ngZone) {\r\n        /**\r\n         * The configuration of the editor.\r\n         * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\r\n         * to learn more.\r\n         */\r\n        this.config = {};\r\n        /**\r\n         * The initial data of the editor. Useful when not using the ngModel.\r\n         * See https://angular.io/api/forms/NgModel to learn more.\r\n         */\r\n        this.data = '';\r\n        /**\r\n         * Tag name of the editor component.\r\n         *\r\n         * The default tag is 'div'.\r\n         */\r\n        this.tagName = 'div';\r\n        /**\r\n         * Allows disabling the two-way data binding mechanism. Disabling it can boost performance for large documents.\r\n         *\r\n         * When a component is connected using the [(ngModel)] or [formControl] directives and this value is set to true then none of the data\r\n         * will ever be synchronized.\r\n         *\r\n         * An integrator must call `editor.getData()` manually once the application needs the editor's data.\r\n         * An editor instance can be received in the `ready()` callback.\r\n         */\r\n        this.disableTwoWayDataBinding = false;\r\n        /**\r\n         * Fires when the editor is ready. It corresponds with the `editor#ready`\r\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\r\n         * event.\r\n         */\r\n        this.ready = new EventEmitter();\r\n        /**\r\n         * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\r\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\r\n         * event.\r\n         */\r\n        this.change = new EventEmitter();\r\n        /**\r\n         * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\r\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\r\n         * event.\r\n         */\r\n        this.blur = new EventEmitter();\r\n        /**\r\n         * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\r\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\r\n         * event.\r\n         */\r\n        this.focus = new EventEmitter();\r\n        /**\r\n         * Fires when the editor component crashes.\r\n         */\r\n        this.error = new EventEmitter();\r\n        /**\r\n         * If the component is read–only before the editor instance is created, it remembers that state,\r\n         * so the editor can become read–only once it is ready.\r\n         */\r\n        this.initiallyDisabled = false;\r\n        /**\r\n         * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\r\n         */\r\n        this.isEditorSettingData = false;\r\n        this.id = uid();\r\n        this.ngZone = ngZone;\r\n        this.elementRef = elementRef;\r\n        // To avoid issues with the community typings and CKEditor 5, let's treat window as any. See #342.\r\n        const { CKEDITOR_VERSION } = window;\r\n        // Starting from v34.0.0, CKEditor 5 introduces a lock mechanism enabling/disabling the read-only mode.\r\n        // As it is a breaking change between major releases of the integration, the component requires using\r\n        // CKEditor 5 in version 34 or higher.\r\n        if (CKEDITOR_VERSION) {\r\n            const [major] = CKEDITOR_VERSION.split('.').map(Number);\r\n            if (major < 34) {\r\n                console.warn('The <CKEditor> component requires using CKEditor 5 in version 34 or higher.');\r\n            }\r\n        }\r\n        else {\r\n            console.warn('Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.');\r\n        }\r\n    }\r\n    /**\r\n     * When set `true`, the editor becomes read-only.\r\n     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\r\n     * to learn more.\r\n     */\r\n    set disabled(isDisabled) {\r\n        this.setDisabledState(isDisabled);\r\n    }\r\n    get disabled() {\r\n        if (this.editorInstance) {\r\n            return this.editorInstance.isReadOnly;\r\n        }\r\n        return this.initiallyDisabled;\r\n    }\r\n    /**\r\n     * The instance of the editor created by this component.\r\n     */\r\n    get editorInstance() {\r\n        let editorWatchdog = this.editorWatchdog;\r\n        if (this.watchdog) {\r\n            // Temporarily use the `_watchdogs` internal map as the `getItem()` method throws\r\n            // an error when the item is not registered yet.\r\n            // See https://github.com/ckeditor/ckeditor5-angular/issues/177.\r\n            editorWatchdog = this.watchdog._watchdogs.get(this.id);\r\n        }\r\n        if (editorWatchdog) {\r\n            return editorWatchdog.editor;\r\n        }\r\n        return null;\r\n    }\r\n    // Implementing the OnChanges interface. Whenever the `data` property is changed, update the editor content.\r\n    ngOnChanges(changes) {\r\n        if (Object.prototype.hasOwnProperty.call(changes, 'data') && changes.data && !changes.data.isFirstChange()) {\r\n            this.writeValue(changes.data.currentValue);\r\n        }\r\n    }\r\n    // Implementing the AfterViewInit interface.\r\n    ngAfterViewInit() {\r\n        this.attachToWatchdog();\r\n    }\r\n    // Implementing the OnDestroy interface.\r\n    async ngOnDestroy() {\r\n        if (this.watchdog) {\r\n            await this.watchdog.remove(this.id);\r\n        }\r\n        else if (this.editorWatchdog && this.editorWatchdog.editor) {\r\n            await this.editorWatchdog.destroy();\r\n            this.editorWatchdog = undefined;\r\n        }\r\n    }\r\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n    writeValue(value) {\r\n        // This method is called with the `null` value when the form resets.\r\n        // A component's responsibility is to restore to the initial state.\r\n        if (value === null) {\r\n            value = '';\r\n        }\r\n        // If already initialized.\r\n        if (this.editorInstance) {\r\n            // The lock mechanism prevents from calling `cvaOnChange()` during changing\r\n            // the editor state. See #139\r\n            this.isEditorSettingData = true;\r\n            this.editorInstance.setData(value);\r\n            this.isEditorSettingData = false;\r\n        }\r\n        // If not, wait for it to be ready; store the data.\r\n        else {\r\n            // If the editor element is already available, then update its content.\r\n            this.data = value;\r\n            // If not, then wait until it is ready\r\n            // and change data only for the first `ready` event.\r\n            this.ready\r\n                .pipe(first())\r\n                .subscribe((editor) => {\r\n                editor.setData(this.data);\r\n            });\r\n        }\r\n    }\r\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n    registerOnChange(callback) {\r\n        this.cvaOnChange = callback;\r\n    }\r\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n    registerOnTouched(callback) {\r\n        this.cvaOnTouched = callback;\r\n    }\r\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n    setDisabledState(isDisabled) {\r\n        // If already initialized.\r\n        if (this.editorInstance) {\r\n            if (isDisabled) {\r\n                this.editorInstance.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\r\n            }\r\n            else {\r\n                this.editorInstance.disableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\r\n            }\r\n        }\r\n        // Store the state anyway to use it once the editor is created.\r\n        this.initiallyDisabled = isDisabled;\r\n    }\r\n    /**\r\n     * Creates the editor instance, sets initial editor data, then integrates\r\n     * the editor with the Angular component. This method does not use the `editor.setData()`\r\n     * because of the issue in the collaboration mode (#6).\r\n     */\r\n    attachToWatchdog() {\r\n        const creator = async (element, config) => {\r\n            return this.ngZone.runOutsideAngular(async () => {\r\n                this.elementRef.nativeElement.appendChild(element);\r\n                const editor = await this.editor.create(element, config);\r\n                if (this.initiallyDisabled) {\r\n                    editor.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\r\n                }\r\n                this.ngZone.run(() => {\r\n                    this.ready.emit(editor);\r\n                });\r\n                this.setUpEditorEvents(editor);\r\n                return editor;\r\n            });\r\n        };\r\n        const destructor = async (editor) => {\r\n            await editor.destroy();\r\n            this.elementRef.nativeElement.removeChild(this.editorElement);\r\n        };\r\n        const emitError = () => {\r\n            this.ngZone.run(() => {\r\n                this.error.emit();\r\n            });\r\n        };\r\n        const element = document.createElement(this.tagName);\r\n        const config = this.getConfig();\r\n        this.editorElement = element;\r\n        // Based on the presence of the watchdog decide how to initialize the editor.\r\n        if (this.watchdog) {\r\n            // When the context watchdog is passed add the new item to it based on the passed configuration.\r\n            this.watchdog.add({\r\n                id: this.id,\r\n                type: 'editor',\r\n                creator,\r\n                destructor,\r\n                sourceElementOrData: element,\r\n                config\r\n            });\r\n            this.watchdog.on('itemError', (_, { itemId }) => {\r\n                if (itemId === this.id) {\r\n                    emitError();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // In the other case create the watchdog by hand to keep the editor running.\r\n            const editorWatchdog = new EditorWatchdog(this.editor);\r\n            editorWatchdog.setCreator(creator);\r\n            editorWatchdog.setDestructor(destructor);\r\n            editorWatchdog.on('error', emitError);\r\n            this.editorWatchdog = editorWatchdog;\r\n            this.editorWatchdog.create(element, config);\r\n        }\r\n    }\r\n    getConfig() {\r\n        if (this.data && this.config.initialData) {\r\n            throw new Error('Editor data should be provided either using `config.initialData` or `data` properties.');\r\n        }\r\n        const config = { ...this.config };\r\n        // Merge two possible ways of providing data into the `config.initialData` field.\r\n        const initialData = this.config.initialData || this.data;\r\n        if (initialData) {\r\n            // Define the `config.initialData` only when the initial content is specified.\r\n            config.initialData = initialData;\r\n        }\r\n        return config;\r\n    }\r\n    /**\r\n     * Integrates the editor with the component by attaching related event listeners.\r\n     */\r\n    setUpEditorEvents(editor) {\r\n        const modelDocument = editor.model.document;\r\n        const viewDocument = editor.editing.view.document;\r\n        modelDocument.on('change:data', (evt) => {\r\n            this.ngZone.run(() => {\r\n                if (this.disableTwoWayDataBinding) {\r\n                    return;\r\n                }\r\n                if (this.cvaOnChange && !this.isEditorSettingData) {\r\n                    const data = editor.getData();\r\n                    this.cvaOnChange(data);\r\n                }\r\n                this.change.emit({ event: evt, editor });\r\n            });\r\n        });\r\n        viewDocument.on('focus', (evt) => {\r\n            this.ngZone.run(() => {\r\n                this.focus.emit({ event: evt, editor });\r\n            });\r\n        });\r\n        viewDocument.on('blur', (evt) => {\r\n            this.ngZone.run(() => {\r\n                if (this.cvaOnTouched) {\r\n                    this.cvaOnTouched();\r\n                }\r\n                this.blur.emit({ event: evt, editor });\r\n            });\r\n        });\r\n    }\r\n}\r\nCKEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CKEditorComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nCKEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: CKEditorComponent, selector: \"ckeditor\", inputs: { editor: \"editor\", config: \"config\", data: \"data\", tagName: \"tagName\", watchdog: \"watchdog\", disableTwoWayDataBinding: \"disableTwoWayDataBinding\", disabled: \"disabled\" }, outputs: { ready: \"ready\", change: \"change\", blur: \"blur\", focus: \"focus\", error: \"error\" }, providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n            useExisting: forwardRef(() => CKEditorComponent),\r\n            multi: true\r\n        }\r\n    ], usesOnChanges: true, ngImport: i0, template: '<ng-template></ng-template>', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CKEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ckeditor',\r\n                    template: '<ng-template></ng-template>',\r\n                    // Integration with @angular/forms.\r\n                    providers: [\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                            useExisting: forwardRef(() => CKEditorComponent),\r\n                            multi: true\r\n                        }\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { editor: [{\r\n                type: Input\r\n            }], config: [{\r\n                type: Input\r\n            }], data: [{\r\n                type: Input\r\n            }], tagName: [{\r\n                type: Input\r\n            }], watchdog: [{\r\n                type: Input\r\n            }], disableTwoWayDataBinding: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], ready: [{\r\n                type: Output\r\n            }], change: [{\r\n                type: Output\r\n            }], blur: [{\r\n                type: Output\r\n            }], focus: [{\r\n                type: Output\r\n            }], error: [{\r\n                type: Output\r\n            }] } });\n\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\nclass CKEditorModule {\r\n}\r\nCKEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CKEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCKEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CKEditorModule, declarations: [CKEditorComponent], imports: [FormsModule, CommonModule], exports: [CKEditorComponent] });\r\nCKEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CKEditorModule, imports: [[FormsModule, CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: CKEditorModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [FormsModule, CommonModule],\r\n                    declarations: [CKEditorComponent],\r\n                    exports: [CKEditorComponent]\r\n                }]\r\n        }] });\n\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CKEditorComponent, CKEditorModule };\n"],"x_google_ignoreList":[3,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}